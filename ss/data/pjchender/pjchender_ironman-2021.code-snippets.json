{
  "hironman-2021 [Day01] 學了 React 後的下一步？準備好兩把刷子！ pjchender.dev": {
    "prefix": "hironman-2021 [Day01] 學了 React 後的下一步？準備好兩把刷子！ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day01] 學了 React 後的下一步？準備好兩把刷子！</h1></header><p>學了 React 之後的下一步，還能學什麼呢？</p><p>在今年的鐵人賽中，想要來分享這一兩年來開始使用的 TypeScript 和 React Testing 這兩把刷子。</p><p>為什麼是 TypeScript 和 React Testing 呢？主要是因為我認為有了這兩把刷子，將能夠大幅提升程式的可維護性，前者可以讓接手程式碼的人、甚至是三個月後的自己更容易知道當初寫的程式碼要怎麼用，後者可以避免未來重構或需求修改的時候發生自己意想不到的問題。</p><p>學習這些東西不是為了他人也不是為了加薪（很多公司也不會安排額外的時間讓工程師寫測試），而是為了寫出讓自己也更有信心的程式碼。</p><p>那麼，就先來聊聊 TypeScript 的部分吧！</p><p>在 TypeScript 的部分，筆者並不會從 TypeScript 的基本內容開始寫起，而是著重在如何活用與建立 TypeScript 的型別（Utility Types），因此如果你還沒有 TypeScript 基礎，想要快速有個初步了解的話，可以參考筆者過去寫的「<a href=\"https://pjchender.blogspot.com/2020/07/typescript-react-using-typescript-in.html\" target=\"_blank\" rel=\"noopener noreferrer\">了解這些，更快掌握 TypeScript 在 React 中的使用（Using TypeScript in React）</a>」；如果讀者的時間比較充裕，則可以參考 Maxwell Alexius 在 2020 鐵人賽的冠軍文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20120614/ironman/2685\" target=\"_blank\" rel=\"noopener noreferrer\">讓 TypeScript 成為你全端開發的 ACE！ </a>」，看完 Day 15 以前的內容後，相信就能對 TypeScript 的基本型別有很清楚的了解。</p><p>這次希望會比較使用輕鬆小品的方式，每天分享一點內容。期望讀者在看完筆者本次鐵人賽的文章後，可以看懂 TypeScript 內建的 utility type 是怎麼被建立的，像是</p><ul><li><code>Pick</code> 和 <code>Record</code> 為什麼原始碼是這樣：</li></ul><div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Pick</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Record</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><ul><li><code>Exclude</code> 和 <code>Extract</code> 為什麼原始碼是這樣：</li></ul><div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Exclude</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Extract</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><ul><li><code>Parameters</code> 和 <code>ReturnType</code> 為什麼原始碼是這樣：</li></ul><div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Parameters</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">args</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token plain\">args</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ReturnType</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">args</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token plain\">args</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>最後有機會的話，會在挑 <a href=\"https://github.com/sindresorhus/type-fest\" target=\"_blank\" rel=\"noopener noreferrer\">type-fest</a> 中的原始碼，來了解其他開發者是怎麼寫出各種不同的 utility type。</p><p>如果讀者對於上面這些 utility type 原本閱讀上就不費吹灰之力的話，那麼這幾天的內容可能對你來說會太過簡單，可以把時間拿去 follow 其他的文章。</p><p>這裡順便推薦「<a href=\"https://ithelp.ithome.com.tw/2021ironman/signup/team/206\" target=\"_blank\" rel=\"noopener noreferrer\">鐵人賽臻融一</a>」隊友們強得很的內容：</p><ul><li><a href=\"https://ithelp.ithome.com.tw/users/20141641/ironman/4689\" target=\"_blank\" rel=\"noopener noreferrer\">Javascript 從寫對到寫好</a></li><li><a href=\"https://ithelp.ithome.com.tw/users/20141729/ironman/4766\" target=\"_blank\" rel=\"noopener noreferrer\">30 天用 JavaScript 刷題刷起來！</a></li></ul><p>以及好同事們就。很。Pro 的內容：</p><ul><li><a href=\"https://ithelp.ithome.com.tw/users/20130721/ironman/4083\" target=\"_blank\" rel=\"noopener noreferrer\">From State Machine to XState</a></li><li><a href=\"https://ithelp.ithome.com.tw/users/20113277/ironman/3877\" target=\"_blank\" rel=\"noopener noreferrer\">今晚，我想來點 Web 前端效能優化大補帖！</a></li><li><a href=\"https://ithelp.ithome.com.tw/users/20111948/ironman/4306\" target=\"_blank\" rel=\"noopener noreferrer\">前端工程師學習 DevOps 之路</a></li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day02]<!-- --> TS: 泛型（Generics）能幹嘛？ pjchender.dev": {
    "prefix": "hironman-2021 [Day02]<!-- --> TS: 泛型（Generics）能幹嘛？ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day02]<!-- --> TS: 泛型（Generics）能幹嘛？</h1><p>「泛型（Generics）」是 TypeScript 中很常會使用到的功能，泛型的概念簡單來說，就是讓「型別」也變成一個變數，可以根據不同的情況套用不同的型別。因為在強型別的語言中，不論變數或函式的回傳值的型別，都會需要被加以定義。</p><p>舉例來說，如果我們寫一個能夠回傳陣列第一個元素的函式，我們會需要這樣寫：</p><div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getFirstElementOfNumberArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">arr</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> arr</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>你會發現，我們會需要定義這個函式所接受的參數型別，例如這裡是 <code>number[]</code>，且函式回傳值的型別因為是陣列中的第一個元素，所以也會是 <code>number</code>。</p><p>這時候我們可以這樣用：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> firstElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getFirstElementOfNumberArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">9</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">8</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">8</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 1</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但你會發現因為型別定義的關係，這個函式只能接受 <code>number[]</code> 作為它的參數，如果你是想要取出 <code>string[]</code> 的話，因為型別合，TS 會報錯，像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> firstElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getFirstElementOfNumberArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Oh.So.Pro.&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;就。很。Pro&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;非常。Pro&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>你原本可能會預期它應該要取出陣列中的第一個元素給你，也就是「Oh.So.Pro.」，結果 TS 在編譯時卻發生錯誤：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/4IYv3fk.png\" alt=\"TypeScript Generics\" class=\"img_ev3q\"></p><p>這個錯誤並不是因為我們在程式中使用了中文字，而是因為一開始我們定義 <code>getFirstElement</code> 這個函式，只能接受型別為 <code>number[]</code> 的參數，但現在我們卻帶入了型別為 <code>string[]</code> 的參數。</p><p>如果沒有泛型的話，我們變成需要針對 <code>string[]</code> 的參數多寫一個函式，取名為 <code>getFirstElementOfStringArray</code> 像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 定義一個能夠接受 string[] 作為參數的函式</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getFirstElementOfStringArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">arr</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> arr</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如此就能正確呼叫這個函式：</p><div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> firstElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getFirstElementOfStringArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Oh. So. Pro.&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;就很 Pro&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;非常 Pro&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">console</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">log</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;Oh. So. Pro.&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候你會發現，在不管型別的情況下，<code>getFirstElementOfNumberArray</code> 和 <code>getFirstElementOfNumberArray</code> 這兩個函式明明就內容是完全相同的，但卻因為型別的限制，逼著我們要拆成兩個不同的函式。</p><p>好在，在 TypeScript 中有泛型可以使用，前面有提到，泛型的概念其實就像是把型別也變成一個變數，回到上面這兩個 function 來看，你會發現這兩個函式完全只差在「型別」是不同的（下圖粉色框框）：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/acchAq0.png\" alt=\"TypeScript Generics\" class=\"img_ev3q\"></p><p>因此這時候我們可以做一個抽象化的動作，把這個型別也變成一個變數，這裡取名叫 <code>T</code>，就可以把這兩個只有型別不同的函式整合成一個，變成這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">getFirstElement</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">arr</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> arr</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如此在使用 <code>getFirstElement</code> 時，你可以把型別當成變數一樣，放入 <code>&lt;T&gt;</code> 的 T 中，明確告訴 TypeScript 這時候的函式參數型別是什麼，像是這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Rn9GDev.png\" alt=\"TypeScript Generics\" class=\"img_ev3q\"></p><p>有了泛型的好處是，你將不在需要只因為型別的不同而要才成多個不同的函式。</p><p>更重要的是，<strong>一般來說，我們不需要明確在 <code>&lt;&gt;</code> 中告訴 TS 使用的參數型別是什麼，而是可以讓 TS 自己推導（稱作：type argument inference）</strong>，因此，我們更常直接這樣寫：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// TS 會自動根據帶入的參數推導這裡的 T 是 number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> firstElement1 </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getFirstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">9</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">8</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">8</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// TS 會自動根據帶入的參數推導這裡的 T 是 string</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> firstElement2 </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getFirstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Oh.So.Pro.&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;就。很。Pro&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;非常。Pro&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>當我們把滑鼠移到函式上方時，可以看到 TS 自動推導的結果：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/WLR2oJ3.png\" alt=\"TypeScript Generics\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"type-alias-也能使用泛型\">Type Alias 也能使用泛型<a href=\"#type-alias-也能使用泛型\" class=\"hash-link\" aria-label=\"Type Alias 也能使用泛型的直接連結\" title=\"Type Alias 也能使用泛型的直接連結\">​</a></h2><p>除了在函式中可以使用泛型外，在 Type Alias 中也可以使用泛型的概念。</p><p>假設一般來說 <code>age</code> 的型別是 <code>number</code>：</p><div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> john</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Person </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">20</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但某種形況下，age 會用中文字來表示，例如「<code>二十</code>」，這時候你會發現再次發生型別的錯誤，因為我們試圖把 string 帶入型別為 number 的欄位中：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/pTPFS2d.png\" alt=\"TypeScript Generics\" class=\"img_ev3q\"></p><p>這時候，如果沒有泛型的話，將只能像這樣建立兩個不同的型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonWithNumberAge</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonWithStringAge</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但有了泛型的話，更好的方式就是使用泛型，像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>使用時就可以這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> john1</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">30</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> john2</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;二十&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><blockquote><p>由於 type alias 並不像函式一樣有 type argument inference，因此需要明確把型別定義在 <code>&lt;&gt;</code> 中，如上面的 <code>&lt;number&gt;</code> 和 <code>&lt;string&gt;</code>。</p></blockquote><p>透過泛型，能夠把型別當成變數使用，是不是非常方便啊！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/m3z43N\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/m3z43N</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/generics.html\" target=\"_blank\" rel=\"noopener noreferrer\">Generics</a> @ TypeScript &gt; Type Manipulations</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#type-aliases\" target=\"_blank\" rel=\"noopener noreferrer\">Type Alias</a> @ TypeScript &gt; Everyday Types</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day03]<!-- --> TS：泛型就。很。泛！用 extends 來加上一點限制吧 pjchender.dev": {
    "prefix": "hironman-2021 [Day03]<!-- --> TS：泛型就。很。泛！用 extends 來加上一點限制吧 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day03]<!-- --> TS：泛型就。很。泛！用 extends 來加上一點限制吧</h1><p>昨天我們提到了泛型（generics）的使用，但泛型就像一個型別為 <code>any</code> 的變數一樣，使用者愛帶什麼型別都可以，基本上是沒有型別上的限制，但有些時候我們想要使用泛型，讓函式或 type alias 可以不只適用於一種型別，但有希望能對使用者帶入的型別有一點限制的話，可以怎麼做呢？</p><p>在 TypeScript 中提供了「泛型限制（Generic Constraints）」的用法，語法上只需要使用 <code>extends</code> 就可以了！</p><p>一般 TypeScript 的初學者看到 <code>extends</code> 時，直覺上會想到的是可以拿來擴展某一個介面（interfaces）使用，像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  occupation</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 extends 來擴展另一個 interface</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Author</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>就可以建立一個新的 <code>Author</code> interface，且讓它帶有 <code>Person</code> 中所定義的屬性：</p><div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> aaron</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Author </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">33</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  occupation</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;developer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;PJ&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Chen&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>或者另一個很多人會想到的是 JavaScript 中「<strong>類別繼承（class extends）</strong>」的使用，例如：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Square</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">constructor</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token keyword\" style=\"font-style:italic\">public</span><span class=\"token plain\"> width</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 extends 來繼承另一個 class 的屬性</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Rectangle</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Square</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">constructor</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">width</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">public</span><span class=\"token plain\"> height</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">super</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">width</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> square </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Square</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">10</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> rectangle </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Rectangle</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">10</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">20</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使用-extends-來限制泛型可接受的型別\">使用 extends 來限制泛型可接受的型別<a href=\"#使用-extends-來限制泛型可接受的型別\" class=\"hash-link\" aria-label=\"使用 extends 來限制泛型可接受的型別的直接連結\" title=\"使用 extends 來限制泛型可接受的型別的直接連結\">​</a></h2><p>然而，在 TypeScript 中的 <code>extends</code> 除了上述用法外，還被賦予了更多的功能，像是可以用來限制泛型可被帶入的型別（generic constraints）或是作為型別的條件判斷（conditional types）。<strong>在這種情況下，<code>extends</code> 比較好理解的中文應該是「需要滿足 ooo」，但更精確的是指「是 ooo 的子集合」</strong>。今天就先來看一下如何透過 extends 來限制泛型可被帶入的型別。</p><blockquote><p><code>extends</code> 在建立 Type Utility 是非常容易用到，因此我們在後面幾天也會一直看到它。</p></blockquote><p>先來看一下昨天寫的函式：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">getFirstElement</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">arr</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> arr</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> firstElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>假設現在我們希望限制這個 T 只能是數值（number）的話，可以搭配 extends 寫成 <code>&lt;T extends number&gt;</code>，意思就是限制使用者帶入的泛型 「T 需要時 number 的子集合」：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/90NNDRa.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><p>更精確的來說，應該是指「<code>T</code> 要是 <code>number</code> 的子集合（subset）」，如果用集合的圖示來表達的話，會像這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/oQttEHO.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><p>這時候如果我們在呼叫 <code>getFirstElement</code> 時，帶入的卻是 <code>string[]</code> 的話，TS 就會報錯，因為 T 現在是 string，但 T 並是 number 的子集合：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/5eXP5UY.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><p>畫成圖的概念會像這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/RAgRPOf.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><p>同樣的，如果是希望泛型 T 只能帶入 string 或 number 的話，則可以寫成 <code>&lt;T extends number | string&gt;</code>，意思就是 T 這個泛型不能什麼都接受，它需要時 string 或 number 的子集合才行，像是這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/irlzUbw.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><p>這時候如果使用者帶入的泛型不是 number 或 string 的話 TS 就會報錯。例如，下圖帶的是 boolean：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/brlFBG8.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><p>到這裡你可能雖然知道了「<strong>喔～原來 <code>extends</code> 還能當成『需要滿足 ooo』</strong>」的意思，但卻還不知道實際的使用時機。</p><p>關於這點我們會在後面幾天看到很多實際的例子，這裡先提供一個簡單的範例，假設有一個函式可以輸出姓名，它可以：</p><ol><li>接受「任何型別的物件」當作參數</li><li>但因為它要輸出姓名，所以參數本身有一個限制，就是物件中至少要有 <code>firstName</code> 和 <code>lastName</code> 這兩個屬性</li></ol><p>一開始可能會這樣寫這個 function：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">logPersonName</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">person</span><span class=\"token template-string interpolation punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token template-string interpolation\">firstName</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\"> </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">person</span><span class=\"token template-string interpolation punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token template-string interpolation\">lastName</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但這時候因為 TypeScript 沒辦法確保泛型 <code>T</code> 中一定有 <code>firstName</code> 和 <code>lastName</code> 這兩個屬性，因此會報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/jSeUvIb.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><p>這時候就可以透過 generic constraints 的方式，限制使用者帶入的泛型的型別至少要包含 <code>firstName</code> 和 <code>lastName</code> 這兩個屬性，其他的屬性 TypeScript 則不管。</p><p>可以寫成這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonName</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 T extends PersonName，限制 T 一定要是 PersonName 型別的子集合</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">logPersonName</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> PersonName</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">person</span><span class=\"token template-string interpolation punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token template-string interpolation\">firstName</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\"> </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">person</span><span class=\"token template-string interpolation punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token template-string interpolation\">lastName</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候因為能夠確保帶入 function 參數的泛型 T 一定有 <code>firstName</code> 和 <code>lastName</code> 這兩個屬性，所以 TypeScript 就不會再報錯，使用者也可以帶入任何物件，只要這個物件中包含這兩個必要的屬性：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 只要使用者帶入的物件包含 firstName 和 lastName 就好（符合對泛型的限制）</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 其他多餘的物件屬性 TypeScript 不會管</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">logPersonName</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Aaron&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Chen&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  occupation</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;developer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">logPersonName</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;PJ&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Chen&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  favorite</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;smart doctor&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但如果帶入的物件少了 <code>firstName</code> 或 <code>lastName</code> ，則 TS 就會直接報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/LdhFDaf.png\" alt=\"Generic Constraints\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"primitive-type-和-object-的表現會感覺不太一樣\">Primitive type 和 Object 的表現會「感覺」不太一樣<a href=\"#primitive-type-和-object-的表現會感覺不太一樣\" class=\"hash-link\" aria-label=\"Primitive type 和 Object 的表現會「感覺」不太一樣的直接連結\" title=\"Primitive type 和 Object 的表現會「感覺」不太一樣的直接連結\">​</a></h2><p>如果有仔細閱讀的讀者，應該會發現讀到這裡好像哪裡怪怪的，最一開始的例子是 Primitive Type，如果用 <code>T extends number</code> 的話，這個 T 就只能是 <code>number</code>，不能是 <code>string | number</code>；但如果是 Object 的話，當使用 <code>T extends {firstName: string}</code>，這時候即使 T 是 <code>{firstName: string, lastName: string}</code> 也是可以的。這樣的情況在 TypeScript 中的 <a href=\"../../typescript/ts-unions-intersections/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">Unions and Intersection Types</a> 也可以看到類似的現象。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"type-alias-中的-generics-中同樣適用-extends-來限制泛型\">Type Alias 中的 Generics 中同樣適用 extends 來限制泛型<a href=\"#type-alias-中的-generics-中同樣適用-extends-來限制泛型\" class=\"hash-link\" aria-label=\"Type Alias 中的 Generics 中同樣適用 extends 來限制泛型的直接連結\" title=\"Type Alias 中的 Generics 中同樣適用 extends 來限制泛型的直接連結\">​</a></h2><p>關於使用 <code>extends</code> 來限制泛型可被接受型別的用法同樣適用在 type alias 上，例如：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonNameType</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> PersonNameType</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>意思一樣是泛型 <code>T</code> 可以是任何型別，但它至少要是 <code>PersonName</code> 這個型別的子集合，也就是要有 <code>firstName</code> 和 <code>lastName</code> 這兩個屬性。使用時會像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">/**</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\"> * T 等於</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\"> * {</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\"> *   firstName: string;</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\"> *   lastName: string;</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\"> *   occupation: string;</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\"> * }</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\"> * */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> pjchender</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  occupation</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;PJ&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Chen&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  occupation</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;developer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>後面我們會再看到更多例子，到時候會更清楚 <code>extends</code> 在泛型中的使用。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/Wv89rN\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/Wv89rN</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/generics.html\" target=\"_blank\" rel=\"noopener noreferrer\">Generics</a> @ TypeScript &gt; Type Manipulations</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day04]<!-- --> TS：如何把物件型別的所有屬性名稱取出變成 union type？試試看 keyof 吧！ pjchender.dev": {
    "prefix": "hironman-2021 [Day04]<!-- --> TS：如何把物件型別的所有屬性名稱取出變成 union type？試試看 keyof 吧！ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day04]<!-- --> TS：如何把物件型別的所有屬性名稱取出變成 union type？試試看 keyof 吧！</h1><p>前面兩天的文章中我們談到泛型（generics）的使用，以及如何透過 <code>extends</code> 來限制泛型可被帶入的型別。在後面的內容中，會越來越著重在如何透過 type 來產生另一個 type。</p><p>今天就來看看 <code>keyof</code> 的使用。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"區分物件型別type和物件value\">區分物件型別（type）和物件（value）<a href=\"#區分物件型別type和物件value\" class=\"hash-link\" aria-label=\"區分物件型別（type）和物件（value）的直接連結\" title=\"區分物件型別（type）和物件（value）的直接連結\">​</a></h2><p><code>keyof</code> 顧名思義就是把「物件型別（object type）」的 key 拿出來，但要留意的是，這裡提到的是「物件型別」，而不是真的「物件」，前者是 TypeScript 的型別，後者是 JavaScript 中的一個物件（object）：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Person 是一個 object type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firsName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// person 是 JavaScript 的 object (value)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> person </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Aaron&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Chen&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果不小心把真正的 object 當成 typescript 的 type 來使用的話，因為它不是型別的緣故，TypeScript 是會報錯的：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/khaGnv4.png\" alt=\"Typescript value and type\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"keyof-operator-的使用\">keyof operator 的使用<a href=\"#keyof-operator-的使用\" class=\"hash-link\" aria-label=\"keyof operator 的使用的直接連結\" title=\"keyof operator 的使用的直接連結\">​</a></h2><p>而這裡提到的 <code>keyof</code> 就只能用在「物件型別」上，使用方式非常簡單：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Person 是一個 object type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firsName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonKey</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>滑鼠移到 <code>PersonKey</code> 上後將會看到：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/QpxKyGD.png\" alt=\"typescript keyof\" class=\"img_ev3q\"></p><p>實際上的意思則是 <code>&quot;firsName&quot; | &quot;lastName&quot;</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/0aoAEGZ.png\" alt=\"typescript keyof\" class=\"img_ev3q\"></p><p>簡單來說，透過 <code>keyof</code> operator，就可以取出物件型別的 key，並建立成一個新的 type：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/SRmD99Q.png\" alt=\"typescript keyof operator\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"搭配--string-使用\">搭配 &amp; string 使用<a href=\"#搭配--string-使用\" class=\"hash-link\" aria-label=\"搭配 &amp; string 使用的直接連結\" title=\"搭配 &amp; string 使用的直接連結\">​</a></h2><p>由於「物件型別（object types）」的屬性名稱不一定是 <code>string</code>，也有可能是 <code>number</code> 或 <code>symbol</code>，因此若有需要的話，可以搭配交集（<code>&amp;</code>）的使用，也就是 <code>&amp; string</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonKey</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> Person </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><blockquote><p>註：「物件型別」的 key 可以是 <code>string</code> 或 <code>number</code>，但 JavaScript 中「物件」的 key 只會是 <code>string</code> 或 <code>symbol</code>。</p></blockquote><p>這時候 TS 就會明確知道說你要取出的是型別為 string 的 object key：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/w4sCPQx.png\" alt=\"typescript keyof\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"小知識any-的-keyof-是\">小知識：any 的 keyof 是？<a href=\"#小知識any-的-keyof-是\" class=\"hash-link\" aria-label=\"小知識：any 的 keyof 是？的直接連結\" title=\"小知識：any 的 keyof 是？的直接連結\">​</a></h2><p>在 TypeScript 中，透過 <code>keyof</code> 則可以看到 <code>any</code> 的型別是 <code>string | number | symbol</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">KeyOfAny</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// type KeyOfAny = string | number | symbol</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>也就是說，在 TypeScript 中，能接受作為 key 的型別只能是 string、number 或 symbol，其他的型別像是 boolean 或 function 是不能被當作 key 的。</p><p>當我們試著把 object key 指定為 boolean 時，TS 會報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/L84PAcM.png\" alt=\"TypeScript keyof\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/keyof-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Keyof Type Operator</a> @ TypeScript &gt; Type Manipulation</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#object-types\" target=\"_blank\" rel=\"noopener noreferrer\">Object Types</a> @ TypeScript &gt; Everyday Types</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day05]<!-- --> TS：如何把物件型別的所有屬性值取出變成 union type？試試 Indexed Access Types pjchender.dev": {
    "prefix": "hironman-2021 [Day05]<!-- --> TS：如何把物件型別的所有屬性值取出變成 union type？試試 Indexed Access Types pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day05]<!-- --> TS：如何把物件型別的所有屬性值取出變成 union type？試試 Indexed Access Types</h1><p>昨天我們知道可以使用 <code>keyof</code> 的方式取出物件屬性 key，那麼如果我們是想要取出物件型別中屬性值的型別呢？</p><p>例如，有一個物件型別 <code>Person</code> 長這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firsName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isEmployed</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>假設我們想要取出 Person 物件型別中 <code>age</code> 的型別時，方式很簡單，可以像 JavaScript 使用 bracket syntax 來取出物件屬性值的方法一樣，像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 建立一個新的名稱為 AgeOfPerson 的型別</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 它的型別會是 Person 物件屬性 &quot;age&quot; 值的型別</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">AgeOfPerson</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;age&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如此就可以得到它 <code>AgeOfPerson</code> 的型別會是 <code>number</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/IcIy8d3.png\" alt=\"Indexed Access Types\" class=\"img_ev3q\"></p><p>而這種透過 Object 的 Index 來取得其型別的方式，就稱作是 Indexed Access Type：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/gCA5xnT.png\" alt=\"indexed access types\" class=\"img_ev3q\"></p><p>如果想要取得的不只是 <code>age</code> 的屬性值型別，還想同時取出 <code>isEmployed</code> 的屬性型別值的話，同樣的可以搭配使用 union type：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">AgeAndIsEmployedOfPerson</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;age&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isEmployed&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>可以得到 <code>AgeAndIsEmployedOfPerson</code> 的型別就會是 <code>number | boolean</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/hsmtMdH.png\" alt=\"keyof operator\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"要如何取出所有物件型別的屬性值呢\">要如何取出所有物件型別的屬性值呢？<a href=\"#要如何取出所有物件型別的屬性值呢\" class=\"hash-link\" aria-label=\"要如何取出所有物件型別的屬性值呢？的直接連結\" title=\"要如何取出所有物件型別的屬性值呢？的直接連結\">​</a></h2><p>那麽如果想要取出的是該物件型別中的「所有屬性值的型別」的話可以怎麼做呢？</p><p>從上一個段落可以看到，在 <code>[]</code> 中以 union type 帶入多個 key 的話，就可以取出不只一個物件屬性值的型別，現在如果想要取得的是所有物件型別的屬性值，是不是只需要把物件型別的所有 key 先組成 union type 後，再代入 <code>[]</code> 就可以了呢？</p><p>這裡的關鍵字是「<strong>把物件型別的所有 key 先組成 union type</strong>」。這不就是昨天的內容嗎？</p><p>也就是說，使用昨天提到的 <code>keyof Person</code>，就可以取得所有物件型別的 key，並組成 union type，接著只要把它帶入 <code>[]</code> 內：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/XHDoSTQ.png\" alt=\"keyof operator\" class=\"img_ev3q\"></p><p>結果就和我們預期的一樣，<code>ValuesOfPerson</code> 會是 <code>Person</code> 這個物件型別的所有屬性值所組出來的 union type，也就是 <code>string | number | boolean</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/5xbhNhQ.png\" alt=\"keyof operator\" class=\"img_ev3q\"></p><p>因此，當你未來有需要<strong>取得所有物件型別中的屬性值時，記得使用 keyof operator + indexed access types</strong> 的組合技。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Indexed Access Types</a> @ TypeScript &gt; Type Manipulation</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day06]<!-- --> TS：整合前幾天所學，來寫個 Generic Functions 吧！ pjchender.dev": {
    "prefix": "hironman-2021 [Day06]<!-- --> TS：整合前幾天所學，來寫個 Generic Functions 吧！ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day06]<!-- --> TS：整合前幾天所學，來寫個 Generic Functions 吧！</h1><p>這幾天的內容中，我們已經學到了幾個重點：</p><ul><li>泛型（generics）的使用</li><li>使用 <code>extends</code> 限制泛型</li><li><code>keyof</code> 的使用</li><li>Indexed Access Types 的使用</li></ul><p>現在讓我們結合這幾天的內容來試著寫個簡單的函式，這個函式名稱是 <code>getObjValue</code>，功能很簡單，它可以接受兩個參數，第一個參數是物件，第二個參數是該物件中的 key，回傳的內容就是物件中對應到該 key 的 value。最終寫起來會像這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/zQZ3yEl.png\" alt=\"generics type\" class=\"img_ev3q\"></p><p>使用方式會像這樣：</p><div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> user </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;PJ&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Chen&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">35</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">isAdmin</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> product </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;iPad mini&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">price</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">14900</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">manufacturer</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token literal-property property\">madeIn</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;China&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> isAdmin </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">user</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isAdmin&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> manufacturer </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">product</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;manufacturer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;Apple&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>同樣的，如果你原本就已經看得懂上面這個函式的寫法，歡迎直接左轉去看我同事 Kyle 「<a href=\"https://ithelp.ithome.com.tw/users/20113277/ironman/3877\" target=\"_blank\" rel=\"noopener noreferrer\">今晚，我想來點 Web 前端效能優化大補帖！</a>」的精彩文章！。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"試著寫出這個函式\">試著寫出這個函式<a href=\"#試著寫出這個函式\" class=\"hash-link\" aria-label=\"試著寫出這個函式的直接連結\" title=\"試著寫出這個函式的直接連結\">​</a></h2><p>首先，讓我們先不管 TypeScript，用原有 JavaScript 的知識寫出這個函式，寫起來會像這樣：</p><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token parameter\">obj</span><span class=\"token parameter punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token parameter\"> key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但這個函式在沒有型別保護的情況下，很有可能會呼叫到了根本不存在該 obj 中的 key，進而取不到值。例如，我們以為 user 物件中有 <code>title</code> 這個屬性，但實際上卻沒有：</p><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 在沒有型別保護的情況下，很有可能會呼叫到了根本不存在該 obj 中的 key，進而取不到值</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> title </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">user</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;title&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// undefined</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果我們又直接拿這個 <code>title</code> 去做其他的操作，就有可能會發生錯誤。</p><p>現在請讀者試著把它改成 TypeScript 的寫法。</p><p>你可以把物件 <code>user</code> 和函式 <code>getObjValue</code> 貼到 <a href=\"https://www.typescriptlang.org/play\" target=\"_blank\" rel=\"noopener noreferrer\">TypeScript Playground</a> 中練習看看。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"試著定義函式的型別\">試著定義函式的型別<a href=\"#試著定義函式的型別\" class=\"hash-link\" aria-label=\"試著定義函式的型別的直接連結\" title=\"試著定義函式的型別的直接連結\">​</a></h2><p>預設的情況下，如果我們沒有定義參數的型別，它的型別會是 <code>any</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/mmQ1Ggz.png\" alt=\"TypeScript Type Utility\" class=\"img_ev3q\"></p><p>但這並不是我們想要的情況，因為 <code>any</code> 代表 TypeScript 完全無法掌握這個函式的型別，也同樣無法避免去取到該物件中不存在的屬性。</p><p>我們可以用剛剛定義好的 <code>user</code> 物件來想想看要怎麼定義這個函式的型別。首先因為函式的參數 <code>obj</code> 和 <code>key</code> 都需要被明確的給予型別，所以可以：</p><ol><li>定義 <code>User</code> 型別</li><li><code>obj</code> 可以接受的型別是 <code>User</code></li><li><code>key</code> 需要是 obj 中帶有的屬性 key，</li></ol><p>寫起來會像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// STEP 1：定義 `User` 的型別</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">User</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAdmin</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// STEP 2：使用 `User` 的型別來定義 `obj` 和 `key` 的型別</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> getObjValue </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> User</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;firstName&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;lastName&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;age&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isAdmin&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>你會注意到，在 <code>key</code> 的型別中，我們列出了所有 User 這個物件型別可能有的屬性名稱（<code>&#x27;firstName&#x27; | &#x27;lastName&#x27; | &#x27;age&#x27; | &#x27;isAdmin&#x27;</code>），稍微思考一下前幾週所學的內容，應該會發現可以用 <code>keyof</code> 來取代這樣的寫法，否則未來如果 <code>user</code> 的物件有添加新的屬性時，就還需要去修改 <code>key</code> 的型別定義，非常不方便，也不符合 single source of truth 的原則。</p><p>因此可以把函式改成這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Prm8kmu.png\" alt=\"keyof operator\" class=\"img_ev3q\"></p><p>是不是精簡了不少？</p><p>這時候就可以確保使用 <code>getObjValue</code> 的開發者不會發生想要在 <code>user</code> 物件中去取得 <code>title</code> 屬性的情況，因為 TypeScript 會知道 <code>title</code> 這個屬性並不存在 <code>User</code> 中，它會直接報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/YAsqDjE.png\" alt=\"typescript\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"試著使用泛型\">試著使用泛型<a href=\"#試著使用泛型\" class=\"hash-link\" aria-label=\"試著使用泛型的直接連結\" title=\"試著使用泛型的直接連結\">​</a></h2><p>這樣做雖然可以避免開發者誤用不存在 User 型別中的屬性，但因為我們指定了 <code>obj</code> 的型別是 <code>User</code>，進而導致這個函式變成只能針對 <code>User</code> 型別才能使用，如果 <code>obj</code> 不是 User 的話，就完全沒辦法再使用 <code>getObjValue</code>。</p><p>例如，現在想要取出的是 product 物件中 <code>name</code> 屬性的 value，但因為 <code>product</code> 物件不滿足先前定義的 <code>User</code> 型別，所以 TypeScript 會報錯：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> User</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> User</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> product </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;iPad mini&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  price</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">14900</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  manufacturer</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  madeIn</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;China&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// product 並不滿足 User 的型別</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">product</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;name&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ❌ TypeScript compile error</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>我們不會想要每當有不同的物件時，就寫一個新的、但功能完全一樣的函式，這樣 <code>getObjValue</code> 就太不好用了：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 如果不使用泛型...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">getObjValueOfUser</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> User</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> User</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">getObjValueOfProduct</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Product</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> Product</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候你是否有回憶起前幾天提到「泛型」這個好用的東東，讓我們試著把上面共同的部分抽出來，變成一個泛型的變數：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/LJ6sBv5.png\" alt=\"TypeScript generics\" class=\"img_ev3q\"></p><p>可以看到，<code>User</code> 和 <code>Product</code> 就是可以被抽出來變成泛型變數的部分，變成這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如此，這個函式就可以同時帶入任何的物件而不需要重複定義函式，如果使用者用了物件中不存在的屬性時 TypeScript 一樣會提出警告：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> user </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;PJ&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Chen&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">35</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAdmin</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> product </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;iPad mini&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  price</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">14900</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  manufacturer</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  madeIn</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;China&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> isAdmin </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">user</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isAdmin&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> manufacturer </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">product</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;manufacturer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;Apple&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><blockquote><p>如同在<a href=\"https://ithelp.ithome.com.tw/articles/10265710\" target=\"_blank\" rel=\"noopener noreferrer\">第二天</a>針對<a href=\"https://ithelp.ithome.com.tw/articles/10265710\" target=\"_blank\" rel=\"noopener noreferrer\">泛型</a>所提到的，如果沒有在 <code>&lt;&gt;</code> 中指定泛型參數的型別，TypeScript 會自動根據帶入函式的參數來推導泛型的型別（<strong>type argument inference</strong>），這就是為什麼這裡可以不用寫成 <code>getObjValue&lt;User&gt;(...)</code> 這種明確告知泛型型別的方式。</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"如果有需要可以限制泛型\">如果有需要，可以限制泛型<a href=\"#如果有需要可以限制泛型\" class=\"hash-link\" aria-label=\"如果有需要，可以限制泛型的直接連結\" title=\"如果有需要，可以限制泛型的直接連結\">​</a></h2><p>上面 <code>getObjValue</code> 一般來說使用上已經沒有什麼問題了，但如果我們希望把 <code>key</code> 的型別也變成一個泛型的參數，讓使用這個函式的開發者可以自己決定要帶入的 key 型別是什麼時（例如，只能取出該物件中的部分屬性），可以怎麼做呢？</p><p>這時候第一步就是把 <code>key</code> 的型別，也變成一個泛型的參數，這裡稱作 <code>U</code>，讓使用者有自行決定 key 的型別（<code>U</code>）的機會：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">obj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但這時候 TypeScript 會報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/q1evlrM.png\" alt=\"generic constraints\" class=\"img_ev3q\"></p><p>這個錯誤的意思是說，TypeScript 沒辦法確認 U 一定是 T 的 index，換成比較好理解的方式就是，因為 <code>U</code> 太泛了，沒辦法保證物件 T 中有 U 這個 key 存在。為了要解決這個問題，可以使用在 <a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">Day03</a> 學到的<a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">泛型限制</a>，透過 <code>extends</code> 來確保 <code>U</code> 一定是物件型別 T 裡存在的 key：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/CEYmv0Z.png\" alt=\"generic constraints\" class=\"img_ev3q\"></p><p>就像這樣，使用了 <code>U extends keyof T</code> 的方式，來確保泛型 U 一定滿足物件型別 T 的 key。</p><p>如果我們把滑鼠移到 <code>getObjValue</code> 這個函式時，留意一下它寫的這個函式會回傳的型別，你會發現它寫的是 <code>T[U]</code>，而這不就是我們昨天提到的 indexed access types 嗎？<code>T</code> 是物件型別，<code>U</code> 是物件的 key，<code>T[U]</code> 就是該屬性值的型別：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/hhQC5jA.png\" alt=\"indexed access types\" class=\"img_ev3q\"></p><p>最後，使用者如有需要可以自行指定泛型的型別，並限制 <code>getObjValue</code> 能夠取用的 key 的型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Product</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  price</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  manufacturer</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  madeIn</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 限制這裡的 getObjValue 只能取用物件中的 &#x27;manufacturer&#x27; | &#x27;price&#x27; 這兩個屬性</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> age </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">getObjValue</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\">Product</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name string\" style=\"color:rgb(195, 232, 141)\">&#x27;manufacturer&#x27;</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name string\" style=\"color:rgb(195, 232, 141)\">&#x27;price&#x27;</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">product</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;manufacturer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果在定義 key 的型別時，不小心寫了原本就不存在物件中的屬性時，TypeScript 一樣會提早告知錯誤。例如這裡，試著在定義 key 的型別時，取用了不存在 Product 型別中的屬性 key <code>age</code>，TS 就會跳出錯誤：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/3RY8KOq.png\" alt=\"generic constraints\" class=\"img_ev3q\"></p><p>這個簡單的 <code>getObjValue</code> 函式，就用了多個前幾天提到的知識點，如果有對那個部分感到不熟悉，都可以翻閱前幾天的內容對照著看。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"generic-function-可以作為-type-使用\">Generic Function 可以作為 Type 使用<a href=\"#generic-function-可以作為-type-使用\" class=\"hash-link\" aria-label=\"Generic Function 可以作為 Type 使用的直接連結\" title=\"Generic Function 可以作為 Type 使用的直接連結\">​</a></h2><blockquote><p><a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/#instantiation-expressions\" target=\"_blank\" rel=\"noopener noreferrer\">Instantiation Expressions</a> @ microsoft devblogs</p></blockquote><p>在 TypeScript 4.7 以前，TypeScript 是根據 generic function 被帶入的參數來自動推導該函式參數的型別，但有些時候我們希望能夠直接指定這個 Generic Function 帶入的泛型的型別是什麼，在 TypeScript 4.7 後，可以直接把 generic function 帶入型別，它會回傳另一個已經「限制特定型別」的 function，非常方便：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Instantiation Expressions</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">greet</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> name</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">value</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">Hello </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">value</span><span class=\"token template-string interpolation punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token template-string interpolation\">name</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">People</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Pet</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> breed</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 可以直接把型別帶入</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> greetPeople </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> greet</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">People</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> greetPet </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> greet</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Pet</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"泛型函式使用小訣竅\">泛型函式使用小訣竅<a href=\"#泛型函式使用小訣竅\" class=\"hash-link\" aria-label=\"泛型函式使用小訣竅的直接連結\" title=\"泛型函式使用小訣竅的直接連結\">​</a></h2><ul><li><strong>先用實際的型別來達成你想要的功能，在將可以共用的部分抽成泛型的變數</strong></li><li><strong>除非函式的「參數間及回傳值間」有所關聯，否則你可能不需要用到泛型</strong></li><li>除非有需要，否則能用越少的泛型參數來達成想要的功能越好</li><li>如果泛型太泛而導致 TS 報錯時，可以使用 generic constrains 提供的 <code>extends</code> 來限制泛型，但如果能在不限制的形況下就完成想要的功能，就不要給予多餘的限制</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/mqvrQW\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/mqvrQW</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/generics.html\" target=\"_blank\" rel=\"noopener noreferrer\">Generics</a> @ TypeScript &gt; Type Manipulation</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/functions.html#generic-functions\" target=\"_blank\" rel=\"noopener noreferrer\">Generic Functions</a> @ TypeScript &gt; More on Functions</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day07]<!-- --> TS：什麼是 Utility Types？ pjchender.dev": {
    "prefix": "hironman-2021 [Day07]<!-- --> TS：什麼是 Utility Types？ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day07]<!-- --> TS：什麼是 Utility Types？</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/TUenqXn.png\" alt=\"Utility Type\" class=\"img_ev3q\"></p><p>上面這個是今天會提到的內容，如果你已經可以輕鬆看懂，歡迎直接左轉去看我同事 Andy 「<a href=\"https://ithelp.ithome.com.tw/users/20111948/ironman/4306\" target=\"_blank\" rel=\"noopener noreferrer\">前端工程師學習 DevOps 之路</a>」的精彩文章！。</p><p>昨天我們整合了過去所學的知識寫了一個函式，後面我們會提到更多 TypeScript 中用來建立 Utility Types 所需的知識，但今天讓我們繼續熟悉前幾天學到的內容，並試著建立一些常用的 Utility Types 吧！</p><p>前幾天學到的：</p><ul><li>泛型（generics）的使用</li><li>使用 <code>extends</code> 限制泛型</li><li><code>keyof</code> 的使用</li><li>Indexed Access Types 的使用</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"utility-types-是什麼\">Utility Types 是什麼<a href=\"#utility-types-是什麼\" class=\"hash-link\" aria-label=\"Utility Types 是什麼的直接連結\" title=\"Utility Types 是什麼的直接連結\">​</a></h2><p>一般寫程式時，或多或少會寫過一些 utility function，它們就像小工具，可以接受 input 然後做了某些處理後回傳 output，舉例來說，以阿拉伯數字作為 input，接著以中文的數字作為 output；或者以字串作為 input，根據某些字元拆成陣列後作為 output。不管功能是什麼，這種「小工具」類，有 input 和 output 的函式，就可以稱作 utility。</p><p>除了函式之外，在 TypeScript 中，也有不少處理型別的小工具可以使用，和前面提到的 utility functions 最大的不同在於，代入 Utility Types 的 input 會是 TypeScript 的「型別」，而不是一般的 JavaScript value，也就是說，Utility Types 會以「型別」作為 input，並且以另一個「型別」作為 output，也就是說，<strong>Utility Types 就像函式一樣可以帶入 input 得到 output，透過 Utility Types 將可以「根據一個型別，來建立出另一個型別」</strong>。</p><p>Utility Types 有時也稱作 Type Function，TypeScript 本身就有許多內建的 <a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Utility Types</a>，像是 <code>Partial</code>、<code>Required</code>、<code>Record</code>、...等等。這裡我們先來看一下比較基本的，先對 Utility Types 有一點感覺，等後面學到更多知識後，再來看其他更進階的。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"建立一些簡單的-utility-types\">建立一些簡單的 Utility Types<a href=\"#建立一些簡單的-utility-types\" class=\"hash-link\" aria-label=\"建立一些簡單的 Utility Types的直接連結\" title=\"建立一些簡單的 Utility Types的直接連結\">​</a></h2><p>今天這裡所提到的一些 Utility Types 讀者們可能會覺得有點雞肋，似乎不需要建立 Utility Types 就可以達到一樣的功能，不過相信我，等到後面掌握更多 TypeScript 的知識後，讀者將會有一種看到不同世界的感覺。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ornull\">OrNull<a href=\"#ornull\" class=\"hash-link\" aria-label=\"OrNull的直接連結\" title=\"OrNull的直接連結\">​</a></h3><p>先來看一下官方提到的 <code>OrNull</code> 這個 Utility Types，它的寫法是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Utility Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">OrNull</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Type</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Type </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">null</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>看起來非常單純，使用上可以像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Google&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 OrNull 這個 Utility Type 產生新的型別 ManufactureOrNull</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ManufactureOrNull</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> OrNull</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> ManufactureOrNull </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>你會看到在使用 <code>OrNull</code> 這個 Utility Types 是，就像呼叫一個 function 一樣，我們把 <code>Manufacture</code> 當成參數透過 <code>&lt;&gt;</code> 傳入 <code>OrNull</code> 中，而它會回傳一個新的型別給我們。</p><p><code>ManufactureOrNull</code> 實際上的值其實也就是 <code>&#x27;Apple&#x27; | &#x27;Google&#x27; | &#x27;Samsung&#x27; | &#x27;Sony&#x27; | null</code>，雖然 <code>OrNull</code> 這個 Utility Types 看起來很雞肋，但有時其實還蠻好用的，因為它會讓我們的程式看起來比較乾淨一些：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getManufacture</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Manufacture </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">null</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">/*...*/</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getManufacture</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> OrNull</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">/*...*/</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>舉例來說，上面這兩個 function 對於參數 <code>manufacture</code> 的型別定義雖然一樣，但後者個人看起來就更工整了一些，而不會有一種 <code>null</code> 是多加出來的感覺。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"oneormany\">OneOrMany<a href=\"#oneormany\" class=\"hash-link\" aria-label=\"OneOrMany的直接連結\" title=\"OneOrMany的直接連結\">​</a></h3><p>再來一樣是官方有說明到的 <code>OneOrMany</code>，寫法是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Utility Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">OneOrMany</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Type</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Type </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> Type</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>使用上像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Google&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 OneOrMany 這個 Utility Type 產生新的型別 ManufactureOrManufactures</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ManufactureOrManufactures</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> OneOrMany</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> manufactures</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> ManufactureOrManufactures </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Google&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡一樣可以看到，我們把 <code>Manufacture</code> 當成參數一樣從 <code>&lt;&gt;</code> 傳進 <code>OneOrMany</code> 這個 Utility Type 中，並得到新的 <code>ManufactureOrManufactures</code> 型別，它的值只要滿足 <code>Manufacture</code> 或者是 <code>Manufacture[]</code> 都可以。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"oneormanyornull\">OneOrManyOrNull<a href=\"#oneormanyornull\" class=\"hash-link\" aria-label=\"OneOrManyOrNull的直接連結\" title=\"OneOrManyOrNull的直接連結\">​</a></h3><p>Utility Types 就像函式一樣，所以也可以一個 Utility Type 包著另一個 Utility Type，例如：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Utility Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">OneOrManyOrNull</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Type</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> OrNull</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">OneOrMany</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Type</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡 <code>OneOrManyOrNull</code> 是一個 Utility Type，而它是透過 <code>OrNull</code> 和 <code>OneOrMany</code> 同時組合出來的，使用的方式一樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Google&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 OneOrManyOrNull 這個 Utility Type 產生新的型別 OneOrManyOrNullOfManufacture</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">OneOrManyOrNullOfManufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> OneOrManyOrNull</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> manufacturesData</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> OneOrManyOrNullOfManufacture </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">null</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡一樣可以把 <code>Manufacture</code> 當成參數一樣傳入 <code>OneOrManyOrNull</code> 這個 Utility Type 中，現在 <code>OneOrManyOrNullOfManufacture</code> 指的就會是 <code>Manufacture | Manufacture[] | null</code> 。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"物件型別的-utility-types\">物件型別的 Utility Types<a href=\"#物件型別的-utility-types\" class=\"hash-link\" aria-label=\"物件型別的 Utility Types的直接連結\" title=\"物件型別的 Utility Types的直接連結\">​</a></h3><p>從上面的幾個例子中，相信讀者應該可以感受到 Utility Types 能夠像 function 一樣，輸入 input 並取得 output 的感覺，只是 input 和 output 都需要是 TypeScript 的型別。</p><p>讓我們回顧一下昨天的 <code>getObjValue</code> 這個函式，實際上如果不管函式本身，針對物件型別也是可以建立出幾個不同的 Utility Types。</p><p>這裡我們先建立一個物件型別作為後面的範例：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Google&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Product</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  price</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  manufacturer</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Manufacture</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isLaunched</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"keys\">Keys<a href=\"#keys\" class=\"hash-link\" aria-label=\"Keys的直接連結\" title=\"Keys的直接連結\">​</a></h3><p>建立一個 Utility Type 來取出所有物件型別的 keys 且只要 <code>string</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Utility Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Keys</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>使用的方式：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">KeysOfProduct</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Keys</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Product</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;name&quot; | &quot;price&quot; | &quot;manufacturer&quot; | &quot;isLaunched&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候 <code>KeysOfProduct</code> 的結果會是 <code>&quot;name&quot; | &quot;price&quot; | &quot;manufacturer&quot; | &quot;isLaunched&quot;</code>。</p><p>讀者可以注意到，<code>Product</code> 這個物件型別一樣可以被當成參數一樣傳入 <code>Keys</code> 這個 Utility Type 的 <code>&lt;&gt;</code> 內。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"values\">Values<a href=\"#values\" class=\"hash-link\" aria-label=\"Values的直接連結\" title=\"Values的直接連結\">​</a></h3><p><code>Values</code> 這個 Utility Type 則是可以取出物件型別的所有屬性值（型別），讀者們可以根據昨天的練習試著自己寫寫看：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Utility Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Values</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>使用的方式一樣可以把物件型別 <code>Product</code> 當成參數帶入：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ValuesOfProduct</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Values</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Product</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">//  string | number | boolean</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>最後會得到新的型別 <code>ValuesOfProduct</code>。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"pickobj\">PickObj<a href=\"#pickobj\" class=\"hash-link\" aria-label=\"PickObj的直接連結\" title=\"PickObj的直接連結\">​</a></h3><p>最後來寫一個 Utility Type，它的作用是取出物件型別中的某個 key 的屬性值（型別），讀者們一樣可以根據昨天的內容試著練習看看：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Utility Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PickObj</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡一樣要記得 <code>U extends keyof T</code> 的使用，如果沒有限制泛型 <code>U</code> 一定要是物件型別 <code>T</code> 的 key，TypeScript 因為沒辦法確保能在 <code>T</code> 中找到 <code>U</code> 這個 key，將會報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/AYu1zuJ.png\" alt=\"Type Utilities\" class=\"img_ev3q\"></p><p>使用上則是可以同時帶入兩個型別參數：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Price</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> PickObj</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Product</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;price&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// number</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如此就可以取出物件型別中 key 為 <code>price</code> 的屬性值的型別。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"utility-types-學習小技巧\">Utility Types 學習小技巧<a href=\"#utility-types-學習小技巧\" class=\"hash-link\" aria-label=\"Utility Types 學習小技巧的直接連結\" title=\"Utility Types 學習小技巧的直接連結\">​</a></h2><p>今天提到的一些 Utility Types 多半還蠻直觀的，甚至可能會覺得可有可無，重點是讓讀者先對於可以把 Type 當成 function 一樣使用有些感覺，後面當我們學到 Conditional Types、Mapped Types 等等更進階的用法後，你將會發現「Wow！原來型別還可以這樣『玩』！」。</p><p>這裡提供一些未來在學習 Utility Types 是，方便好用的小技巧：</p><ul><li>在學習 Utility Types 是，把抽象的東西用一些具體的值帶入，可以幫助我們更好了解</li><li>擅用 Type Alias，把 Utility Type 回傳的結果保存成一個 Type，可以更清楚看到該 Type Utility 的作用。</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/mLRnew\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/mLRnew</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/objects.html#generic-object-types\" target=\"_blank\" rel=\"noopener noreferrer\">Object Types</a> @ TypeScript</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day08]<!-- --> TS：什麼！型別也能做條件判斷？認識 Conditional Types pjchender.dev": {
    "prefix": "hironman-2021 [Day08]<!-- --> TS：什麼！型別也能做條件判斷？認識 Conditional Types pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day08]<!-- --> TS：什麼！型別也能做條件判斷？認識 Conditional Types</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Hfha4S9.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>上面這個是今天會提到的內容，如果你已經可以輕鬆看懂，歡迎直接左轉去看我<a href=\"https://ithelp.ithome.com.tw/2021ironman/signup/team/206\" target=\"_blank\" rel=\"noopener noreferrer\">隊友們</a>的精彩文章！</p><p>昨天我們對於 Utility Types 有了更多認識，發現原來 Utility Types 可以像函式一樣接受型別當作 input 然後回傳一個新的型別當作 output。今天來看一下原來在 TypeScript 中，型別還可以做到「條件判斷（Conditional Types）」！？</p><p>在 TypeScript 中，雖然沒辦法針對型別使用 <code>if ... else</code> 來做條件判斷，但可以使用 JavaScript 中同樣有的三元運算子（<a href=\"https://javascript.info/ifelse\" target=\"_blank\" rel=\"noopener noreferrer\">ternary operator</a>）來達到條件判斷的目的，也就是用 <code>?</code> 和 <code>:</code>。</p><p>語法大概會像這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/DKTp8mg.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>這裡讀者可以留意到 <code>X extends Y</code> 就像是一個放在 <code>if()</code> 括號內的條件式，這裡的 <code>extends</code> 就像先前在泛型時提到過的，要當作是「能夠滿足」的意思。<strong>X 能夠滿足 Y，更確切來說是指「X 是 Y 的子集合（subset）」</strong>。</p><p><strong>在學習 Conditional Types 或 Utility Types 時，可以多利用 Type Alias 的方式，建立一個型別後，看看它最終會是什麼</strong>。以 Conditional Type 來說，可以用它來建立一個名為 <code>NewType</code> 型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NewType</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">X</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">Y</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>上面的意思翻成白話文就是「如果 X 是 Y 的子集合的話，則 NewType 就會是 true，否則的話 NewType 會是 false」。</p><p>關於 <code>extends</code> 的使用我喜歡用「集合」搭配圖像的方式來思考，<code>X extends Y</code> 表示 <code>Y</code> 是比 <code>X</code> 更大的集合：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/krX0v2q.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>如果你覺得還有點太過抽象，可以<strong>把抽象的東西用一些具體的值帶入，可以幫助我們更好了解。</strong></p><p>現在再把它更具體一點：</p><ul><li>定義 <code>SomeType1</code>，讓它的值直接是個字串（String Literal Types）</li><li>使用 conditional type 建立 <code>NewType1</code></li></ul><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">SomeType1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;any-string&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// String Literal Types</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NewType1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SomeType1 </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時因為 <code>SomeType1</code> 是 String Literal Types，它是 <code>string</code> 的子集合，所以 <code>NewType1</code> 就會是 <code>true</code>。用圖像來描述的話會像是這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/fR9G7TF.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>接著定義另一個 <code>SomeType2</code>，讓它的值直接是個數字（Number Literal Types）：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">SomeType2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Number Literal Types</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NewType2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SomeType2 </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候因為 SomeType2 是 Number Literal Types，並不是 <code>string</code> 的子集合，因此 <code>NewType2</code> 就會是 <code>:</code> 後的 <code>false</code>。用圖像來表示的話會是這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/x63stMV.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>這就是 Conditional Types 的語法。Conditional Type 雖然看起來簡單，但實際上可以做出很多不同的變化，我們會在後面幾天一直看到它的身影。</p><blockquote><p>在 TypeScript 中，可以直接使用「布林值」、「字串值」和「數值的值」作為型別，這種用法稱作 <a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types\" target=\"_blank\" rel=\"noopener noreferrer\">Literal Types</a>。</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"實際範例\">實際範例<a href=\"#實際範例\" class=\"hash-link\" aria-label=\"實際範例的直接連結\" title=\"實際範例的直接連結\">​</a></h2><p>在了解 Conditional Types 的使用後，讓我們來看官網提供的 <a href=\"https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#conditional-type-constraints\" target=\"_blank\" rel=\"noopener noreferrer\">Flatten</a> 這個範例， <code>Flatten</code> 一樣可以視為一個 Utility Type：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Hfha4S9.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>讓我們先來理解一下 <code>T extends any[]</code> 是什麼意思。</p><p>除了把抽象的東西用一些具體的值帶入之外，<strong>在理解 Conditional Types 時，可以把 <code>?</code> 和 <code>:</code> 後的內容先替換成其他內容，方便理解它是跑到了那一個條件</strong>。</p><p>這裡先把 <code>?</code> 後的值改成 <code>true</code>，<code>:</code> 後的值改成 <code>false</code>，像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 當我們不清楚「條件」是什麼意思是，可以修改 ? 和 : 後的內容</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Flatten</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>接著分別定義型別 <code>Manufacture</code> 和 <code>Manufactures</code>，然後把它帶入 <code>Flatten</code> 的 <code>&lt;&gt;</code> 中：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Google&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufactures</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Manufacture</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">FlattenManufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">FlattenManufactures</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufactures</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>把滑鼠移到 <code>FlattenManufacture</code> 或 <code>FlattenManufactures</code> 就可以看到回傳的型別：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/bcC6uTq.png\" alt=\"conditional types\" class=\"img_ev3q\"></p><p>你會發現如果帶入的是 <code>Manufacture</code> ，因為 <code>Manufacture</code> 不是 <code>any[]</code> 的子集合，因此會進到 <code>false</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Sg4UTJD.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>相反地，如果帶入的是 <code>Manufactures</code>，以為 <code>Manufactures</code> 本身就是 <code>Manufacture[]</code>，可以算是 <code>any[]</code> 的子集合，進而得到 <code>true</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/3gbUAcz.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>搭配原本對於 TypeScript 的理解，應該就可以知道 <code>T extends any[]</code> 翻成白話文，指的就是「T 是否符合陣列型別」。</p><p>在理解 Condition 後，接著讓我們把 <code>Flatten</code> 改回原本的樣子：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Flatten</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>現在我們可以理解，當 <code>T</code> 不是陣列型別的子集合時，它會直接回傳 <code>:</code> 後的 <code>T</code>，也就是什麼都不做直接回傳原本的型別。但如果 <code>T</code> 是陣列型別的子集合，那 <code>T[number]</code> 是什麼意思呢？</p><p>同樣的，我們可以帶一個實際的型別來取代 <code>T</code> 幫助我們理解。我們把 <code>T</code> 用符合陣列型別的 <code>Manufactures</code> 帶進去看看：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Google&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufactures</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Manufacture</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ShowMeTheType</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Manufactures</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>接著把滑鼠移到 <code>ShowMeTheType</code> 上面：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/HMumxuz.png\" alt=\"Indexed Access Types\" class=\"img_ev3q\"></p><p>你會發現，因為 <code>Manufactures</code> 的型別是 <code>Manufacture[]</code>，而使用 <code>Manufactures[number]</code> 的意思其實就是把陣列型別裡的元素型別取出的意思（可以參考內文後方針對 Index Access Types 的補充）。</p><p>回到一開始的範例，可以知道當 <code>T</code> 是陣列型別的子集合時，會得到的是 <code>T[number]</code>，也就是取出 <code>T</code> 這個陣列型別中元素的型別。所以說 <code>Flatten</code> 這個 Utility Type 的作用就是「把陣列型別中的元素型別攤平後回傳，如果不是陣列元素就什麼都不要做」的意思。</p><p>使用上可以像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">FlattenManufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufacture</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;Apple&quot; | &quot;Google&quot; | &quot;Samsung&quot; | &quot;Sony&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">FlattenManufactures</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Manufacture</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;Apple&quot; | &quot;Google&quot; | &quot;Samsung&quot; | &quot;Sony&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Example1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">3</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true | 3 | &quot;a&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Example2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// string</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Example3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;not array&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;not array&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"補充使用-indexed-access-types-取得陣列型別中元素的型別\">補充：使用 Indexed Access Types 取得陣列型別中元素的型別<a href=\"#補充使用-indexed-access-types-取得陣列型別中元素的型別\" class=\"hash-link\" aria-label=\"補充：使用 Indexed Access Types 取得陣列型別中元素的型別的直接連結\" title=\"補充：使用 Indexed Access Types 取得陣列型別中元素的型別的直接連結\">​</a></h3><p>稍微補充一下，在 <a href=\"https://ithelp.ithome.com.tw/articles/10268017\" target=\"_blank\" rel=\"noopener noreferrer\">Day 05</a> 的時候我們有提了 Indexed Access Types，當時提到的是針對物件型別來使用 Indexed Access Type 的話，可以取出物件型別中屬性值的型別，但如是針對陣列型別的話，這可以使用 Indexed Access Types 來取出陣列型別中元素型別，因為陣列型別的 index 一定是 <code>number</code> 型別的緣故，所以只要使用 <code>SomeArray[number]</code> 就可以取出 <code>SomeArray</code> 這個陣列型別裡面元素值的型別。</p><p>舉例來說：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">StringArray</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">StringArrayElement</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> StringArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// string</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NumberArray</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NumberArrayElement</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> NumberArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// number</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>當然也可以用實際數值的方式取出某 index 元素的型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">SomeArray</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Element0</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SomeArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// string</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Element1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SomeArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// boolean</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Element2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SomeArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Elements</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SomeArray</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// string | boolean | number</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conditional-types-學習小技巧\">Conditional Types 學習小技巧<a href=\"#conditional-types-學習小技巧\" class=\"hash-link\" aria-label=\"Conditional Types 學習小技巧的直接連結\" title=\"Conditional Types 學習小技巧的直接連結\">​</a></h2><ul><li>在理解 Conditional Types 時，可以把 <code>?</code> 和 <code>:</code> 後的內容先替換成其他內容，方便理解它是跑到了那一個條件。這招非常實用，特別是在未來你可以能會看到多重的 <code>? A : B ? C : D</code> 時。</li><li>所謂「X 滿足 Y」的意思，確切來說指的是「X 是 Y 的子集合（subset）」。</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/wXkB8W\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/wXkB8W</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\" target=\"_blank\" rel=\"noopener noreferrer\">Conditional Types</a> @ TypeScript &gt; Type Manipulation</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types\" target=\"_blank\" rel=\"noopener noreferrer\">Literal Types</a> @ Typescript &gt; Everyday Types</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day09]<!-- --> TS：什麼！型別也有分配律？理解 Extract 和 Exclude 的實作 pjchender.dev": {
    "prefix": "hironman-2021 [Day09]<!-- --> TS：什麼！型別也有分配律？理解 Extract 和 Exclude 的實作 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day09]<!-- --> TS：什麼！型別也有分配律？理解 Extract 和 Exclude 的實作</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/CTigliE.png\" alt=\"Distributive Conditional Types\" class=\"img_ev3q\"></p><p>上面這個是今天會提到的內容，如果你已經可以輕鬆看懂，歡迎直接左轉去看我同事的精彩文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20130721/ironman/4083\" target=\"_blank\" rel=\"noopener noreferrer\">From State Machine to XState</a>」！</p><p>前幾天筆者提到的 Utility Types 多半是在 TypeScript 官方文件中提到的說明，但其實在 TypeScript 中也內建了一些 Utility Types，使用者不需要額外定義這些 Utility Types 就可以直接使用，這些內建的 Utility Types 列在官方網站的 <a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">references</a> 中，今天就來讓看其中兩個內建的 Utility Types，分別是 <code>Exclude</code> 和 <code>Extract</code>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"extract-和-exclude-的基本用法\">Extract 和 Exclude 的基本用法<a href=\"#extract-和-exclude-的基本用法\" class=\"hash-link\" aria-label=\"Extract 和 Exclude 的基本用法的直接連結\" title=\"Extract 和 Exclude 的基本用法的直接連結\">​</a></h2><p>即使我們還不了解 <code>Extract</code> 和 <code>Exclude</code> 是怎麼被寫出來的，但可以直接使用它，就好像有時不了解某個功能是如何被實作出來的，還是可以直接呼叫它提供的方法或函式一樣。</p><p>還記得我們前面提到了解 Utility Types 的一個小技巧就是實際帶入一個型別，把它會回傳的內容存成一個 Type Alias 來看看嗎。讓我們先來看 <code>Extract&lt;Type, Union&gt;</code> 的使用：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// https://www.typescriptlang.org/docs/handbook/utility-types.html#extracttype-union</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">//  &#x27;a&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;a&#x27; | &#x27;b&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">Function</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// () =&gt; void</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;f&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;a&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>可以看到 <code>Extract</code> 需要接受兩個參數 <code>Type</code> 和 <code>Union</code>，但它會做的是把 <code>Type</code> 中滿足 <code>Union</code> 的取出，其餘不滿足的摒除掉，所以在：</p><ul><li>第一個例子中，從型別 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code> 中留下滿足 <code>&#x27;a&#x27;</code> 的，所以最後得到 <code>a</code></li><li>第二個例子中，從型別 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code> 中留下滿足 <code>&#x27;a&#x27; ｜ &#x27;b&#x27;</code> 的，所以最後得到 <code>a | b</code></li><li>第三和第四個例子也是一樣的概念。</li></ul><p>接著先來看 <code>Exclude&lt;Type, ExcludedUnion&gt;</code> 的使用：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// https://www.typescriptlang.org/docs/handbook/utility-types.html#excludetype-excludedunion</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">//  &#x27;b&#x27; | &#x27;c&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;c&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">Function</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// string | number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;f&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;b&#x27; | &#x27;c</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p><code>Exclude</code> 的作用剛好和 <code>Extract</code> 相反，<code>Exclude</code> 雖然一樣需要提供兩個參數 <code>Type</code> 和 <code>ExcludedUnion</code>，但它會做的是把 <code>Type</code> 中滿足 <code>ExcludedUnion</code> 的剔除。所以在：</p><ul><li>第一個例子中，從型別 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code> 中剔除 <code>a</code> 後，只會剩下 <code>&#x27;b&#x27; | &#x27;c&#x27;</code></li><li>第二個例子中，從型別 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code> 中剔除 <code>&#x27;a&#x27; | &#x27;b&#x27;</code> 後，只會剩下 <code>&#x27;c&#x27;</code></li><li>第三和第四個例子也是一樣的概念。</li></ul><p>在知道了它們各種的用法後讓我們來看它們的實作。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conditional-types-的分配律distributive-conditional-types\">Conditional Types 的分配律（Distributive Conditional Types）<a href=\"#conditional-types-的分配律distributive-conditional-types\" class=\"hash-link\" aria-label=\"Conditional Types 的分配律（Distributive Conditional Types）的直接連結\" title=\"Conditional Types 的分配律（Distributive Conditional Types）的直接連結\">​</a></h2><p>讓我們先來看 <code>Extract</code> 的實作：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/46ksyB8.png\" alt=\"Distributive Conditional Types\" class=\"img_ev3q\"></p><p>這裡用到了我們昨天提到的 Conditional Types 的觀念，讀者應該可以理解到原始碼的意思就是：</p><p>「如果 T 是 U 的子集合，就回傳 T，否則回傳 never」</p><p>雖然我們已經理解了 Conditional Types，翻成白話文也完全正確，但在看到剛剛使用的範例是，卻好像覺得少了什麼，思路無法連貫：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">//  &#x27;a&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>不是說如果 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code>（T）滿足 <code>&#x27;a&#x27;</code>（U）的話，會直接回傳 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code>（T）嗎？為什麼最後只回傳了 <code>&#x27;a&#x27;</code> 呢？</p><p>這裡我們就要來提一下 Conditional Types 的分配律。「分配律」這個詞有一種熟悉但有離了很遙遠的感覺，但基本上我們一定都用過，例如：</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">a * (b + c) = a * b + a * c</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>上面這個就是乘法分配律。那麼什麼是 Conditional Types 的分配律呢？</p><p>假設說我們在 Utility Type 的泛型中帶入的不是單純一個型別，而是一個 union type 時會有分配律的情況產生。舉例來說，先定義一個用 Conditional Type 寫的 Utility Type：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 定義一個用 Conditional Type 寫的 Utility Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">DistributeUnion</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>接著在 <code>T</code> 的地方帶入 union type，像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">DistributeUnionReturn</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> DistributeUnion</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;a&quot; | &quot;b&quot; | &quot;c&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這麼寫的意思實際上等同於：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">DistributeUnionReturn</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> DistributeUnion</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> DistributeUnion</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> DistributeUnion</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>也就是說原本的 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code> 會被分配到每個 <code>DistributeUnion&lt;T&gt;</code> 的 <code>T</code> 中在用聯集 <code>|</code> 起來，因為</p><ul><li><code>DistributeUnion&lt;&#x27;a&#x27;&gt;</code> 滿足 <code>any</code>，所以會直接回傳 <code>a</code></li><li><code>DistributeUnion&lt;&#x27;b&#x27;&gt;</code> 滿足 <code>any</code>，所以會直接回傳 <code>b</code></li><li><code>DistributeUnion&lt;&#x27;c&#x27;&gt;</code> 滿足 <code>any</code>，所以會直接回傳 <code>c</code></li></ul><p>最後就會等同於：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">DistributeUnionReturn</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token plain\">；</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這也就是為什麼，最終的回傳值會是 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code>的緣故。</p><p>讓我們把它放在一起看：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/TWyPuMT.png\" alt=\"Distributive Conditional Types\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"回頭來看-extract-和-exclude-的原始碼\">回頭來看 Extract 和 Exclude 的原始碼<a href=\"#回頭來看-extract-和-exclude-的原始碼\" class=\"hash-link\" aria-label=\"回頭來看 Extract 和 Exclude 的原始碼的直接連結\" title=\"回頭來看 Extract 和 Exclude 的原始碼的直接連結\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"extract-的原始碼\">Extract 的原始碼<a href=\"#extract-的原始碼\" class=\"hash-link\" aria-label=\"Extract 的原始碼的直接連結\" title=\"Extract 的原始碼的直接連結\">​</a></h3><p>理解了 Distributive Conditional Types 後，再讓我們回頭看 <code>Extract</code> 這個 Utility Type 的實作：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/46ksyB8.png\" alt=\"Distributive Conditional Types\" class=\"img_ev3q\"></p><p>現在應該可以理解，原本的翻譯「如果 T 滿足 U，就回傳 T，否則回傳 never」並沒有錯，只是要加上分配律的概念。</p><p>所以：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">//  &#x27;a&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>等同於：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> Extract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>會變成：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;a&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>而 <code>never</code> 就是個空集合的概念，任何東西和它取交集，還是原本的東西，因此最後就得到的 <code>type T1 = &#x27;a&#x27;</code>，是不是不會太難理解呢？</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"exclude-的原始碼\">Exclude 的原始碼<a href=\"#exclude-的原始碼\" class=\"hash-link\" aria-label=\"Exclude 的原始碼的直接連結\" title=\"Exclude 的原始碼的直接連結\">​</a></h3><p>接著讓我們來看 <code>Exclude</code> 的原始碼：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/KWdspOn.png\" alt=\"Exclude\" class=\"img_ev3q\"></p><p>你會發現它和 <code>Extract</code> 最大的差別就是，<code>Exclude</code> 是 <code>T</code> 滿足 <code>U</code> 是會回傳 <code>never</code>，而 <code>Extract</code> 則是會回傳 <code>T</code>。</p><p>回到範例，現在讀者應該也可以理解：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;f&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;b&#x27; | &#x27;c</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>等同於：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;f&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;f&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;f&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>會變成：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>最終就會得到 <code>&#x27;b&#x27; | &#x27;c&#x27;</code> 的結果。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"nonnullable\">NonNullable<a href=\"#nonnullable\" class=\"hash-link\" aria-label=\"NonNullable的直接連結\" title=\"NonNullable的直接連結\">​</a></h3><p>在 TypeScript 內建的 Utility Types 中還有個 <code>NonNullable</code>，它可以把型別中可能存在的 <code>null</code> 或 <code>undefined</code> 都過濾掉，關於它的用法可以直接參考<a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#nonnullabletype\" target=\"_blank\" rel=\"noopener noreferrer\">官網上</a>的說明，而它的 source code 是長這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Exclude null and undefined from T</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NonNullable</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">null</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">undefined</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果讀者對於上面 <code>Extract</code> 和 <code>Exclude</code> 已經有足夠的理解，相信一定也能夠理解 <code>NonNullable</code> 的原始碼是如何作用以及達到預期的效果的，試著理解看看吧！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"不要使用分配律\">不要使用分配律<a href=\"#不要使用分配律\" class=\"hash-link\" aria-label=\"不要使用分配律的直接連結\" title=\"不要使用分配律的直接連結\">​</a></h2><p>預設的情況 Conditional Types 都會使用分配律，但如果有某些使用讀者在寫自己的 Utility Type 不希望使用分配律是，可以使用在 <code>extends</code> 前後的型別加上中括號 <code>[]</code> 來達成。例如，我們改寫原本的 <code>Extract</code> 讓它沒有分配律，也就是改成 <code>[T]</code> 和 <code>[U]</code>，像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NoDistributeExtract</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">U</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候，如果我們一樣帶入 union type，這個 Utility Type 會是完全不同的意義：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NoDistributeExtractReturn1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> NoDistributeExtract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;a&#x27; | &#x27;b&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>沒有分配律的使用下會直接拿 <code>&#x27;a&#x27; | &#x27;b&#x27;</code>（T）和 <code>&#x27;a&#x27; | &#x27;b&#x27; | &#x27;c&#x27;</code>（U）來比較，這裡因為 <code>T</code> 滿足 <code>U</code> 所以會直接回傳 <code>T</code>。</p><p>同樣的，如果 <code>T</code> 不滿足 <code>U</code> 的話：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NoDistributeExtractReturn2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> NoDistributeExtract</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;b&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;a&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;c&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// never</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>因為 <code>&#x27;a&#x27; | &#x27;b&#x27;</code>（T） 不滿足 <code>&#x27;a&#x27; | &#x27;c&#x27;</code>（U），則會回傳 <code>never</code>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/wO8YyN\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/wO8YyN</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\" target=\"_blank\" rel=\"noopener noreferrer\">Distributive Conditional Types</a> @ TypeScript &gt; Type Manipulation</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Utility Types</a> @ TypeScript &gt; Reference</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day10]<!-- --> TS：什麼！Conditional Types 中還能建立型別？使用 infer 來實作 ReturnType 和 Parameters pjchender.dev": {
    "prefix": "hironman-2021 [Day10]<!-- --> TS：什麼！Conditional Types 中還能建立型別？使用 infer 來實作 ReturnType 和 Parameters pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day10]<!-- --> TS：什麼！Conditional Types 中還能建立型別？使用 infer 來實作 ReturnType 和 Parameters</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/dcjQzJy.png\" alt=\"carbon\" class=\"img_ev3q\"></p><p>今天會來說明 TypeScript 中內建 <code>ReturnType</code> 和 <code>Parameters</code> 的原始碼（像是上圖這樣），如果你已經可以輕鬆看懂，歡迎直接左轉去看我<a href=\"https://ithelp.ithome.com.tw/2021ironman/signup/team/206\" target=\"_blank\" rel=\"noopener noreferrer\">隊友們</a>的精彩文章！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"returntype-和-parameters-的使用\">ReturnType 和 Parameters 的使用<a href=\"#returntype-和-parameters-的使用\" class=\"hash-link\" aria-label=\"ReturnType 和 Parameters 的使用的直接連結\" title=\"ReturnType 和 Parameters 的使用的直接連結\">​</a></h2><p>一樣讓我們先來簡單了解 <a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype\" target=\"_blank\" rel=\"noopener noreferrer\">ReturnType</a> 和 <a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#parameterstype\" target=\"_blank\" rel=\"noopener noreferrer\">Parameters</a> 這兩個 Utility Types 的使用。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"returntype\">ReturnType<a href=\"#returntype\" class=\"hash-link\" aria-label=\"ReturnType的直接連結\" title=\"ReturnType的直接連結\">​</a></h3><p><code>ReturnType&lt;T&gt;</code> 是 TypeScript 內建的 Utility Type，它能夠接受一個參數 <code>T</code>，這個參數滿足「函式型別」的話（即，T 要是函式型別的子集合），則會回傳這個函式「回傳值的型別（return type）」；否則，就會回傳 <code>any</code>。</p><p>來看一下<a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype\" target=\"_blank\" rel=\"noopener noreferrer\">官網</a>提供的幾個範例：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ReturnType</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// string</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ReturnType</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">s</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// number[]</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><ul><li>第一個範例中，<code>ReturnType&lt;T&gt;</code> 的 <code>&lt;&gt;</code> 中帶入的是 <code>() =&gt; string</code> 這個函式型別，因為這個函式會回傳 <code>string</code>，所以 <code>T1</code> 會是 <code>string</code>。</li><li>第二個範例中，因為 <code>(s: string) =&gt; number[]</code> 會回傳 <code>number[]</code>，所以 <code>T1</code> 會是 <code>number[]</code>。</li></ul><p>如果帶入的型別不符合，則會回傳 <code>any</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ReturnType</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// any</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>有個稍微特別的地方是，雖然 <code>T3</code> 的型別會是 <code>any</code>，但 TypeScript 會在 <code>string</code> 的地方跳出錯誤提示，至於為什麼會這樣，等等看原始碼的時候就會瞭解了！</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/pawRGdv.png\" alt=\"ReturnType\" class=\"img_ev3q\"></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"parameters\">Parameters<a href=\"#parameters\" class=\"hash-link\" aria-label=\"Parameters的直接連結\" title=\"Parameters的直接連結\">​</a></h3><p><code>Parameters&lt;T&gt;</code> 則是 TypeScript 內建的另一個 Utility Type，它能夠接受一個參數 <code>T</code>，這個參數滿足「函式型別」的話（即，T 要是函式型別的子集合），則會以「 tuple type 來回傳函式的「參數（parameters）」，否則會回傳 <code>never</code>。</p><p>一樣來看看幾個例子，這四個範例帶進去 <code>T</code> 的型別都能滿足函式型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">a</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> b</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// [a: number, b: string]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">a</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// [a: number[]]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">a</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// [a: { firstName: string; lastName: string; }]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token plain\">a</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// number[]</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><ul><li>在第一個範例中，因為帶入 <code>&lt;T&gt;</code> 內的 <code>(a: number, b: string) =&gt; number</code> 是函式型別的子集合，所以 <code>Parameters</code> 這個 Utility Type 就會把函式的參數用 tuple type 的方式回傳出來，因此 <code>T1</code> 會是 <code>[a: number, b: string]</code>。</li><li>第二和第三個範例也是一樣的意思，只是分別帶入的參數型別是陣列和物件而已。</li><li>第四個範例比較特別一點，讀者需要先了解 JavaScript 中可以使用 <a href=\"https://javascript.info/rest-parameters-spread\" target=\"_blank\" rel=\"noopener noreferrer\">rest parameters</a> 來取得所有函式參數的內容，如此就可以理解為什麼它 <code>T3</code> 會是 <code>number[]</code> 而不是 <code>[number[]]</code> 了。</li></ul><p>如果帶入 <code>&lt;T&gt;</code> 的型別不是函式型別的子集合的話，則會得到 <code>never</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T5</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Parameters</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// never</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>同樣的，雖然有得到 <code>T5</code> 的型別是 <code>never</code>，但 TypeScript 會在 <code>string</code> 的地方跳出錯誤提示，一樣等等看原始碼時就會知道為什麼：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/ex8TMQa.png\" alt=\"Parameters\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"認識-conditional-types-中的-infer\">認識 Conditional Types 中的 infer<a href=\"#認識-conditional-types-中的-infer\" class=\"hash-link\" aria-label=\"認識 Conditional Types 中的 infer的直接連結\" title=\"認識 Conditional Types 中的 infer的直接連結\">​</a></h2><p>如果直接看 <code>ReturnType</code> 這個 Utility Type 的原始碼時，讀者會看到一個先前沒提到過的關鍵字 — <code>infer</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/nD6IYP5.png\" alt=\"infer\" class=\"img_ev3q\"></p><p>勢必要先了解 <code>infer</code> 才能理解 <code>ReturnType</code> 的原始碼，所以就先來看看這個 <code>infer</code> 怎麼用吧！</p><p>在前幾天講 Conditional Types 時筆者曾經提到 <code>X extends Y ? T : F</code> 中的 <code>X extends Y</code> 指的是「當 X 是 Y 的子集合」。但如果現在的 Y 並不是一個確切的型別，我們想要讓 TypeScript 幫我們推導其型別的話，就可以用 <code>infer</code> 這個關鍵字。</p><p>寫起來會像這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Hd27gzW.png\" alt=\"infer\" class=\"img_ev3q\"></p><p><code>infer R</code> 中的這個 <code>R</code> 就是 TypeScript 自己推導出來的型別，而且它是可以當 Conditional Type 的條件為 <code>true</code> 時，這個 <code>R</code> 是可以直接被拿來當成回傳值使用的。</p><p>因為 <code>infer</code> 的概念比較抽象，透過實際範例會比較好理解，來我們先來看幾個例子。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例一\">範例一<a href=\"#範例一\" class=\"hash-link\" aria-label=\"範例一的直接連結\" title=\"範例一的直接連結\">​</a></h3><p>前幾天在說明 Conditional Types 時，曾使用 <code>Flatten</code> 來做示範：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Hfha4S9.png\" alt=\"Conditional Types\" class=\"img_ev3q\"></p><p>現在我們把 <code>any[]</code> 的部分修改成 <code>(infer R)[]</code>，也就是 <code>any</code> 變成 <code>infer R</code>（加上括號是為了讓 TS 在解析語法時不會混淆）：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/dwPeA2g.png\" alt=\"infer\" class=\"img_ev3q\"></p><p>這時候 TS 就會根據使用者帶入的型別，自動推導這個 <code>R</code> 應該是什麼型別。同時，被推導出來的 <code>R</code> 還可以在條件為 <code>true</code> 時作為回傳值使用。</p><p>讀者可以猜想下面的 <code>R</code> 會是什麼呢？</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Flatten</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// number，且 R 會是 number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// string | number，且 R 會是 string | number</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Flatten</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// number</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果 <code>T</code> 是陣列型別的子集合的話，則會回傳這個被推導出來的 <code>R</code>，否則直接回傳 <code>T</code>。</p><ul><li>第一個例子中，因為帶入 <code>&lt;&gt;</code> 的是 <code>number[]</code>，所以 R 會被推論是 <code>number</code>，因此 <code>T1</code> 就會是 <code>number</code>。</li><li>第二個例子中，因為帶入 <code>&lt;&gt;</code> 的是 <code>(string | number)[]</code>，所以 R 會被推論是 <code>string | number</code>，因此 <code>T2</code> 就會是 <code>string | number</code>。</li><li>第三個例子中，因為帶入 <code>&lt;&gt;</code> 的是 <code>number</code>，而 <code>number</code> 並不是陣列型別的子集合，所以會直接回傳原本帶入 <code>&lt;&gt;</code> 的型別。</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例二\">範例二<a href=\"#範例二\" class=\"hash-link\" aria-label=\"範例二的直接連結\" title=\"範例二的直接連結\">​</a></h3><p>讓我們再看另一個例子：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">InferResp</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> response</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> status</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在這個 Utility Type 中，<code>T</code> 如果是 <code>{ response: ...; status: number }</code> 的子集合，則會回傳 <code>R</code>，否則會回傳 <code>T</code>，但這裡並不清楚 response 的型別是什麼，所以使用 <code>{ response: infer R, ... }</code> 來讓 TS 推論：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> InferResp</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> response</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> data</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;foobar&#x27;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> status</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">200</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// { data: &#x27;foobar&#x27; }</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> InferResp</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> status</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">400</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// { status: 400 }</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在上面的例子中可以看到，當帶入的 <code>T</code> 滿足 <code>{ response: ...; status: number }</code> 時，<code>R</code> 就可以自動被推導成 <code>{data: &#x27;foobar&#x27;}</code>。但如果不滿足的話，就會直接回傳原本帶入的型別 <code>{ status: 400 }</code>。</p><p>從上面的例子中可以看到，<strong><code>infer</code> 適合用在需要做條件判斷，但型別又不完全明確時使用</strong>。</p><p>這個 <code>infer</code> 很特別，需要多感覺一下，等等說明 <code>ReturnType</code> 的原始碼時可以再體會看看。有幾個使用 <code>infer</code> 時一定要留意的細節：</p><ul><li>關鍵字 <code>infer</code> 只能在 Conditional Types 中的 <code>extends</code> 被使用（更確切來說是 <code>extends</code> 後且 <code>?</code> 前)，不能在限制泛型（<a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">Generics Constraint</a>）中的 <code>extends</code> 使用。</li><li>使用 <code>infer R</code> 後，這個被推導出來的型別 <code>R</code> 雖然能夠被當成型別直接回傳，但它只能用在符合 True 的條件使用（即，<code>?</code> 後且 <code>:</code> 前），不能用在 False 的情況（即，<code>:</code> 後）</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"在-infer-中使用-constraint\">在 infer 中使用 constraint<a href=\"#在-infer-中使用-constraint\" class=\"hash-link\" aria-label=\"在 infer 中使用 constraint的直接連結\" title=\"在 infer 中使用 constraint的直接連結\">​</a></h3><blockquote><p><a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/#instantiation-expressions\" target=\"_blank\" rel=\"noopener noreferrer\"><code>extends</code> Constraints on <code>infer</code> Type Variables</a> @ microsoft devblogs</p></blockquote><p>在 TypeScript 4.7 後，可以在 <code>infer</code> 後使用 <code>extends</code>，例如：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 在 TypeScript 4.7 以後可以這樣寫</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">FirstIfString</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 在 infer 內使用 extends</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">S</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">unknown</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">S</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這個的意思是，<code>infer</code> 出 <code>S</code> 這個 type，且這個 type 需要滿足 <code>string</code> 才行。如此可以避免 TypeScript 4.7 以前，需要使用 nested conditionals 的寫法：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 在 TypeScript 4.7 以前需要這樣寫</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">FirstIfString</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">S</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">unknown</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">S</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">S</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"理解-returntype-和-parameters-的實作\">理解 ReturnType 和 Parameters 的實作<a href=\"#理解-returntype-和-parameters-的實作\" class=\"hash-link\" aria-label=\"理解 ReturnType 和 Parameters 的實作的直接連結\" title=\"理解 ReturnType 和 Parameters 的實作的直接連結\">​</a></h2><p>在認識 <code>infer</code> 之後，讓我們回頭來看 <code>ReturnType</code> 和 <code>Parameters</code> 這兩個 Utility Types 的原始碼。</p><p>要看懂這兩個 Utility Types 的原始碼，前面幾天提到的知識缺一不可：</p><ul><li><a href=\"https://ithelp.ithome.com.tw/articles/10265710\" target=\"_blank\" rel=\"noopener noreferrer\">Generics</a> @ Day02</li><li><a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">Generic Constraints</a> @ Day03</li><li><a href=\"https://ithelp.ithome.com.tw/articles/10270213\" target=\"_blank\" rel=\"noopener noreferrer\">Conditional Types</a> @ Day08</li><li><code>infer</code> keyword</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"returntype-1\">ReturnType<a href=\"#returntype-1\" class=\"hash-link\" aria-label=\"ReturnType的直接連結\" title=\"ReturnType的直接連結\">​</a></h3><p><code>ReturnType</code> 的原始碼是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ReturnType</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">args</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token plain\">args</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">R</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在看他人寫的 Utility Types 時，很重要的是做正確的斷句，斷好句後通常就會比較好理解它的意思，這裡我們來幫它斷句一下：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/6SXvXCK.png\" alt=\"ReturnType\" class=\"img_ev3q\"></p><p>先看泛型的部分，也就是 <code>&lt;T extends (...args: any) =&gt; any&gt;</code>，這裡面同時有兩個 <code>&gt;</code> 在內，一開始會讓人容易有點混淆，但讀者只要知道 <code>(...args: any) =&gt; any</code> 這個是 TypeScript 的 <a href=\"https://www.typescriptlang.org/docs/handbook/2/functions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Function Type</a>，意思就是這個函式可以接受任何型別作為參數，也可回傳任何型別的值。</p><p>根據前幾天對於 <a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">Generics Constraint</a> 的說明，將可以理解 <code>&lt;T extends (...args: any) =&gt; any&gt;</code> 完整的意思就是說，<code>T</code> 需要是 <code>(...args: any) =&gt; any</code> 的子集合，也就是說 <code>T</code> 需要滿足函式型別，不論這個函式的參數和回傳值的型別是什麼都可以。</p><blockquote><p>現在讀者應該可以知道，為什麼在剛剛的範例中使用 <code>ReturnType&lt;string&gt;</code> 時，TS 會回報錯誤提示了，這是因為 <code>string</code> 並不是函式型別的子集合。</p></blockquote><p>接著把注意力放到等號後的 Conditional Types，<code>T extends (...args: any) =&gt; infer R ? R : any;</code>，根據前幾天對 <a href=\"https://ithelp.ithome.com.tw/articles/10270213\" target=\"_blank\" rel=\"noopener noreferrer\">Conditional Types</a> 的說明，讀者應該可以知道，這裡的判斷式 <code>T extends (...args: any) =&gt; infer R</code>，如果這個判斷式為真，就會回傳 <code>R</code>，否則會回傳 <code>any</code>。</p><p>看到這裡讀者應該可以理解，為什麼在剛剛的範例中使用 <code>ReturnType&lt;string&gt;</code> 時，雖然 TS 有報錯，但最終還是可以得到 <code>any</code> 的型別。因為如果帶入的 <code>T</code> 不滿足函式型別的話，就會得到 <code>any</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/I1ePW1a.png\" alt=\"ReturnType\" class=\"img_ev3q\"></p><p>最後來看看當使用者帶入的 <code>T</code> 滿足函式型別時，回傳的 <code>R</code> 是什麼。這個 <code>R</code> 就和今天認識的 <code>infer</code> 有關，在 Conditional Types 中的 <code>T extends (...args: any) =&gt; infer R</code>，這裡用了 <code>infer R</code> 來推論這個函式會回傳的型別，並把這個函式會回傳的型別取名為 <code>R</code>，所以 <code>R</code> 指的就是函式會回傳的型別。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"parameters-1\">Parameters<a href=\"#parameters-1\" class=\"hash-link\" aria-label=\"Parameters的直接連結\" title=\"Parameters的直接連結\">​</a></h3><p>最後來看看 <code>Parameters&lt;T&gt;</code>，它的原始碼是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Parameters</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">args</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token plain\">args</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">infer</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">never</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>要看懂這段一樣需要先試著將它們斷句，讀者們可以先自己試著練習看看。</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/n5oaijK.png\" alt=\"Parameters\" class=\"img_ev3q\"></p><p>斷句後我們可以看到，前面 Generic Constraints 的部分是 <code>&lt;T extends (...args: any) =&gt; any&gt;</code>，需要滿足的限制是 <code>(...args: any) =&gt; any</code>，這個部分和 <code>ReturnType</code> 是一樣的，也就是只要符合函式型別即可，不論該函式的參數或回傳值的型別是什麼。</p><p>在等號後的 Conditional Types 中可以看到如果 <code>T</code> 是函式型別的子集合（即，<code>T extends (...args: infer P) =&gt; any</code>），就會回傳 <code>P</code>，否則會回傳 <code>never</code>。</p><p>那麼這個 P 是什麼呢？從 <code>(...args: infer P)</code> 可以看出這個 <code>P</code> 是透過 <code>infer</code> 來推論帶入 <code>&lt;&gt;</code> 中函式的「參數的型別」，推論後命名為 <code>P</code>，並作為回傳值使用。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/WYY9rW\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/WYY9rW</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"infer-學習重點\">infer 學習重點<a href=\"#infer-學習重點\" class=\"hash-link\" aria-label=\"infer 學習重點的直接連結\" title=\"infer 學習重點的直接連結\">​</a></h2><ul><li>關鍵字 <code>infer</code> 只能用在 Conditional Types 的 <code>extends</code> 後與 <code>?</code> 前，不能用在 Generics Constraint 的 <code>extends</code> 後</li><li>透過 <code>infer</code> 推導出來的型別只能在 Conditional Types 中為 true 時被使用，不能在 false 是被使用</li><li>如果未來碰到比較複雜的 Utility Types，不知道 <code>infer</code> 出來的型別是什麼，就回傳出來看看</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#inferring-within-conditional-types\" target=\"_blank\" rel=\"noopener noreferrer\">Inferring with Conditional Types</a> @ TypeScript &gt; Type Manipulation</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Utility Types</a> @ TypeScript &gt; Reference</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day11]<!-- --> TS：什麼！型別也有樣板字串（Template Literal Types）？ pjchender.dev": {
    "prefix": "hironman-2021 [Day11]<!-- --> TS：什麼！型別也有樣板字串（Template Literal Types）？ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day11]<!-- --> TS：什麼！型別也有樣板字串（Template Literal Types）？</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/sq1pHLi.png\" alt=\"template literal types\" class=\"img_ev3q\"></p><p>這是我們今天要聊的內容，老樣的，如果你已經可以輕鬆看懂，歡迎直接左轉去看我同事 Kyle 精彩的文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20113277/ironman/3877\" target=\"_blank\" rel=\"noopener noreferrer\">今晚，我想來點 Web 前端效能優化大補帖！</a>」。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"template-literal-types-的基本用法\">Template Literal Types 的基本用法<a href=\"#template-literal-types-的基本用法\" class=\"hash-link\" aria-label=\"Template Literal Types 的基本用法的直接連結\" title=\"Template Literal Types 的基本用法的直接連結\">​</a></h2><p>大部分 JavaScript 的開發者都知道有 <a href=\"https://pjchender.blogspot.com/2017/01/javascript-es6-template-literalstagged.html\" target=\"_blank\" rel=\"noopener noreferrer\">Template Literals</a> / Template Strings（樣本字面值）可以使用，講中文可能大家反而不知道是什麼，但重點就是使用反引號（backtick）<code>`</code> 這個關鍵字，並可以在 <code>${}</code> 裡面帶入變數，像是這樣：</p><div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> occupation </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Web Developer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> content </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">Hello, I am a </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">occupation</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">.</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &#x27;Hello, I am a Web Developer.&#x27;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>而這個用法同樣可以在 TypeScript 中定義型別時使用，稱作 <a href=\"https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Template Literal Types</a>。就讓我們直接把上面 JavaScript 的範例改成型別看看：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Occupation</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Web Developer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Content</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">Hello, I am a </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">Occupation</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">.</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;Hello, I am a Web Developer.&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>用起來就和 JavaScript 的 Template Literals 一樣，就是這麼簡單！</p><blockquote><p>這裡 <code>Occupation</code> 或 <code>Content</code> 這種直接用字串來定義型別的方式稱作 <a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types\" target=\"_blank\" rel=\"noopener noreferrer\">String Literal Types</a>。</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"當-template-literal-types-碰到聯集union\">當 Template Literal Types 碰到聯集（union）<a href=\"#當-template-literal-types-碰到聯集union\" class=\"hash-link\" aria-label=\"當 Template Literal Types 碰到聯集（union）的直接連結\" title=\"當 Template Literal Types 碰到聯集（union）的直接連結\">​</a></h2><p>在 TypeScript 中，Template Literal Types 除了可以像 JavaScript 直接帶入變數外，還可以帶入聯集型別（union types），而這是個非常實用的功能。</p><p>舉例來說：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;change&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;click&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;keydown&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">on</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">HandledEvent</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">//  &quot;onchange&quot; | &quot;onclick&quot; | &quot;onkeydown&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在上面的例子中可以看到 <code>HandledEvent</code> 是一個 Union Type，當我們把 Union Type 放到 Template Literal Types 中時，TypeScript 會根據所傳入的聯集，自動組成新的聯集（即，<code>&quot;onchange&quot; | &quot;onclick&quot; | &quot;onkeydown&quot;</code>），這個感覺有點類似前幾天提到的<a href=\"https://ithelp.ithome.com.tw/articles/10270929\" target=\"_blank\" rel=\"noopener noreferrer\">分配律</a>。</p><p>現在讓我們回到今天一開始的例子：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">X</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;left&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;right&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">Y</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;top&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;bottom&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Position</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation constant\" style=\"color:rgb(130, 170, 255)\">X</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">-</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation constant\" style=\"color:rgb(130, 170, 255)\">Y</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>現在讀者應該可以理解 <code>Position</code> 的型別最終會得到什麼。因為 <code>X</code> 傳入的是聯集 <code>&quot;left&quot; | &quot;right&quot;</code>，而 <code>Y</code> 也同樣是聯集 <code>&quot;top&quot; | &quot;bottom&quot;</code>，因此最終 <code>Position</code> 這個型別就會是 <code>&quot;left-top&quot; | &quot;left-bottom&quot; | &quot;right-top&quot; | &quot;right-bottom&quot;</code>。</p><p>透過 Template Literal Types 這樣的特性可以幫助開發者方便快速的產生所需要的型別。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"補充透過-template-literal-types-將-enum-的-values-變成-union-type\">補充：透過 Template Literal Types 將 enum 的 values 變成 Union Type<a href=\"#補充透過-template-literal-types-將-enum-的-values-變成-union-type\" class=\"hash-link\" aria-label=\"補充：透過 Template Literal Types 將 enum 的 values 變成 Union Type的直接連結\" title=\"補充：透過 Template Literal Types 將 enum 的 values 變成 Union Type的直接連結\">​</a></h2><p>在 TypeScript 中很常會只用到 enum，像是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">enum</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MANUFACTURE</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">APPLE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;apple&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">SAMSUNG</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;samsung&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">GOOGLE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;google&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">SONY</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>有時我們想要根據 enum 的 values 來產生出新的型別，如果透過手動定義的話很麻煩，會是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;google&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>而且未來如果 <code>MANUFACTURE</code> 有添加新的內容時，還要記得回過頭來修改 <code>Manufacture</code> 這個型別，非常不方便。</p><p>當有這種需求時，實際上可以使用 Template Literal Types 來解決：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation constant\" style=\"color:rgb(130, 170, 255)\">MANUFACTURE</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;apple&quot; | &quot;samsung&quot; | &quot;google&quot; | &quot;sony&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>就是這麼簡單，一行搞定！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/WzoKew\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/WzoKew</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Template Literal Types</a> @ TypeScript &gt; Type Manipulation</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day12]<!-- --> TS：什麼！型別還有遞迴（recursion）的概念？用組合技實作 SnakeToCamelCase pjchender.dev": {
    "prefix": "hironman-2021 [Day12]<!-- --> TS：什麼！型別還有遞迴（recursion）的概念？用組合技實作 SnakeToCamelCase pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day12]<!-- --> TS：什麼！型別還有遞迴（recursion）的概念？用組合技實作 SnakeToCamelCase</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/sJfUZaF.png\" alt=\"SnakeToCamelCase\" class=\"img_ev3q\"></p><p>這是我們今天要聊的內容，老樣的，如果你已經可以輕鬆看懂，歡迎直接左轉去看我同事 Andy 精彩的文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20111948/ironman/4306\" target=\"_blank\" rel=\"noopener noreferrer\">前端工程師學習 DevOps 之路</a>」。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"什麼是遞迴函式recursive-function\">什麼是遞迴函式（recursive function）<a href=\"#什麼是遞迴函式recursive-function\" class=\"hash-link\" aria-label=\"什麼是遞迴函式（recursive function）的直接連結\" title=\"什麼是遞迴函式（recursive function）的直接連結\">​</a></h2><p>遞迴（recursion）是寫程式時會使用到的概念，特別是在刷題的時候！？（推薦參考：<a href=\"https://ithelp.ithome.com.tw/articles/10265123\" target=\"_blank\" rel=\"noopener noreferrer\">Day 02 : Fibonacci 斐波那契</a> @ <a href=\"https://ithelp.ithome.com.tw/users/20141729/ironman/4766\" target=\"_blank\" rel=\"noopener noreferrer\">30 天用 JavaScript 刷題刷起來！</a>）</p><p>遞迴函式（recursive function）簡單來說就是在一個函式中呼叫它自己，舉例來說：</p><div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">countDown</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token console class-name\" style=\"color:rgb(255, 203, 107)\">console</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">log</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">num</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">return</span><span class=\"token plain\"> num </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">countDown</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">num </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">-</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在這個 <code>countDown</code> 函式中會去呼叫它自己（<code>countDown</code>）：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/I8hdgkl.png\" alt=\"recursion\" class=\"img_ev3q\"></p><p>recursive function 一定要有一個終止的條件，以這裡來說，就是當 <code>num &lt;= 0</code> 時，就不會再次呼叫自己。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"typescript-中也能使用遞迴\">TypeScript 中也能使用遞迴<a href=\"#typescript-中也能使用遞迴\" class=\"hash-link\" aria-label=\"TypeScript 中也能使用遞迴的直接連結\" title=\"TypeScript 中也能使用遞迴的直接連結\">​</a></h2><p>回到 TypeScript，在 TypeScript 中的 Type Alias 和 Conditional Type 也一樣可以使用遞迴函式的概念。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"recursive-type-aliases\">Recursive Type Aliases<a href=\"#recursive-type-aliases\" class=\"hash-link\" aria-label=\"Recursive Type Aliases的直接連結\" title=\"Recursive Type Aliases的直接連結\">​</a></h3><p>來比較一下下面這兩個例子：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 沒有使用 Recursive Type</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ValueOrArray</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用了 Recursive Type Aliases</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ValueOrNestedArray</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> ValueOrNestedArray</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>先看上面的 <code>ValueOrArray&lt;T&gt;</code> 這個 Utility Type，它的概念很簡單，它產生的型別可以是原本帶入 <code>&lt;&gt;</code> 內的型別，或者是這個型別所建立的陣列：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NumberArray</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ValueOrArray</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">let</span><span class=\"token plain\"> numberArray</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> NumberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">numberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ERROR: Type &#x27;[number]&#x27; is not assignable to type &#x27;number&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">numberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>我們可以看到要滿足 <code>ValueOrArray&lt;number&gt;</code> 的話，可以是一般的 <code>number</code>，或者是 <code>number[]</code>，但如果是 nested 的 <code>number[]</code>，TS 就會報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/NMcASal.png\" alt=\"Recursive Type Aliases\" class=\"img_ev3q\"></p><p>接著我們看到第二個例子 <code>ValueOrNestedArray&lt;T&gt;</code>， 你會發現到 <code>T | ValueOrNestedArray&lt;T&gt;[]</code> 指的是它除了可以是原本帶入 <code>&lt;&gt;</code> 的型別外，還在這個 Type 裡呼叫了它自己，這麼做的概念就很像是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ValueOrNestedArray</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>因此，如果要滿足 <code>ValueOrNestedArray&lt;number&gt;</code>，只要是 number array 都可以，即使它是 nested 的 number array：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">NestedNumberArray</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ValueOrNestedArray</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">let</span><span class=\"token plain\"> nestedNumberArray</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> NestedNumberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">nestedNumberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">nestedNumberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">nestedNumberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ERROR: Type &#x27;string&#x27; is not assignable to type &#x27;ValueOrNestedArray&lt;number&gt;&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">nestedNumberArray </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;0&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>除非帶入陣列的值不是 <code>number</code>，否則都是能夠滿足 <code>ValueOrNestedArray&lt;number&gt;</code> 的，而這就是遞迴在 TypeScript 中的使用 — 在一個 Utility Type 中呼叫自己。</p><p>遞迴概念也可以使用在 Conditional Types 中，讓我們回到今天最開始的那個範例。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"snaketocamelcase-的使用方式\">SnakeToCamelCase 的使用方式<a href=\"#snaketocamelcase-的使用方式\" class=\"hash-link\" aria-label=\"SnakeToCamelCase 的使用方式的直接連結\" title=\"SnakeToCamelCase 的使用方式的直接連結\">​</a></h2><p>讓我們來看一下今天的主角 <code>SnakeToCamelCase</code>，它的作用會像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SnakeToCamelCase</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;this_is_snake_case&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;thisIsSnakeCase&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SnakeToCamelCase</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;This_Is_Strange_Case&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;thisIsStrangeCase&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SnakeToCamelCase</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;IDontKnowThis&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;IDontKnowThis&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><ul><li>如果原本傳入的字串型別符合 snake case 的話，它可以把原本是 <code>snake_case</code> 的字串型別轉換成 <code>CamelCase</code>。</li><li>如果原本傳入的字串型別不符合 snake case 的話，則會直接回傳原本的型別回去。</li></ul><blockquote><p><code>SnakeToCamelCase</code> 是修改自 <a href=\"https://github.com/RossWilliams/ts-case-convert/blob/main/src/caseConvert.ts#L100\" target=\"_blank\" rel=\"noopener noreferrer\">ts-case-convert</a> 中的 <code>ToCamel</code> 這個 Utility Type。</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使用組合技寫出-snaketocamelcase\">使用組合技寫出 SnakeToCamelCase<a href=\"#使用組合技寫出-snaketocamelcase\" class=\"hash-link\" aria-label=\"使用組合技寫出 SnakeToCamelCase的直接連結\" title=\"使用組合技寫出 SnakeToCamelCase的直接連結\">​</a></h2><p>要理解這段原始碼，我們需要用到的知識包含前幾天提到的：</p><ul><li><a href=\"https://ithelp.ithome.com.tw/articles/10265710\" target=\"_blank\" rel=\"noopener noreferrer\">Generics</a> @ Day02</li><li><a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">Generic Constraints</a> @ Day03</li><li><a href=\"https://ithelp.ithome.com.tw/articles/10270213\" target=\"_blank\" rel=\"noopener noreferrer\">Conditional Types</a> @ Day08</li><li><a href=\"https://ithelp.ithome.com.tw/articles/10272213\" target=\"_blank\" rel=\"noopener noreferrer\">infer</a> @ Day10</li><li><a href=\"https://ithelp.ithome.com.tw/articles/10272659\" target=\"_blank\" rel=\"noopener noreferrer\">Template Literal Types</a> @ Day 11</li><li>Recursion @ 今天</li></ul><p>同時，隨著對 TypeScript 的知識越來越豐富，未來將會看到更複雜的 Utility Types，但原則是類似的，要先能夠做出正確的斷句，因此讓我們先把它拆開來一一理解。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"理解原始碼generic-constraints--conditional-types\">理解原始碼：Generic Constraints &amp; Conditional Types<a href=\"#理解原始碼generic-constraints--conditional-types\" class=\"hash-link\" aria-label=\"理解原始碼：Generic Constraints &amp; Conditional Types的直接連結\" title=\"理解原始碼：Generic Constraints &amp; Conditional Types的直接連結\">​</a></h3><p><img loading=\"lazy\" src=\"../../../i.imgur.com/qIjGNpJ.png\" alt=\"SnakeToCamelCase\" class=\"img_ev3q\"></p><ul><li>Generics Constraints：也就是 <code>&lt;T extends string&gt;</code>，從這裡可以知道帶入 SnakeToCamelCase 的型別一定要是字串型別</li><li>Conditional Types：在講使用方式時有提過，如果帶入的型別符合 snake case 的話，它會把它轉成 camel case，否則就直接回傳原本的型別回去。「如果...則...否則...」這種語句就表示用了 Conditional Types，也就是這裡的 <code>extends ... ? ... : ...</code>，至於是怎麼判斷它是不是 snake case 的話，會在下面提到。</li></ul><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"理解原始碼infer\">理解原始碼：infer<a href=\"#理解原始碼infer\" class=\"hash-link\" aria-label=\"理解原始碼：infer的直接連結\" title=\"理解原始碼：infer的直接連結\">​</a></h3><p><img loading=\"lazy\" src=\"../../../i.imgur.com/bcXPZh7.png\" alt=\"infer\" class=\"img_ev3q\"></p><p>這裡是怎麼判斷使用者帶入的型別是否符合 snake case 呢？可以看到這裡使用的條件判斷是 <code>${...}_${...}</code>，也即是說，這個字串型別中有 <code>_</code> 存在，它就可以滿足 snake case。</p><p>同時可以看到這裡用的了 <code>infer</code>，這裡 infer 的作用可以幫助我們「擷取」這個 snake case 的字串，把它拆成頭（Head）和尾（Tail）：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Uo3jzOC.png\" alt=\"infer\" class=\"img_ev3q\"></p><p>可以看到如果傳入的是 <code>this_is_snake_case</code> 的話，它的 <code>Head</code> 會是 <code>this</code>，<code>Tail</code> 會是 <code>is_snake_case</code>。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"理解原始碼uncapitalize-和-capitalizeintrinsic-string-manipulation-types\">理解原始碼：Uncapitalize 和 Capitalize（Intrinsic String Manipulation Types）<a href=\"#理解原始碼uncapitalize-和-capitalizeintrinsic-string-manipulation-types\" class=\"hash-link\" aria-label=\"理解原始碼：Uncapitalize 和 Capitalize（Intrinsic String Manipulation Types）的直接連結\" title=\"理解原始碼：Uncapitalize 和 Capitalize（Intrinsic String Manipulation Types）的直接連結\">​</a></h3><p>接著把注意力放到當條件為 True 時，裡面用了 <code>Uncapitalize</code> 和 <code>Capitalize</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/uJOOP3w.png\" alt=\"Intrinsic String Manipulation Types\" class=\"img_ev3q\"></p><p>這兩個 Utility Types 稱作「<a href=\"https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#intrinsic-string-manipulation-types\" target=\"_blank\" rel=\"noopener noreferrer\">Intrinsic String Manipulation Types</a>」，它們的用法就和它們的命名一樣：</p><ul><li><code>Uncapitalize&lt;StringType&gt;</code>：把第一個字母變小寫</li><li><code>Capitalize&lt;StringType&gt;</code>：把第一個字母變大寫</li></ul><p>除了這兩個之外，目前還有 <code>Lowercase&lt;StringType&gt;</code>（把所有字母變小寫）和 <code>Uppercase&lt;StringType&gt;</code>（把所有字母變大寫）這兩個 Intrinsic String Manipulation Types。</p><blockquote><p>Intrinsic String Manipulation Types 和其他的 Utility Types 有個不同的地方，Intrinsic String Manipulation Types 為了效能緣故是內建在 TS compiler 中的，因此並沒有辦法和其他 Utility Types 一樣直接從 <code>.d.ts</code> 中看到它們的原始碼。</p></blockquote><p>現在我們知道：</p><ul><li><code>Uncapitalize&lt;Head&gt;</code> 會把 infer 擷取出來的 <code>Head</code> 的第一個英文字母轉成小寫，<code>this</code> 因為原本第一個字就是小寫，所以不會有改變</li><li><code>Capitalize&lt;Tail&gt;</code> 則會把 infer 擷取出來的 <code>Tail</code> 的第一個英文字母轉成大寫，<code>is_snake_case</code> 會變成 <code>Is_snake_case</code></li></ul><p>如下圖所示：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/tmXB8Z2.png\" alt=\"Intrinsic String Manipulation Types\" class=\"img_ev3q\"></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"理解原始碼recursion\">理解原始碼：recursion<a href=\"#理解原始碼recursion\" class=\"hash-link\" aria-label=\"理解原始碼：recursion的直接連結\" title=\"理解原始碼：recursion的直接連結\">​</a></h3><p>現在好像可以看出一點所以然，知道是怎麼判斷傳進來的型別是不是符合 snake case，也知道怎麼把它切成頭尾後轉成 Uncapitalize 和 Capitalize，但還少了最後一步，就是今天學到的 recursion：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Ri7PQIt.png\" alt=\"recursion\" class=\"img_ev3q\"></p><p>這裡我們在 <code>SnakeToCamelCase</code> 這個 Utility Types 中，又去呼叫了自己。</p><p>在學習 TypeScript 的型別操作時，有一個很好的方式是：「<strong>遇到不懂或不確定的情況，一種是帶一個實際的值進去，另一種是『把它移掉，然後看看會發生什麼事』</strong>」，而要了解 recursion 幫我們做了什麼，就可以把它移掉試試看：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 為了理解 recursion 的作用，把原本在 Capitalize&lt;&gt; 內的 recursive function 拿掉</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">SnakeToCamelCaseWithoutRecursion</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation keyword\" style=\"font-style:italic\">infer</span><span class=\"token template-string interpolation\"> Head</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">_</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation keyword\" style=\"font-style:italic\">infer</span><span class=\"token template-string interpolation\"> Tail</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">Uncapitalize</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token template-string interpolation\">Head</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">Capitalize</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token template-string interpolation\">Tail</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果帶入原本的範例會發現，它們都只被改了一半，也就是只有 <code>thisIs_</code>的部分：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SnakeToCamelCaseWithoutRecursion</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;this_is_snake_case&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;thisIs_snake_case&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> SnakeToCamelCaseWithoutRecursion</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;This_Is_Strange_Case&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;thisIs_Strange_Case&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候就可以猜到，這裡的 recursion <code>${Capitalize&lt;SnakeToCamelCase&lt;Tail&gt;&gt;}</code> 做的事情，就是把前一次推論得到的 <code>Tail</code> 再當成參數帶入 <code>SnakeToCamelCase&lt;Tail&gt;</code> 中，而這個 recursion 會一直重複執行，直到最後帶入的 Tail 不符合 snake case 時終止：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/qXud9rl.png\" alt=\"recursion\" class=\"img_ev3q\"></p><p>而這也就是為什麼透過 <code>SnakeToCamelCase</code> 這個 Utility Type 能夠把 snake case 的字串型別轉換成 camelCase 了。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例fixpathsquarebrackets\">範例：FixPathSquareBrackets<a href=\"#範例fixpathsquarebrackets\" class=\"hash-link\" aria-label=\"範例：FixPathSquareBrackets的直接連結\" title=\"範例：FixPathSquareBrackets的直接連結\">​</a></h2><p>在 type-fest 這個套件中，提供了一個名為 <a href=\"https://github.com/sindresorhus/type-fest/blob/6b6d81ce894517268391db63b3d6538e971c8126/source/get.d.ts#L31\" target=\"_blank\" rel=\"noopener noreferrer\">FixPathSquareBrackets</a> 的 Utility Type，作用是把原本使用 square-bracketed syntax <code>[]</code> 的語法，改成使用 dot notation，具體來說就是：</p><div class=\"language-text codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">`foo[0].bar` -&gt; `foo.0.bar`</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這個 Type Utility 的原始碼是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">FixPathSquareBrackets</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Path </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  Path </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation keyword\" style=\"font-style:italic\">infer</span><span class=\"token template-string interpolation\"> Head</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">[</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation keyword\" style=\"font-style:italic\">infer</span><span class=\"token template-string interpolation\"> Middle</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">]</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation keyword\" style=\"font-style:italic\">infer</span><span class=\"token template-string interpolation\"> Tail</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">Head</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">.</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">Middle</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">FixPathSquareBrackets</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token template-string interpolation\">Tail</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Path</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>讀者們如果能夠理解今天的內容，就可以試著理解 <a href=\"https://github.com/sindresorhus/type-fest/blob/6b6d81ce894517268391db63b3d6538e971c8126/source/get.d.ts#L31\" target=\"_blank\" rel=\"noopener noreferrer\">FixPathSquareBrackets</a> 這段原始碼是什麼意思！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"recursion-小技巧\">Recursion 小技巧<a href=\"#recursion-小技巧\" class=\"hash-link\" aria-label=\"Recursion 小技巧的直接連結\" title=\"Recursion 小技巧的直接連結\">​</a></h2><ul><li>雖然在 TypeScript 中可以使用遞迴來達到強大的功能，但需要謹慎使用，因為它會讓 Type Checking 所消耗的效能和時間增加，所以雖然可以用 TS 寫 Fibonacci 的 Utility Type，但請不要這麼做！</li><li>在學習 TypeScript 的型別操作時，有一個很好的方式是：「遇到不懂或不確定的情況，一種是帶一個實際的值進去，另一種是『把它移掉，然後看看會發生什麼事』」，而要了解 recursion 幫我們做了什麼，就可以把它移掉試試看。</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/N5205m\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/N5205m</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考\">參考<a href=\"#參考\" class=\"hash-link\" aria-label=\"參考的直接連結\" title=\"參考的直接連結\">​</a></h2><ul><li><a href=\"https://github.com/RossWilliams/ts-case-convert/blob/main/src/caseConvert.ts#L100\" target=\"_blank\" rel=\"noopener noreferrer\">ToCamel</a> @ ts-case-convert</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#more-recursive-type-aliases\" target=\"_blank\" rel=\"noopener noreferrer\">Recursive Type Aliases</a> @ TypeScript &gt; TypeScript 3.7</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-1.html#recursive-conditional-types\" target=\"_blank\" rel=\"noopener noreferrer\">Recursive Conditional Types</a> @ TypeScript &gt; TypeScript 4.1</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#intrinsic-string-manipulation-types\" target=\"_blank\" rel=\"noopener noreferrer\">Intrinsic String Manipulation Types</a> @ TypeScript &gt; Type Manipulation</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day13]<!-- --> TS：什麼！這個 typeof 和我想的不一樣？ pjchender.dev": {
    "prefix": "hironman-2021 [Day13]<!-- --> TS：什麼！這個 typeof 和我想的不一樣？ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day13]<!-- --> TS：什麼！這個 typeof 和我想的不一樣？</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/ydxnUf2.png\" alt=\"typeof operator\" class=\"img_ev3q\"></p><p>這是我們今天要聊的內容（不是業配），老樣的，如果你已經可以輕鬆看懂，歡迎直接左轉去看我同事 Ken 精彩的文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20130721/ironman/4083\" target=\"_blank\" rel=\"noopener noreferrer\">From State Machine to XState</a>」。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"typeof-operator-in-javascript\">Typeof Operator in JavaScript<a href=\"#typeof-operator-in-javascript\" class=\"hash-link\" aria-label=\"Typeof Operator in JavaScript的直接連結\" title=\"Typeof Operator in JavaScript的直接連結\">​</a></h2><p>多數 JavaScript 的開發者都知道，在 JS 中有 <a href=\"https://javascript.info/types#type-typeof\" target=\"_blank\" rel=\"noopener noreferrer\">typeof operator</a> 可以使用，使用上雖然有一些要留意的細節，但基本上 <code>typeof</code> 可以幫開發者判斷某個變數的型別：</p><div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// https://javascript.info/types#type-typeof</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token keyword nil\" style=\"font-style:italic\">undefined</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;undefined&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">0</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;number&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;boolean&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;foo&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;string&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;function&quot;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"font-style:italic\">null</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;object&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"typeof-type-operator-in-typescript\">Typeof Type Operator in TypeScript<a href=\"#typeof-type-operator-in-typescript\" class=\"hash-link\" aria-label=\"Typeof Type Operator in TypeScript的直接連結\" title=\"Typeof Type Operator in TypeScript的直接連結\">​</a></h2><p>但今天我們要聊的是 TS 中的 <strong>Typeof Type Operator</strong>，多一個 type 差很多。</p><p>這個 <code>typeof</code> 的用法其實非常簡單，我們知道在 TypeScript 中，即使沒有針對變數定義型別（Type Annotation），它還是會自動幫我們推導出該變數對應的型別，只要把滑鼠移到該變數上方，就可以看到 TS 自動幫變數推導出其可能的型別：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/2JW6xwO.png\" alt=\"Type Inference\" class=\"img_ev3q\"></p><p>這裡 TypeScript 會自動把 conference 這個「變數」推導為如下的「型別」：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> conference</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但這個被自動推導出來的型別需要滑鼠移上去時才看得到，有沒有什麼方式能夠把這個「自動推導的結果」建立成一個可以被使用的型別呢？</p><p>有，就是 Typeof Type Operator，它的語法一樣就是 <code>typeof</code> ，後面可以接「變數」或「屬性」：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Conference</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這個建立出來的型別 <code>Conference</code> 就會是剛剛一開始滑鼠移到變數 <code>conference</code> 上時顯示的結果：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/z5QccKS.png\" alt=\"Typeof Type Operator\" class=\"img_ev3q\"></p><p>那回到今天最開始的例子：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> conference </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;MOPCON&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">2021</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;https://mopcon.org/2021/&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceKeys</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>搭配在<a href=\"https://ithelp.ithome.com.tw/articles/10267302\" target=\"_blank\" rel=\"noopener noreferrer\">第 4 天</a>時對 <code>keyof</code> 的了解，讀者應該可以想到 <code>ConferenceKeys</code> 的結果會是什麼。因為 <code>typeof conference</code> 是物件型別，所以 <code>keyof typeof conference</code> 就會是把所有該物件型別所有的 key 取出組成 Union Type：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/PJnPeJX.png\" alt=\"Typeof Type Operator\" class=\"img_ev3q\"></p><p>讀者也許會好奇，不能直接用 <code>keyof conference</code> 就好，一定要在 <code>conference</code> 前面加上 <code>typeof</code> 嗎？<strong>學習 TS 的重點之一就是拿掉看看會發生什麼事</strong>，現在就讓我們拿掉原本的 <code>typeof</code> 看看：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/phDqlCY.png\" alt=\"Typeof Type Operator\" class=\"img_ev3q\"></p><p>這時候 TypeScript 報錯了，錯誤內容是：</p><blockquote><p>&#x27;conference&#x27; refers to a value, but is being used as a type here. Did you mean &#x27;typeof conference&#x27;?</p></blockquote><p>意思是，<code>conference</code> 是 value，但它卻被當成 type 來使用。為什麼會有這個錯誤呢？</p><p>還記得 <code>conference</code> 本身是一個 JavaScript 中的變數而不是 TypeScript 中的型別嗎？因為 <code>keyof</code> 後面只能接的是「型別（Type）」，不能接 JavaScript 的「值（value）」，因此，一定會需要透過 <code>typeof</code> 先把 JS 的變數值轉成 TS 的型別後，才能使用 <code>keyof</code> 這個 operator。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"區分-javascript-和-typescript-的-typeof\">區分 JavaScript 和 TypeScript 的 typeof<a href=\"#區分-javascript-和-typescript-的-typeof\" class=\"hash-link\" aria-label=\"區分 JavaScript 和 TypeScript 的 typeof的直接連結\" title=\"區分 JavaScript 和 TypeScript 的 typeof的直接連結\">​</a></h2><p>其實...也沒什麼好區分的。</p><p>雖然這兩個的語法都是 <code>typeof</code>，但執行的時間點是完全不同的，JavaScript 的 typeof operator 會在程式執行時（runtime）呼叫，而 TypeScript 的 typeof type operator 則只有在 TypeScript 中「操作型別」時會用到，一旦把 <code>.ts</code> 編譯成 <code>.js</code> 後，到了 runtime 會無影無蹤（畢竟 JS 原生並沒有這種強型別的概念）。</p><p>可以分辨的出那個是 JavaScript 的 Typeof Operator，那個是 TypeScript 的 Typeof Type Operator 嗎？</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> conference </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;MOPCON&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">2021</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;https://mopcon.org/2021/&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Conference</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> typeofConference </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"補充把-enum-的所有-key-取出成-union-types\">補充：把 enum 的所有 key 取出成 union types<a href=\"#補充把-enum-的所有-key-取出成-union-types\" class=\"hash-link\" aria-label=\"補充：把 enum 的所有 key 取出成 union types的直接連結\" title=\"補充：把 enum 的所有 key 取出成 union types的直接連結\">​</a></h2><p>還記得在 <a href=\"https://ithelp.ithome.com.tw/articles/10272659\" target=\"_blank\" rel=\"noopener noreferrer\">Day11</a> 中曾提到，透過 Template Literal Types 可以把 enum 的 values 取出變成聯集嗎？</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">enum</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MANUFACTURE</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">APPLE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;apple&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">SAMSUNG</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;samsung&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">GOOGLE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;google&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">SONY</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;sony&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Manufacture</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation constant\" style=\"color:rgb(130, 170, 255)\">MANUFACTURE</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;apple&quot; | &quot;samsung&quot; | &quot;google&quot; | &quot;sony&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>現在如果是想要把 enum 的 key 取出變成 union types 的話，則可以使用到今天提的 Typeof Type Operator：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Get all keys of enum</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ManufactureKeys</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MANUFACTURE</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;APPLE&quot; | &quot;SAMSUNG&quot; | &quot;GOOGLE&quot; | &quot;SONY&quot;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>是不是很酷又很方便啊！現在讀者就可以根據需要取得 enum 的 keys union 或 values union 了。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/mAV3RW\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/mAV3RW</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"工商時間\">工商時間<a href=\"#工商時間\" class=\"hash-link\" aria-label=\"工商時間的直接連結\" title=\"工商時間的直接連結\">​</a></h2><p>筆者今年將會在 <a href=\"https://mopcon.org/2021/\" target=\"_blank\" rel=\"noopener noreferrer\">MOPCON 2021</a> 分享主題「用 Type 建立 Type：一起來當個 TypeScript 的型別魔術師」，提供給對 TypeScript 有興趣，又覺得每天追文章實在太辛苦的你來參考看看！但即使報名了 MOPCON 還是可以繼續追蹤鐵人賽啦！</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/DhmsIYI.png\" alt=\"MOPCON2021\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/typeof-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Typeof Type Operator</a> @ TypeScript &gt; Type Manipulation</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day14]<!-- --> TS：什麼！TypeScript 中還有迴圈的概念 - 用 Mapped Type 操作物件型別 pjchender.dev": {
    "prefix": "hironman-2021 [Day14]<!-- --> TS：什麼！TypeScript 中還有迴圈的概念 - 用 Mapped Type 操作物件型別 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day14]<!-- --> TS：什麼！TypeScript 中還有迴圈的概念 - 用 Mapped Type 操作物件型別</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/c83lS43.png\" alt=\"Mapped Type\" class=\"img_ev3q\">)</p><p>上面這個是今天會提到的內容，如果你已經可以輕鬆看懂，歡迎直接左轉去看我<a href=\"https://ithelp.ithome.com.tw/2021ironman/signup/team/206\" target=\"_blank\" rel=\"noopener noreferrer\">隊友們</a>的精彩文章！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"index-signatures--indexable-types\">Index Signatures &amp; Indexable Types<a href=\"#index-signatures--indexable-types\" class=\"hash-link\" aria-label=\"Index Signatures &amp; Indexable Types的直接連結\" title=\"Index Signatures &amp; Indexable Types的直接連結\">​</a></h2><p>在了解 Mapped Type 之前，需要先來看一下它的前身 Index Signatures。一般來說，在 TypeScript 裡定義物件的型別會需要把物件的每一個 key 和 value 的型別都定義清楚，像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但有些時候，因為一些原因，也許是 key 的名稱不是那麼重要時，或者 key 的可能太多時，我們可以使用 index signatures 來定義這個物件，例如，定義一個 key 為 <code>string</code>，value 則為 <code>string</code> 或 <code>number</code> 的型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonDict</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// &quot;key&quot; 可以是取成任何名稱</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在 <code>[key: string]</code> 中的這個 <code>key</code> 可以是任何名稱，你也可以改成 <code>[property: string]</code> 效果是一樣的。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mapped-type-和-in-operator\">Mapped Type 和 in operator<a href=\"#mapped-type-和-in-operator\" class=\"hash-link\" aria-label=\"Mapped Type 和 in operator的直接連結\" title=\"Mapped Type 和 in operator的直接連結\">​</a></h2><p>在了解 index signatures type 後，就可以來初步認識 Mapped Type。而在 Mapped Type 中最重要的就是 <code>in</code> 這個關鍵字的使用。</p><p>先來看看 <code>in</code> 怎麼用：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonMap</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;firstName&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;lastName&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡和 index signatures 類似，你一樣會看到像是 <code>[key: ... ]</code> 這樣的寫法，<code>key</code> 一樣是可以自己取的變數名稱，而不一樣的是多了 <code>in</code> 這個關鍵字。</p><p>這個 <code>in</code> 的感覺非常「類似」在 JavaScript 中 Array 的 <code>for...of</code> 方法，上面的 <code>[key in &#x27;firstName&#x27; | &#x27;lastName&#x27;]</code> 可以想成是這樣的感覺：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Mapped Type 中的 [key in &#x27;firstName&#x27; | &#x27;lastName&#x27;]，很類似於 for...of 的方法</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">for</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> key </span><span class=\"token keyword\" style=\"font-style:italic\">of</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;firstName&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;lastName&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">console</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">log</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">key</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在 <code>for (const key of ...)</code> 中，這個 key 會是每次疊代時陣列取得的元素值，所以這裡的話第一次會是 <code>firstName</code>，第二次會是 <code>lastName</code>。</p><p>回到 Mapped Type 中的 <code>[key in &#x27;firstName&#x27; | &#x27;lastName&#x27;]</code>，這裡的 <code>key</code> 也是很類似的概念，可以想像成會跑一個迴圈，第一次 <code>key</code> 的值會是 <code>firstName</code>，第二次的值則是 <code>lastName</code>。</p><p>也就是說，上面的：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonMap</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;firstName&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;lastName&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>其實就是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonMap</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><div class=\"theme-admonition theme-admonition-tip alert alert--success admonition_LlT9\"><div class=\"admonitionHeading_tbUL\"><span class=\"admonitionIcon_kALy\"><svg viewBox=\"0 0 12 16\"><path fill-rule=\"evenodd\" d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"></path></svg></span>提示</div><div class=\"admonitionContent_S0QG\"><p>把 Mapped Type 中的 <code>key in ...</code> 想成是類似 <code>for (const key of ...)</code> 的概念，是我認為理解 mapped type 最重要的一步。它都有跑一個迴圈把所有元素依序取出來的概念。</p></div></div><p>由於 <code>key</code> 只是一個變數名稱，它也可以命名成其他名稱，又因為它表示的是物件屬性（property），所以也很常會用 <code>P</code> 來表示它，例如下面建立另一個 mapped type：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Device</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;google&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果了解剛剛的說明的話，應該可以想到，這裡 <code>P</code> 就會依序是 <code>apple</code>、<code>samsung</code> 和 <code>pixel</code>，出來的型別會等同於：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Device</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  apple</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  samsung</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  pixel</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡你也可以理解到 mapped type 和 indexed signature 的差別，mapped type 可以視為是 indexed signatures 的子集合（subset），它能將物件的屬性定義的更明確，而不是單純用某個型別來表示：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// index signatures：物件的屬性只要是 string 即可</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">DeviceDict</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">key</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// mapped type：物件的屬性需要是 &#x27;apple&#x27; | &#x27;samsung&#x27; | &#x27;google&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">DeviceMap</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;apple&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;samsung&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;google&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>單純看到這裡，可能還是感受不到為什麼會說 Mapped Type 是可以用來操作型別的「型別魔術師」，只會覺得 Mapped Type 單純只是可以「跑迴圈」用的。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"搭配-keyof-修改-object-type-中所有-value-的型別\">搭配 keyof 修改 Object Type 中所有 value 的型別<a href=\"#搭配-keyof-修改-object-type-中所有-value-的型別\" class=\"hash-link\" aria-label=\"搭配 keyof 修改 Object Type 中所有 value 的型別的直接連結\" title=\"搭配 keyof 修改 Object Type 中所有 value 的型別的直接連結\">​</a></h2><p>讓我們回到今天的例子。</p><p>假設現在我們定義了一系列的事件：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">SupportedEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  click</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  change</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候如果想根據 SupportedEvent 中屬性的名稱，產生一個新的型別叫做 <code>HandledEvent</code>，但物件 value 的型別要全部換成 function 的話，我們當然可以如同過去一個一個把屬性定義出來：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">click</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">change</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">keyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">keydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但這麼做除了很麻煩之外，未來如果有新增支援的事件類型到 <code>SupportedEvent</code> 的話，還需要同時記得加到 <code>HandledEvent</code> 這個型別中，如果忘記加的話，兩個型別中支援的 Event 類型就會不一致。</p><p>這時候使用 Mapped Type 搭配 keyof 就會非常的方便：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> SupportedEvent</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>寫成這樣就搞定了，未來如果 SupportedEvent 中有新增的事件類型是，HandledEvent 也不需要額外改動，如此將符合 Single Source of Truth 的概念。</p><p>現在來了解一下我們剛剛的組合技是怎麼使用的。</p><p>首先要注意到的是 <code>[K in keyof SupportedEvent]</code>：</p><ul><li>前面有提到 <code>K</code> 只是一個變數名稱，會對應到的是 <code>in</code> 後面每次取出來的值。</li></ul><p>接著把注意力放到 <code>in</code> 後面的內容，它是 <code>keyof SupportedEvent</code></p><ul><li>搭配前面對於 keyof 的理解，可以知道 <code>keyof SupportedEvent</code>，對應到也就會是 <code>click | change | keyup | keydown</code></li></ul><p>也就是說如果換成 JavaScript <code>for ... of</code> 的方法，它會像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">//  [K in keyof SupportedEvent]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">for</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">of</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;click&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;change&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;keyup&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;keydown&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">/* ... */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這樣你就可以知道，<code>K</code> 其實對應到的就會是 <code>click</code>、<code>change</code>、<code>keyup</code> 和 <code>keydown</code>。</p><p>再來是 <code>[K in keyof SupportedEvent]: () =&gt; void;</code> 中 <code>:</code> 後的內容就會是物件 value 的型別。因為我們想要把它改成 function，所以就在後面放了 <code>() =&gt; void</code>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mapped-type-學習重點\">Mapped Type 學習重點<a href=\"#mapped-type-學習重點\" class=\"hash-link\" aria-label=\"Mapped Type 學習重點的直接連結\" title=\"Mapped Type 學習重點的直接連結\">​</a></h2><ul><li>把 Mapped Type 中的 <code>[KEY in ...]</code> 想成是類似 <code>for (const key of ...)</code> 的概念，是我認為理解 mapped type 最重要的一步。它們都有跑一個迴圈把所有元素依序取出來的概念。</li><li>操作物件型別時，要很快聯想到 Mapped Types，不論是想改變物件屬性 key 的名稱或 value 的型別，都可以透過。Mapped Types 達到。</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/mx5v8W\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/mx5v8W</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/mapped-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Mapped Types</a> @ TypeScript &gt; Type Manipulation</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day15]<!-- --> TS：在 Mapped Type 中使用 Template Literal 來改物件型別中的所有 key pjchender.dev": {
    "prefix": "hironman-2021 [Day15]<!-- --> TS：在 Mapped Type 中使用 Template Literal 來改物件型別中的所有 key pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day15]<!-- --> TS：在 Mapped Type 中使用 Template Literal 來改物件型別中的所有 key</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/nf0rujM.png\" alt=\"Mapped Types\" class=\"img_ev3q\"></p><p>上面這個是今天會提到的內容，如果你已經可以輕鬆看懂，歡迎直接左轉去看我<a href=\"https://ithelp.ithome.com.tw/2021ironman/signup/team/206\" target=\"_blank\" rel=\"noopener noreferrer\">隊友們</a>的精彩文章！</p><p>昨天我們已經學到了 Mapped Types 的精華，就是可以在 Index Signatures 中使用 <code>in</code> 來疊代 <code>in</code> 後面的所有元素，便可以透過 Mapped Type 修改物件型別中所有屬性值的型別。因此，可以把原本的 <code>SupportedEvent</code> 進行修改：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">SupportedEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  click</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  change</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>透過 <code>HandledEvent</code> 這個 Utility Type 進行轉換後，產生出新的型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> SupportedEvent</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>更好的方式還可以把 <code>Supported Event</code> 變成一個泛型的參數，讓它變成 Utility Type，像是這樣，如此 <code>MappedValuesToFunction</code> 就可以變的更泛用：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">MappedValuesToFunction</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> MappedValueToFunction</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">SupportedEvent</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"修改物件型別的所有-key\">修改物件型別的所有 key<a href=\"#修改物件型別的所有-key\" class=\"hash-link\" aria-label=\"修改物件型別的所有 key的直接連結\" title=\"修改物件型別的所有 key的直接連結\">​</a></h2><p>從昨天的內容中，我們已經知道如何透過 Mapped Types 「一次修改所有 <code>SupportedEvent</code> 屬性值的型別」，最後得到的 <code>HandledEvent</code> 會是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">click</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">change</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">keyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">keydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如果現在我們不是要修改物件型別中屬性值的型別，而是想要修改屬性 key 的名稱時，可以怎麼做呢？舉例來說，我們想要根據 <code>HandledEvent</code> ，透過某個 Utility Type 後可以產生出像這樣的型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleClick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleChange</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleKeyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleKeydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候就可以用到今天要提的這個 Utility Type：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/nf0rujM.png\" alt=\"Mapped Types\" class=\"img_ev3q\"></p><p>讓我們來依序拆解並理解這個寫法。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mapped-type--keyof-type-operator\">Mapped Type + keyof Type Operator<a href=\"#mapped-type--keyof-type-operator\" class=\"hash-link\" aria-label=\"Mapped Type + keyof Type Operator的直接連結\" title=\"Mapped Type + keyof Type Operator的直接連結\">​</a></h3><p><img loading=\"lazy\" src=\"../../../i.imgur.com/zqEgODf.png\" alt=\"Mapped Types\" class=\"img_ev3q\"></p><p>首先，從 <code>in</code> 這個關鍵字可以看到這裡用了 Mapped Type，而 <code>[K in keyof T]</code> 的意思就是把 <code>T</code> 這個物件型別的所有 key 取出組成 union types，以這裡來說，如果寫 <code>ToEventHandler&lt;HandledEvent&gt;</code> 的話，這裡的 <code>keyof T</code> 應該就會變成 <code>&quot;click&quot; | &quot;change&quot; | &quot;keyup&quot; | &quot;keydown&quot;</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/YRzBy7C.png\" alt=\"keyof\" class=\"img_ev3q\"></p><p>所以說 <code>[K in keyof T]</code> 就會是用疊代的方式，每次取出 <code>&quot;click&quot; | &quot;change&quot; | &quot;keyup&quot; | &quot;keydown&quot;</code> 中的元素來跑迴圈，可以想像組出來的東西應該會像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  click</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  change</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"搭配-as-使用-template-literal\">搭配 as 使用 Template Literal<a href=\"#搭配-as-使用-template-literal\" class=\"hash-link\" aria-label=\"搭配 as 使用 Template Literal的直接連結\" title=\"搭配 as 使用 Template Literal的直接連結\">​</a></h3><p>接著我們看到這裡有 Template Literal 的用法，也就是 <code>`${}`</code> 的用法，並且搭配關鍵字 <code>as</code> 來使用：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/uSWdFxK.png\" alt=\"Mapped Type\" class=\"img_ev3q\"></p><p>透過 <code>as</code> 後面接字串型別的方式，就可以讓我們達到修改屬性 <code>key</code> 的目的。</p><p>現在為了方便理解，我們先把 Template Literal 中的 <code>Capitalize</code> 拿掉：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToEventHandler</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">as</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">handle</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token template-string interpolation\"> </span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&amp;</span><span class=\"token template-string interpolation\"> </span><span class=\"token template-string interpolation constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候應該會看到經過這個 Utility Type 後跑出來的型別會是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ToEventHandler</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">HandledEvent</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 預期 EventHandler 會長這樣</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handleclick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handlechange</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handlekeyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handlekeydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡我們已經成功透過 Mapped Type 搭配 <code>as</code> 和 Literal Template 的使用，成功把物件型別的 key 進行了轉換，讓每個 key 的最前面都多了 <code>handle...</code> 的前綴。</p><p>但因為在 JavaScript 中，通常函式的命名會用小寫駝峰的方式，例如，<code>handleClick</code>、<code>handleChange</code>，因此這裡可以在搭配使用在 <a href=\"https://ithelp.ithome.com.tw/articles/10272962\" target=\"_blank\" rel=\"noopener noreferrer\">Day12</a> 時曾經提到的 <a href=\"https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#intrinsic-string-manipulation-types\" target=\"_blank\" rel=\"noopener noreferrer\">Intrinsic String Manipulation Types</a> ，透過 <code>Capitalize</code> 來將字串型別的第一個字轉成英文大寫，因此如果改會原本的寫法 <code>as `handle${Capitalize&lt;string &amp; K&gt;}` </code>後，產生出來的 key 的名稱就會是我們想要的以 <code>handle</code> 作為開頭的 key：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ToEventHandler</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">HandledEvent</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 預期 EventHandler 會長這樣</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handleClick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handleChange</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handleKeyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  handleKeydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mapped-type-中的-k-key-是可以拿來使用的\">Mapped Type 中的 K (key) 是可以拿來使用的<a href=\"#mapped-type-中的-k-key-是可以拿來使用的\" class=\"hash-link\" aria-label=\"Mapped Type 中的 K (key) 是可以拿來使用的的直接連結\" title=\"Mapped Type 中的 K (key) 是可以拿來使用的的直接連結\">​</a></h3><p>來看最後一個部分：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/XSlD4qL.png\" alt=\"Mapped Types\" class=\"img_ev3q\"></p><p>這裡我們把 Mapped Types 跑迴圈是的變數取名為 <code>K</code>，而不論取名是 <code>K</code> 或 <code>P</code>，它都只是個變數名稱，要取名成什麼都可以，但實際上它也不單單只是個名稱，它還可以被拿來被後續使用。</p><p>這裡 <code>[...]: T[K]</code> 中 <code>:</code> 後面放的就是這個屬性值的型別，我們知道 <code>T</code> 就是我們帶進去的物件型別，而 <code>K</code> 其實就是沒有次跑迴圈時的 <code>key</code>，因此 <code>T[K]</code> 就是我們在 <a href=\"https://ithelp.ithome.com.tw/articles/10268017\" target=\"_blank\" rel=\"noopener noreferrer\">Day05</a> 曾提過的 <a href=\"https://ithelp.ithome.com.tw/articles/10268017\" target=\"_blank\" rel=\"noopener noreferrer\">Indexed Access Types</a>，意思就是直接把該屬性值原本的型別取出來就好。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"總結\">總結<a href=\"#總結\" class=\"hash-link\" aria-label=\"總結的直接連結\" title=\"總結的直接連結\">​</a></h2><p>現在總結來看，應該就可以知道怎麽透過 Mapped Type 搭配 <code>as</code> 和 Template Literal 來修改物件型別中的屬性名稱：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">SupportedEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  click</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  change</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  keydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">MappedValuesToFunction</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">HandledEvent</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> MappedValuesToFunction</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">SupportedEvent</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToEventHandler</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">as</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">handle</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">${</span><span class=\"token template-string interpolation\">Capitalize</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token template-string interpolation builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token template-string interpolation\"> </span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&amp;</span><span class=\"token template-string interpolation\"> </span><span class=\"token template-string interpolation constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token template-string interpolation operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ToEventHandler</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">HandledEvent</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡最終的 <code>EventHandler</code> 就會是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">EventHandler</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleClick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleChange</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleKeyup</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">handleKeydown</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">void</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/mAVZRW\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/mAVZRW</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/mapped-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Mapped Types</a> @ TypeScript &gt; Type Manipulation</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day16]<!-- --> TS：在 Mapped Type 中修改物件的 property modifiers：理解 Partial、Required 和 Readonly 的實作 pjchender.dev": {
    "prefix": "hironman-2021 [Day16]<!-- --> TS：在 Mapped Type 中修改物件的 property modifiers：理解 Partial、Required 和 Readonly 的實作 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day16]<!-- --> TS：在 Mapped Type 中修改物件的 property modifiers：理解 Partial、Required 和 Readonly 的實作</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/DQgFHSU.png\" alt=\"Required\" class=\"img_ev3q\"></p><p>這是我們今天要聊的內容，老樣的，如果你已經可以輕鬆看懂，歡迎直接左轉去看同事 Kyle 的精彩文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20113277/ironman/3877\" target=\"_blank\" rel=\"noopener noreferrer\">今晚，我想來點 Web 前端效能優化大補帖！</a>」。</p><p>在 <a href=\"https://ithelp.ithome.com.tw/articles/10274801\" target=\"_blank\" rel=\"noopener noreferrer\">Day14</a> 我們理解了如何透過 Mapped Type 修改物件型別中屬性的 value，在 <a href=\"https://ithelp.ithome.com.tw/articles/10275512\" target=\"_blank\" rel=\"noopener noreferrer\">Day15</a> 中我們則理解了如何透過 Mapped Type 來修改物件型別中屬性的 key，看起來好像已經能完整操作物件型別了，但等等，在 TypeScript 的物件型別中還有一個是 <a href=\"https://www.typescriptlang.org/docs/handbook/2/objects.html#property-modifiers\" target=\"_blank\" rel=\"noopener noreferrer\">Property Modifiers</a>（屬性修飾符）。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"property-modifiers\">Property Modifiers<a href=\"#property-modifiers\" class=\"hash-link\" aria-label=\"Property Modifiers的直接連結\" title=\"Property Modifiers的直接連結\">​</a></h2><p><a href=\"https://www.typescriptlang.org/docs/handbook/2/objects.html#property-modifiers\" target=\"_blank\" rel=\"noopener noreferrer\">屬性修飾符（Property Modifiers）</a>這個詞你可能沒聽過，但應該一定用過，像是透過在屬性名稱後面加上 <code>?</code> 讓該屬性變成是 optional 的，或是透過 <code>readonly</code> 讓該屬性在 type-checking 時不能被修改，另外像是 <a href=\"https://ithelp.ithome.com.tw/articles/10274801\" target=\"_blank\" rel=\"noopener noreferrer\">Day14</a> 提過的 Index Signatures 也算是 Property Modifiers 的一種：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Property Modifiers: ?, readonly</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// lastName is optional</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">readonly</span><span class=\"token plain\"> age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// you should not mutate the age</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mapped-modifiers\">Mapped Modifiers<a href=\"#mapped-modifiers\" class=\"hash-link\" aria-label=\"Mapped Modifiers的直接連結\" title=\"Mapped Modifiers的直接連結\">​</a></h2><p>在知道 Property Modifiers 後，讓我們來看看如何透過 Mapped Types 來修改屬性的 Property Modifiers。</p><p>如果要在 Mapped Types 中添加或移除 Property Modifiers 的話（像是把所有的屬性都變成 optional），需要用到 <code>+</code> 或 <code>-</code>，預設沒寫的話就是 <code>+</code> ，來看下面幾個例子。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"optional-properties\">Optional Properties<a href=\"#optional-properties\" class=\"hash-link\" aria-label=\"Optional Properties的直接連結\" title=\"Optional Properties的直接連結\">​</a></h3><p>要改變物件屬性是否為 optional，只需要使用 <code>+?</code> 或 <code>-?</code> 即可。若要把每個物件型別的屬型都變 optional，可以使用 <code>+?</code> 或 <code>?</code> 都可以，因為預設就會是 <code>+</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/PVs1xPj.png\" alt=\"Mapped Modifiers\" class=\"img_ev3q\"></p><p>相反的如果要讓物件型別全部的屬性都不是 optional 的話，可以用 <code>-?</code>，但這裡的減號就不能省略：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/dmATTQT.png\" alt=\"Mapped Modifiers\" class=\"img_ev3q\"></p><p>實際上使用這兩個 Type Utility 的話，效果會像是這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">interface</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// lastName is optional</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">readonly</span><span class=\"token plain\"> age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// you should not mutate the age</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把每個物件型別的屬性都變成 optional</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToOptionalProperty</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">+</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把每個物件型別的屬性的 optional 都移除</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">RemoveOptionalProperty</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">-</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonWithOptionalProps</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ToOptionalProperty</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonWithoutOptionalProps</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> RemoveOptionalProperty</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>一開始 <code>Person</code> 中並不是每個 Property 都是 optional 的，但經過 <code>ToOptionalProperty</code>，所有 Properties 就都會是 Optional 的：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/RHnlR2X.png\" alt=\"Mapped Modifiers\" class=\"img_ev3q\"></p><p>而 <code>RemoveOptionalProperty</code> 則能夠以此類推，使用 <code>-?</code> 後所有物件屬性原本的 optional 也都會被移除。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"readonly-properties\">Readonly Properties<a href=\"#readonly-properties\" class=\"hash-link\" aria-label=\"Readonly Properties的直接連結\" title=\"Readonly Properties的直接連結\">​</a></h3><p>使用 Mapped Modifiers 添加或移除 <code>readonly</code> 屬性的方式也完全一樣，也是透過 <code>+</code> 和 <code>-</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把每個物件型別的屬性都加上 readonly</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToReadOnlyProperty</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">+</span><span class=\"token keyword\" style=\"font-style:italic\">readonly</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 最前面的 + 可以省略</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把每個物件型別的屬性都移除 readonly</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">RemoveReadOnlyProperty</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">-</span><span class=\"token keyword\" style=\"font-style:italic\">readonly</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonWithReadonlyProps</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ToReadonlyProperty</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonWithoutReadonlyProps</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> RemoveReadonlyProperty</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Person</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>使用起來的效果就和 optional 時的說明一樣，如果針對 <code>Person</code> 使用了 <code>RemoveReadonlyProperty</code> 的話，原本的 <code>readonly</code> modifier 會被移除：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/u856l5Z.png\" alt=\"Mapped Modifiers\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"根據-mapped-modifiers-實作出來的-utility-types\">根據 Mapped Modifiers 實作出來的 Utility Types<a href=\"#根據-mapped-modifiers-實作出來的-utility-types\" class=\"hash-link\" aria-label=\"根據 Mapped Modifiers 實作出來的 Utility Types的直接連結\" title=\"根據 Mapped Modifiers 實作出來的 Utility Types的直接連結\">​</a></h2><p>實際上根據筆者個人經驗，比較少直接用的 Mapped Modifiers 來操作，不是它們不常被用到，而是因為 TypeScript 已經把它們包成幾個常用的 Utility Types，像是 <code>Partial&lt;Type&gt;</code>、<code>Required&lt;Type&gt;</code> 或 <code>Readonly&lt;Type&gt;</code> ，這三個 Type Utilities 都是在 Mapped Types 中使用 Mapped Modifiers 來做的操作，未來會再看到更多 Mapped Types 的延伸變化，就能理解 Mapped Type 有多強大。</p><p>有了 Mapped Modifiers 的概念後，這幾個 Utility Types 的原始碼都會很好理解。其中最常用的 <code>Partial&lt;Type&gt;</code> 其原始碼是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Make all properties in T optional</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Partial</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>跟我們剛剛寫的 <code>ToOptionalProperty</code> 是不是一模一樣呢？</p><p>然後是 <code>Required&lt;Type&gt;</code> 的原始碼：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Make all properties in T required</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Required</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">-</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>是不是也和剛剛寫的 <code>RemoveOptionalProperty</code> 一樣？</p><p>最後是 <code>Readonly&lt;Type&gt;</code> 的原始碼：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Readonly</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">readonly</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>也和剛剛我們提到的 <code>ToReadOnlyProperty</code> 相同。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/WK86ow\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/WK86ow</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/objects.html#property-modifiers\" target=\"_blank\" rel=\"noopener noreferrer\">Property Modifiers</a> @ TypeScript &gt; Object Types</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/2/mapped-types.html#mapping-modifiers\" target=\"_blank\" rel=\"noopener noreferrer\">Mapping Modifiers</a> @ TypeScript &gt; Type Manipulations</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Utility Types</a> @ TypeScript &gt; Reference</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day17]<!-- --> TS：理解 Pick、Record 的實作 pjchender.dev": {
    "prefix": "hironman-2021 [Day17]<!-- --> TS：理解 Pick、Record 的實作 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day17]<!-- --> TS：理解 Pick、Record 的實作</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/SItkueL.png\" alt=\"Record\" class=\"img_ev3q\"></p><p>這是我們今天要聊的內容，老樣的，如果你已經可以輕鬆看懂，歡迎直接左轉去看同事 Andy 精彩的文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20111948/ironman/4306\" target=\"_blank\" rel=\"noopener noreferrer\">前端工程師學習 DevOps 之路</a>」。</p><p>在學習了 Mapped Types 後，我們已經把多數要用來操作型別所需的知識補齊了，後面幾天就來看一些實際會用到的實作，包括 TypeScript 中內建以及其他第三方提供的 Utility Types。</p><p>今天讓我們先來看 <code>Pick</code> 和 <code>Record</code>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"pick\">Pick<a href=\"#pick\" class=\"hash-link\" aria-label=\"Pick的直接連結\" title=\"Pick的直接連結\">​</a></h2><p>在 TypeScript 內建的 Utility Types 中，有一個 <code>Pick&lt;T, K extends keyof T&gt;</code> ，使用方式很簡單，它可以幫選擇要保留下物件型別中的那些屬性，例如：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Pick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;firstName&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;lastName&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>而 <code>PersonName</code> 的型別就會等同於這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在有了前面關於型別操作的知識後，會發現 <code>Pick</code> 的原始碼其實也蠻單純好理解的：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Pick</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>我們可以看到 <code>Pick</code> 吃兩個型別參數，一個是 <code>T</code> 它會是物件型別，後面的 <code>K</code> 因為有用的 <a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">Day03</a> 提的泛型限制，所以 <code>K</code> 一點要滿足是物件型別 <code>T</code> 中有的屬性 key。</p><p>接著 <code>[P in K]</code> 很明顯的是 Mapped Types，以上面提的 <code>PersonName</code> 為例，<code>K</code> 就會是 <code>&#x27;firstName&#x27; | &#x27;lastName&#x27;</code>，這時候的 <code>[P in &#x27;firstName&#x27; | &#x27;lastName&#x27;]</code> 讀者們應該可以預想到最後出來的型別其物件型別的屬性 key 會長這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;...&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>最後看到屬性 value 的部分是 <code>T[P]</code>，意思也就是，什麼都不做，原本物件屬性值的型別是什麼就直接拿來用，因此最後 <code>PersonName</code> 的型別會長這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"record\">Record<a href=\"#record\" class=\"hash-link\" aria-label=\"Record的直接連結\" title=\"Record的直接連結\">​</a></h2><p>接著我們來看一下 <code>Record&lt;Keys, Type&gt;</code>。前面我們有提過 Mapped Types 是比較有限制的 Index Signatures，也就是 Mapped Types 是 Index Signatures 的子集合，而 <code>Record</code> 這個 Utility Type 同樣是基於 Mapped Types 寫出來的，先來簡單看一下它的用法。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"在沒有-record-之前\">在沒有 Record 之前<a href=\"#在沒有-record-之前\" class=\"hash-link\" aria-label=\"在沒有 Record 之前的直接連結\" title=\"在沒有 Record 之前的直接連結\">​</a></h3><p>假設現在需要建立一個物件型別，它的 key 希望符合 <code>ConferenceName</code>、value 符合型別 <code>Conference</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;ModernWeb&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;MOPCON&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;JSDOC&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;{Laravel x Vue}&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Conference</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>前面 <a href=\"https://ithelp.ithome.com.tw/articles/10274801\" target=\"_blank\" rel=\"noopener noreferrer\">Day14</a> 曾提過，因為 Index Signatures 的特性，並沒有辦法直接寫：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceIndexSignatures</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> ConferenceName</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>TypeScript 會報錯，並建議我們用 Mapped Type：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/THJILNl.png\" alt=\"Record\" class=\"img_ev3q\"></p><p>於是用 Mapped Types 可以寫成這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceMap</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> ConferenceName</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>接著我們把它改成更泛用的形式試試看，先把 <code>ConferenceName</code> 抽成泛型：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把 ConferenceName 變成泛型</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToConferenceMap</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候你會看到 TypeScript 報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/2dl4gaZ.png\" alt=\"Record\" class=\"img_ev3q\"></p><p>之所以會有這個錯誤的原因是 <code>K</code> 沒有辦法被保證一定能把疊代，如果 K 被帶入物件型別的話，<code>[P in K]</code> 就會壞掉，因此 TypeScript 說 <code>K</code> 應該只能是 <code>string | number | symbol</code>，而這其實也就是 <code>keyof any</code> 的意思，因此可以透過泛型限制來限制使用者可以帶入的 <code>K</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToConferenceMap</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>接著我們來把物件型別的屬性值也抽成泛型：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToConferenceMap</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>有沒有發現剛剛寫的 <code>ToConferenceMap</code> 變的更泛用了！現在我們可以使用剛剛自己寫的這個 Utility Type 來產生 <code>ConferenceMap</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;ModernWeb&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;MOPCON&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;JSDC&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;{Laravel x Vue}&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Conference</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToConferenceMap</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceMap</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ToConferenceMap</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">ConferenceName</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> Conference</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如此就可以得到我們想要的物件型別：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/UoGWVLV.png\" alt=\"Record\" class=\"img_ev3q\"></p><p>更重要的是，其實我們已經寫出了官方提供的 <code>Record</code> 了！</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使用-record-與原始碼\">使用 Record 與原始碼<a href=\"#使用-record-與原始碼\" class=\"hash-link\" aria-label=\"使用 Record 與原始碼的直接連結\" title=\"使用 Record 與原始碼的直接連結\">​</a></h3><p>在 TypeScript 中，<code>Record&lt;Keys, Type&gt;</code> 可以讓開發者方便定義物件型別中屬性 key 和 value 的型別，而你會發現用 Record 建立出來的型別，和用剛剛我們寫的 <code>ToConferenceMap</code> 的效果一樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 兩個建立出來的型別是一樣的</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceMap</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> ToConferenceMap</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">ConferenceName</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> Conference</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceRecord</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Record</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">ConferenceName</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> Conference</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>回過頭來看 <code>Record</code> 的原始碼：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Construct a type with a set of properties K of type T</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Record</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>有沒有發現和我們剛剛寫的 <code>ToConferenceMap</code> 其實是一樣的呢？</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"建立自己的-utility-types\">建立自己的 Utility Types<a href=\"#建立自己的-utility-types\" class=\"hash-link\" aria-label=\"建立自己的 Utility Types的直接連結\" title=\"建立自己的 Utility Types的直接連結\">​</a></h2><p>讀者們應該慢慢可以發現，要寫出 Utility Types 比想像中的簡單，可以先根據實際的情況撰寫出想要的結果後，再把可以抽成參數的部分變成泛型，最後就可以建立出更泛用的 Utility Types。</p><blockquote><p>當然也是有一些很複雜的 Utility Types 可能沒辦法這麼簡單就寫的出來，但重要的是能夠透過正確的斷句，先求能夠看懂和理解。</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/WJ8E5N\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/WJ8E5N</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys\" target=\"_blank\" rel=\"noopener noreferrer\">Utility Types</a> @ TypeScript &gt; Reference</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day18]<!-- --> TS：理解 Omit 的實作 pjchender.dev": {
    "prefix": "hironman-2021 [Day18]<!-- --> TS：理解 Omit 的實作 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day18]<!-- --> TS：理解 Omit 的實作</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/6cUmtQn.png\" alt=\"Omit\" class=\"img_ev3q\"></p><p>是我們今天要聊的內容，老樣的，如果你已經可以輕鬆看懂，歡迎直接左轉去看同事 Ken 精彩的文章 — 「<a href=\"https://ithelp.ithome.com.tw/users/20130721/ironman/4083\" target=\"_blank\" rel=\"noopener noreferrer\">From State Machine to XState</a>」。</p><p>昨天我們說明到在 TypeScript 中內建的 Utility Type <code>Pick</code> 可以幫助開發者從物件型別中挑出想要的屬性，以次建立出新的型別：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Pick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;firstName&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;lastName&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>今天我們繼續延續這個例子的使用，但是要把它的功能反過來，也就是說 <code>Pick</code> 是挑出想要的元素，現在則來寫一個 <code>Omit</code>，讓它是從物件型別中剔除不想要的屬性。</p><p>先從 Mapped Types 的角度思考可以怎麼寫：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Person</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  firstName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  lastName</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  age</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>一開始 Mapped Types 可以寫成這樣，但這樣就是最單純的複製一個物件型別的意思。</p><p>接著從所有的屬性 Key 中剔除 <code>age</code> 的屬性，變成：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">PersonName</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;age&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> Person</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡使用 <a href=\"https://ithelp.ithome.com.tw/articles/10270929\" target=\"_blank\" rel=\"noopener noreferrer\">Day09</a> 是提過的 <code>Exclude</code>，而 <code> Exclude&lt;keyof Person, &#x27;age&#x27;&gt;</code> 在這裡就等同於 <code>&#x27;firstName&#x27; | &#x27;lastName&#x27;</code>。寫到這裡，出來的型別其實就已經符合想要的結果：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Qi6Rx5p.png\" alt=\"Omit\" class=\"img_ev3q\"></p><p>在完成了預期的功能後，接著來看看能不能讓它變成一個更泛用的 Utility Type。首先，把帶入的物件型別 <code>Person</code> 變成一個可以帶入的泛型 <code>T</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把原本直接使用的 `Person` 變成參數 `T`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToPersonName</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;age&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>再來把希望被剔除的參數也變成一個泛型參數 <code>K</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把原本直接使用的 &#x27;age&#x27; 變成參數 `K`</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToPersonName</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>看起來已經相當泛用了，現在已經可以透過這個 Utility Type 從物件型別 <code>T</code> 中剔除掉不想要的屬性 Keys <code>K</code>，到這裡雖然可以結束了，但讓我們回過頭來看一下昨天寫的 <code>Pick&lt;Type, Keys&gt;</code> 的原始碼：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Pick</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">in</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">P</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>你有沒有發現 <code>ToPersonName</code> 的整個輪廓其實和 <code>Pick</code> 非常接近：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/RlXfaMM.png\" alt=\"Pick and Omit\" class=\"img_ev3q\"></p><p>也就是說，這裡的 <code>ToPersonName</code> 其實只要用 <code>Pick</code> 就可以完成了，把原本的 <code>ToPersonName</code> 改用 <code>Pick</code> 來寫：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 把原本的 `ToPersonName` 改用 `Pick` 來寫</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ToPersonName</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Pick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>江江～發現了嗎，你已經寫出和 TypeScript 官方提供的 <code>Omit</code> 差不多的原始碼了。在原本的 <code>Omit</code> 中，為了確保 <code>K</code> 一定是可以被放入 Mapped Types 中使用的，所以有對 <code>K</code> 多加上了 <code>extends keyof any</code> 的泛型限制：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Construct a type with the properties of T except for those in type K</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Omit</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Pick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> Exclude</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token keyword\" style=\"font-style:italic\">keyof</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>從這兩天的內容中，讀者都可以發現，可以先根據實際的情況撰寫出想要的結果後，再把可以抽成參數的部分變成泛型，最後變成一個更泛用的 Utility Types。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><blockquote><p><a href=\"https://tsplay.dev/W4pqaW\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/W4pqaW</a> @ TypeScript Playground</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><blockquote><p><a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html\" target=\"_blank\" rel=\"noopener noreferrer\">Omit</a> @ TypeScript &gt; References &gt; Utility Types</p></blockquote></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day19]<!-- --> TS：什麼！泛型的參數還能有預設值？ pjchender.dev": {
    "prefix": "hironman-2021 [Day19]<!-- --> TS：什麼！泛型的參數還能有預設值？ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day19]<!-- --> TS：什麼！泛型的參數還能有預設值？</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/41e0hhW.png\" alt=\"Generic parameter defaults\" class=\"img_ev3q\"></p><p>今天這個範例是來自第三方套件 <a href=\"https://github.com/piotrwitek/utility-types\" target=\"_blank\" rel=\"noopener noreferrer\">utility-types</a>，在有了前幾天的知識後，讓我們來試著了解這個 Utility Type 是如何實作的吧！如果你已經可以輕鬆看懂，歡迎直接左轉去看我<a href=\"https://ithelp.ithome.com.tw/2021ironman/signup/team/206\" target=\"_blank\" rel=\"noopener noreferrer\">隊友們</a>的精彩文章！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"optional-的用法\">Optional 的用法<a href=\"#optional-的用法\" class=\"hash-link\" aria-label=\"Optional 的用法的直接連結\" title=\"Optional 的用法的直接連結\">​</a></h2><p>要把物件型別中的屬性全部變成 Optional 的話，在 <a href=\"https://ithelp.ithome.com.tw/articles/10275845\" target=\"_blank\" rel=\"noopener noreferrer\">Day16</a> 時曾經提過可以使用官方內建的 <code>Partial</code>，但假設今天只想要讓這個物件型別中的部分屬性變成 Optional 的話，就可以用這裡的這個 <code>Optional&lt;T, K&gt;</code>。</p><blockquote><p>備註：這裡的 Optional 並不是 TypeScript 中內建的 Utility Type，讀者如果要使用的話，記得要先複製這個 Utility Type 的原始碼到程式碼中。</p></blockquote><p>舉例來說，現在有一個型別 <code>Conference</code>：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Conference</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>後來發現 <code>Conference</code> 這個型別中，<code>year</code> 和 <code>isAddToCalendar</code> 都可以省略（Optional），只有名稱和網址是必填的，這時候就可以用 Optional 來達到：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceWithOptional</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Optional</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;year&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isAddToCalendar&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候這個 <code>ConferenceWithOptional</code> 就會變成是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// year 和 isAddToCalendar 變成 optional 的</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceWithOptional</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但這個 Optional 還有一個蠻特別的地方，它也可以只帶入物件型別給它就好，而不告訴它那些屬性 Key 是要變成 optional 的：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 沒有帶入 Optional 的第二個參數</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceWithAllOptional</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Optional</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Conference</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候 <code>ConferenceWithAllOptional</code> 它「預設」就會把該物件型別中的所有 Key 都變成 Optional 的了：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 預設會把所有屬性都變 Optional</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">ConferenceWithAllOptional</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡我們發現兩個重要的點：</p><ol><li>過去的 Utility Type 只要定義了幾個泛型參數，開發者就需要帶入幾個參數進去，不能多也不能少，但這裡卻可以帶一個參數或帶入兩個參數都可以。</li><li>多了「預設值」的概念，如果沒給所有參數，預設會把所有 Key 都變成 optional。</li></ol><p>很特別吧！讓我們來理解看看它是怎麼被實作的吧！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"理解-optional-的實作\">理解 Optional 的實作<a href=\"#理解-optional-的實作\" class=\"hash-link\" aria-label=\"理解 Optional 的實作的直接連結\" title=\"理解 Optional 的實作的直接連結\">​</a></h2><p><code>Optional</code> 這個 Utility Type 的原始碼如下：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Optional</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> object</span><span class=\"token class-name punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">extends</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name keyword\" style=\"color:rgb(255, 203, 107);font-style:italic\">keyof</span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Omit</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&amp;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  Partial</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Pick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">K</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>要了解原始碼，最重要的就是要知道如何做出正確的斷句，讓我們先把注意力放到 <code>=</code> 的前面：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/3hKRQPv.png\" alt=\"Optional Utility Type\" class=\"img_ev3q\"></p><p>沒錯，這一長串都是 <code>=</code> 前面，從 <code>&lt;T extends ...&gt;</code> 開始，可以理解到 <code>Optional</code> 它吃兩個參數 <code>T</code> 和 <code>K</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/liKuVEL.png\" alt=\"Optional Utility Type\" class=\"img_ev3q\"></p><p>在 <a href=\"https://ithelp.ithome.com.tw/articles/10266542\" target=\"_blank\" rel=\"noopener noreferrer\">Day03</a> 中我們提過這是屬於泛型限制的寫法，所以 <code>T extends object</code> 就是 <code>T</code> 需要是 <code>object</code> 的子集合；後面的 <code>K extends keyof T = keyof T</code> 好像出現了我們不曾看過的語法，沒錯！這就是今天的重點「泛型參數預設值（Generic parameter defaults）」。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"泛型參數預設值generic-parameter-defaults\">泛型參數預設值（Generic Parameter Defaults）<a href=\"#泛型參數預設值generic-parameter-defaults\" class=\"hash-link\" aria-label=\"泛型參數預設值（Generic Parameter Defaults）的直接連結\" title=\"泛型參數預設值（Generic Parameter Defaults）的直接連結\">​</a></h3><p>泛型參數預設值的用法就和 JavaScript 函式中帶入參數預設值的方式一樣，都是用等號（<code>=</code>），在知道泛型的參數也能帶入預設值之後，回過頭來看剛剛的 <code>K extends keyof T = keyof T</code>：</p><ol><li><code>K extends keyof T</code> 的意思是： <code>K</code> 需要滿足 <code>keyof T</code>，也就是說，<code>K</code> 需要是 <code>T</code> 這個物件型別中所包含的屬性 key。</li><li><code>K ... = keyof T</code> 的意思就是，如果沒給 <code>K</code> 的話，預設就讓 <code>K</code> 的型別等同於 <code>keyof T</code>，也就是預設的 <code>K</code> 會是所有物件型別中的所有 key。</li></ol><blockquote><p>備註：泛型參數預設值並沒有一定要搭配泛型限制（extends）使用。</p></blockquote><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"帶入實際的型別幫助理解\">帶入實際的型別幫助理解<a href=\"#帶入實際的型別幫助理解\" class=\"hash-link\" aria-label=\"帶入實際的型別幫助理解的直接連結\" title=\"帶入實際的型別幫助理解的直接連結\">​</a></h3><p>接著把重點放到 <code>=</code> 的後面：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/6wrQzA6.png\" alt=\"Optional Utility Type\" class=\"img_ev3q\"></p><p>雖然前幾天曾提過 <code>Omit</code>、<code>Partial</code> 和 <code>Pick</code> 的用法，但可能還是會忘，這時候把握前面提過的原則：「<strong>不確定時就帶入實際的型別試試看</strong>」：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">A</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Omit</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;year&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isAddToCalendar&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">B</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Pick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;year&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isAddToCalendar&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">C</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> Partial</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Pick</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">Conference</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;year&#x27;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;isAddToCalendar&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>你會發現 <code>A</code> 其實就是把要變成 Optional 的屬性「忽略」掉，只留下不改變的部分：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/wabFp7r.png\" alt=\"Optional Utility Type\" class=\"img_ev3q\"></p><p>而 <code>B</code> 就是把要變成 Optional 的屬性「挑出」來：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/ny8h1KS.png\" alt=\"Optional Utility Type\" class=\"img_ev3q\"></p><p>最後的 <code>C</code> 只是把 <code>B</code> 當成參數帶入 <code>Partial</code> 中，讓這些物件屬性全都變 optional 的。所以最後的 <code>Result</code> 就會是「沒被挑到的什麼都不做（<code>A</code>）」加上「被挑到的都變成 Optional（<code>C</code>）」：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">A</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">C</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">undefined</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">undefined</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Result</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">A</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">C</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p><code>Result</code> 就會是：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Result</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  website</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  year</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">undefined</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  isAddToCalendar</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">boolean</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">|</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">undefined</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>透過帶入實際型別的方式，回過頭來看 <code>Optional</code> 這個 Utility Type 的回傳值 <code>Omit&lt;T, K&gt; &amp; Partial&lt;Pick&lt;T, K&gt;&gt;</code> 就更能夠理解它的意思。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"為什麼這裡要使用泛型參數預設值\">為什麼這裡要使用泛型參數預設值？<a href=\"#為什麼這裡要使用泛型參數預設值\" class=\"hash-link\" aria-label=\"為什麼這裡要使用泛型參數預設值？的直接連結\" title=\"為什麼這裡要使用泛型參數預設值？的直接連結\">​</a></h3><p>最後，你可能會好奇，為什麼這裡需要幫型別加上預設值呢？「<strong>當你不清楚為什麼要多這個的時候，最好的方式就是把它拿掉試試看會發生什麼事</strong>」，因此如果我們把 <code>Optional</code> 原始碼中的泛型參數預設值拿掉（即，刪掉<code>= keyof T</code> 的部分），改成：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/xRuK8aS.png\" alt=\"Optional Utility Type\" class=\"img_ev3q\"></p><p>結果會發現，原本我們只帶入一個參數用法的地方跳出錯誤了，因為和 JavaScript 的函式一樣，在沒給參數預設值的情況下，每個參數都需要帶好帶滿才行：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/jlX5lEz.png\" alt=\"Optional Utility Type\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><p><a href=\"https://tsplay.dev/Nlp75N\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/Nlp75N</a> @ TypeScript Playground</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-3.html#generic-parameter-defaults\" target=\"_blank\" rel=\"noopener noreferrer\">Generic parameter defaults</a> @ TypeScript &gt; What&#x27;s New</li><li><a href=\"https://github.com/piotrwitek/utility-types/blob/master/src/mapped-types.ts\" target=\"_blank\" rel=\"noopener noreferrer\">Optional</a> @ <a href=\"https://github.com/piotrwitek/utility-types\" target=\"_blank\" rel=\"noopener noreferrer\">utility-types</a></li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day20]<!-- --> TS：用型別建立型別：當個 TypeScript 的型別魔術師 pjchender.dev": {
    "prefix": "hironman-2021 [Day20]<!-- --> TS：用型別建立型別：當個 TypeScript 的型別魔術師 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day20]<!-- --> TS：用型別建立型別：當個 TypeScript 的型別魔術師</h1><p>寫到第 20 天，關於如何建立 Utility Type 所需的知識也差不多吿一個段落，今天就來做個簡單的小結。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"建立-utility-types-時\">建立 Utility Types 時<a href=\"#建立-utility-types-時\" class=\"hash-link\" aria-label=\"建立 Utility Types 時的直接連結\" title=\"建立 Utility Types 時的直接連結\">​</a></h2><p>在前幾天的範例中，讀者會發現到要寫 Utility Types 比較簡單的方式會是針對一個實際的型別去達到你想完成的功能，接著再把可以替換成變數的內容抽換出來。因此如果要建立自己的 Utility Types 可以有兩個簡單的步驟：</p><ul><li>先透過實際的範例把功能寫成來</li><li>把可以變成參數的地方抽出來</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"理解-utility-types-時\">理解 Utility Types 時<a href=\"#理解-utility-types-時\" class=\"hash-link\" aria-label=\"理解 Utility Types 時的直接連結\" title=\"理解 Utility Types 時的直接連結\">​</a></h2><p>如果是要試著理解別人寫的 Utility Types 的話，同樣有幾個重點：</p><ul><li>建立適當的斷句，幫助理解</li><li>不確定時就帶入實際的型別試試看</li><li>不知道為什麼要這樣時，就拿掉試試看會發生什麼事</li></ul><p>一開始看別人寫的 Utility Types 時很容易陷在茫茫的 <code>&lt;&gt;</code>、<code>=</code>、<code>?</code>、<code>:</code> 這些符號當中，適時的建立斷句對於幫助理解就變得很重要。在建立好了斷句後，可以試著用一些實際的型別帶進去參數當中，看看會得到什麼結果，或者在改變 Conditional Type <code>?</code> 或 <code>:</code> 後回傳的結果，改成比較簡單的一些回傳值，幫助自己判斷。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"之所以會想寫這個主題\">之所以會想寫這個主題<a href=\"#之所以會想寫這個主題\" class=\"hash-link\" aria-label=\"之所以會想寫這個主題的直接連結\" title=\"之所以會想寫這個主題的直接連結\">​</a></h2><p>過去我在打開型別定義的原始碼時，常常覺得像是在看天書一樣，完全不知道要這麼下手，但實際上在有了這些知識之後，這些東西並沒有想到這麼難（不是不難，而是至少能夠逐漸理解），因此希望透過這 20 天的主題，能夠讓讀者不再害怕原始碼：</p><ul><li>不要求一開始就能寫出複雜的 Utility Types</li><li>碰到需求的時候可以自己試著<strong>練習寫寫看 Type Definition</strong></li><li>碰到問題的時候能夠<strong>試著打開原始碼</strong>了解可能的問題所在</li></ul><p>最後，對這個主題能夠開始有所涉略，很重要的是 OneDegree 同事們給我的啟發，在建立型別的過程中很容易打結，這時候有能一起討論的同事，會是很重要的一盞明燈，因此特別感謝他們。</p><p>但鐵人賽還有 10 天，明天要寫什麼呢？明天再來想想看吧！</p></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day21]<!-- --> TS：Conditional Chain pjchender.dev": {
    "prefix": "hironman-2021 [Day21]<!-- --> TS：Conditional Chain pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day21]<!-- --> TS：Conditional Chain</h1><p>雖然昨天說 TypeScript 已經差不多，但其實還有一個（或一些？）還沒寫到。我們來看一段程式碼：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/INhSy8N.png\" alt=\"conditional chain\" class=\"img_ev3q\"></p><p>上面這個是在 React 中的一段型別定義，今天沒有要細部看裡面的每個部分，而是著重在 <a href=\"https://ithelp.ithome.com.tw/articles/10270213\" target=\"_blank\" rel=\"noopener noreferrer\">Day08</a> 時提到的 Conditional Type 的部分，通常當有多個條件判斷 <code>if...else if ... else if ... else </code> 的時候，為了避免難以閱讀，我們不會用三元運算子這樣的寫法，可能會改用 <code>switch</code> 等其他寫法，然而在 TypeScript 中，要表達條件式沒有其他的方法，還是只能透過三元運算子，所以你有時會看到上面這種排列，這種串連 <code>?</code> <code>:</code> 的寫法稱作 Conditional Chains。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conditional-chains\">Conditional Chains<a href=\"#conditional-chains\" class=\"hash-link\" aria-label=\"Conditional Chains的直接連結\" title=\"Conditional Chains的直接連結\">​</a></h2><p>實際上 Conditional Chains 並不是 TypeScript 特有的東西，只是一般有其他選擇的情況下（例如，JavaScript）我們不會這樣寫。雖然第一眼看到時頭很痛，但其實如果 Conditional Chain 有適當排列的話，並沒有想像的這麼難懂。</p><p>在 MDN 中提供了 Conditional Chains 很好的範例：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator#conditional_chains</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">example</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">…</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> condition1 </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> value1</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">         </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> condition2 </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> value2</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">         </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> condition3 </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> value3</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">         </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> value4</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Equivalent to:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">example</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">…</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">condition1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">else</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">condition2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">else</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">condition3</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value3</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">else</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value4</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>對應著剛剛看到的那段原始碼，就可以發現：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/ZOdFZkN.png\" alt=\"Conditional Chains\" class=\"img_ev3q\"></p><p>它其實是由三個條件判斷是所組成。也就是：</p><div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">if C extends { propTypes, defaultProps } ... Defaultize ...</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">else if C extends { propTypes } ... MergePropTypes ...</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">else if C extends { defaultProps } ... Defaultize</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">else P</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡在做的事情，其實就是判斷這個泛型 <code>C</code> 是同時帶有 <code>propTypes</code> 和 <code>defaultProps</code>，或只有帶有其中之一的情況，分別要回傳不同的型別。這裡你也可以看到筆者曾在 <a href=\"https://ithelp.ithome.com.tw/articles/10272213\" target=\"_blank\" rel=\"noopener noreferrer\">Day10</a> 提到的，在使用 Conditional Types 時，還可以使用 <code>infer</code> 來取出對應的型別使用。</p><p>雖然我們單從這裡可能還沒有辦法完全理解這段 Utility Types 做了什麼，但至少我們大概可以了解在不同的條件下，它會在呼叫不同的 Utility Types 來回傳不同的型別。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"nested-conditional-chains\">Nested Conditional Chains<a href=\"#nested-conditional-chains\" class=\"hash-link\" aria-label=\"Nested Conditional Chains的直接連結\" title=\"Nested Conditional Chains的直接連結\">​</a></h2><p>如果是像上面那種單純的 Conditional Chains 還算好理解，但有些時候還會有 nested 的 conditional chains，這時候縮排就又顯得更重要了，例如：</p><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">example</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token parameter\">…</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">condition1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">condition1_1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">else</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value1_1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">else</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">condition2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">else</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">return</span><span class=\"token plain\"> value4</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>寫成三元運算子就會像這樣：</p><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">example</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">return</span><span class=\"token plain\"> condition1</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> condition1_1</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;value1&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;value1_1&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> condition2</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;value2&#x27;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;value4&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>我知道有點嚇人，第一眼看到有點嚇人，但在 TypeScript 中因為沒有 <code>if</code> 或 <code>switch</code> 這種關鍵字，所以最好的方式就是透過良好的縮排來幫助閱讀。</p><p>但真的還是很不好閱讀就是...</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/6lf4vW0.png\" alt=\"Conditional Chains\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator#conditional_chains\" target=\"_blank\" rel=\"noopener noreferrer\">Conditional Chains</a> @ MDN</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day22]<!-- --> React x TS 中的 Event Handler pjchender.dev": {
    "prefix": "hironman-2021 [Day22]<!-- --> React x TS 中的 Event Handler pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day22]<!-- --> React x TS 中的 Event Handler</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/COoeVt1.png\" alt=\"React EventHandler in TypeScript\" class=\"img_ev3q\"></p><p>今天來分享一個小東西，記得以前一開始用 React 搭配 TypeScript 開發專案的時候，在寫 Event Handler 的時候，常常會碰到不知道 Event Handler 中 <code>e</code> 的型別是什麼的情況，就像上圖中 ??? 的位置，如果沒有告知其型別，同時 <code>tsconfig</code> 設定檔中的 <code>strict</code> 又設定成 <code>true</code> 時，因為在沒有定義型別的情況下，該變數預設就會推斷成 <code>any</code>（implicitly any），於是 TS 就會提示錯誤：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/A0Vd1TZ.png\" alt=\"React EventHandler in TypeScript\" class=\"img_ev3q\"></p><p>這時候必須明確告知這個 <code>e</code> 的型別，以 click 事件來說，它的型別就是 <code>React.MouseEvent&lt;HTMLButtonElement&gt;</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/Myham9S.png\" alt=\"React EventHandler in TypeScript\" class=\"img_ev3q\"></p><p>這時候 TypeScript 就不會報錯。</p><p>讀者可能接著問，那如果是表單中的 <code>onChange</code> 事件呢？它的 Event Handler 中的 <code>e</code> 型別會是什麼呢？</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/BsrqzRb.png\" alt=\"React EventHandler in TypeScript\" class=\"img_ev3q\"></p><p>答案是 <code>React.ChangeEvent&lt;HTMLInputElement&gt;</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/XxI7w5d.png\" alt=\"React EventHandler in TypeScript\" class=\"img_ev3q\"></p><p>讀者可能又會問，DOM 上面能綁定的事件這麼多，還有鍵盤相關的事件（<code>keydown</code>、<code>keypress</code>、<code>keyup</code>）、scroll 相關的事件、touch 相關的事件，該怎麼辦呢？有地方可以查表嗎？</p><p>這裡讓筆者全部列給你：</p><ul><li><code>onKeyDown</code> 的事件是 <code>React.KeyboardEvent&lt;HTMLInputElement&gt;</code></li><li><code>onScroll</code> 的事件是 <code>React.UIEventHandler&lt;HTMLDivElement&gt;</code></li><li><code>onTouchEnd</code> 的事件是 <code>React.TouchEvent&lt;HTMLDivElement&gt;</code></li><li>...</li></ul><p>然後背下來就好，明天抽考。</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>如果我請你背下來，我就真的在害你 XD</p><p>.</p><p>.</p><p>.</p><p>.</p><p>.</p><p>實際上，我以前一開始接觸 React x TypeScript 時也不知道事件的型別這麼多該怎麼辦，就算真的有表可以查，還是相當麻煩的一件事，後來傻傻的我發現到，只要把滑鼠移到該事件上面，你就可以知道這個 <code>e</code> 的型別要填什麼了。</p><p>舉例來說，只要在 DOM 上先寫出你想監聽的事件，例如這裡來看 div 上的 onTouchEnd 事件，然後把滑鼠移上去（注意是移到 onTouchEnd 的名稱上，而不是 <code>{}</code> 出現紅色毛毛蟲的地方），就會看到型別的名稱寫 <code>React.TouchEventHandler&lt;HTMLDivElement&gt;</code>，而 <code>e</code> 的型別只需要把 <code>TouchEventHandler</code> 最後的 <code>Handler</code> 移掉就是了，所以就會是 <code>React.TouchEvent&lt;HTMLDivElement&gt;</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/vUkoewJ.png\" alt=\"React EventHandler in TypeScript\" class=\"img_ev3q\"></p><blockquote><p>備註：滑鼠要移到 <code>onXXX</code> 的事件名稱上，而不是 <code>{}</code> 中 TypeScript 冒出紅色毛毛蟲的地方。</p></blockquote><p>同樣的道理，如果是在 <code>input</code> 元素上的 <code>onKeyDown</code> 事件，先在 DOM 上寫成 <code>onKeyDown</code>，然後滑鼠移上去：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/ITvlkVt.png\" alt=\"React EventHandler in TypeScript\" class=\"img_ev3q\"></p><p>上面寫的是 <code>React.KeyboardEventHandler&lt;HTMLInputElement&gt;</code> ，因此移掉最後的 <code>Handler</code> 後，讀者就會知道，onKeyDown Event Handler 中的參數 <code>e</code> 其型別會是 <code>React.KeyboardEvent&lt;HTMLInputElement&gt;</code>。</p><p>以後如果同事問你，你怎麼知道這些事件參數的型別是什麼，要回答「我背了兩個禮拜才全部背下來」，或是把這個方法告訴他/她，就看你們的交情了...。</p></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day23]<!-- --> TS：談談讓人又愛又恨的 enum pjchender.dev": {
    "prefix": "hironman-2021 [Day23]<!-- --> TS：談談讓人又愛又恨的 enum pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day23]<!-- --> TS：談談讓人又愛又恨的 enum</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/1ufQwmI.png\" alt=\"enum\" class=\"img_ev3q\"></p><p>在 TypeScript 中，<code>enum</code> 算是還蠻常會使用到的型別，但有時如果用的不好或觀念不夠清楚的話，就會有點痛苦而不知所以然。</p><p>以下面這個 <code>GENDER</code> 來說：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">enum</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;male&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">FEMALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;female&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>我們知道使用 <code>GENDER.MALE</code> 可以取得 <code>&quot;male&quot;</code>，所以有時侯會直覺的想說，那 <code>&quot;male&quot;</code> 應該算是 <code>GENDER</code> 的子集合吧！？而這也是筆者在使用 enum 時很容易忽略或犯的錯誤。</p><p>讓我們來做一點小測驗，讀者可以想想看，下面這些條件會是 true 或 false：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;male&#x27;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T5</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T6</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這裡的重點是要區分清楚 <code>&quot;male&quot;</code>、<code>&quot;female&quot;</code>、<code>GENDER</code>(enum) 和 <code>string</code> 它們彼此間的關係，如果我們用一張圖來表示，會類似像這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/QbqDumT.png\" alt=\"Screen Shot 2021-10-08 at 11.39.11 PM\" class=\"img_ev3q\"></p><p>特別留意上圖中的 <code>GENDER.MALE</code> 和 <code>&quot;male&quot;</code> 的部分。</p><p>發現了嗎？雖然說我們知道，透過 <code>GENDER.MALE</code> 可以取得 <code>&quot;male&quot;</code>，但實際上 <code>&quot;male&quot;</code> 並不是 <code>GENDER</code> 這個 enum 的子集合！更具體來說，從值的角度思考時 <code>GENDER.MALE</code> 和 <code>&quot;male&quot;</code> 是一樣的，但從型別的角度思考是 <code>GENDER.MALE</code> 和 <code>&quot;male&quot;</code> 互不是彼此的子集合，這個概念真的蠻重要的。上面提供的程式碼，便是用 Conditional Type 的方式來驗證這樣的關係：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">enum</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;male&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">FEMALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;female&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T3</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T4</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;male&#x27;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T5</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;male&#x27;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T6</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T7</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">string</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T8</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">STRING_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>另外，雖然 <code>GENDER.MALE</code> 和 <code>&quot;male&quot;</code> 彼此之間沒有從屬關係外，但它們都還是屬於型別 string 的子集合。</p><blockquote><p>上面這個部分要謝謝同事 Peter 協助筆者釐清與理解。</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"不能直接類推的-numeric-enums\">不能直接類推的 Numeric enums<a href=\"#不能直接類推的-numeric-enums\" class=\"hash-link\" aria-label=\"不能直接類推的 Numeric enums的直接連結\" title=\"不能直接類推的 Numeric enums的直接連結\">​</a></h2><p>上面說明的是 string enums 的情況，也就是 enum 的 value 是 string 時，但另外常用的 enum 還有 <a href=\"https://www.typescriptlang.org/docs/handbook/enums.html#numeric-enums\" target=\"_blank\" rel=\"noopener noreferrer\">numeric enums</a> 這時候在集合的表現上會有所不同，有興趣的讀者可以再自行嘗試看：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">enum</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">FEMALE</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T11</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T12</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T13</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T14</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">10</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T15</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">10</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T16</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T17</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name builtin\" style=\"color:rgb(130, 170, 255)\">number</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// true</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T18</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">type</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">T19</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">MALE</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name constant\" style=\"color:rgb(130, 170, 255)\">NUMERIC_GENDER</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">FEMALE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">true</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:rgb(255, 88, 116)\">false</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// false</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>關於 numeric enums 和 string enums 的情況不太一樣，這點未來如果有遇到，可能要在多加留意。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"範例程式碼\">範例程式碼<a href=\"#範例程式碼\" class=\"hash-link\" aria-label=\"範例程式碼的直接連結\" title=\"範例程式碼的直接連結\">​</a></h2><p><a href=\"https://tsplay.dev/w11MGw\" target=\"_blank\" rel=\"noopener noreferrer\">https://tsplay.dev/w11MGw</a> @ TypeScript Playground</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li>同事</li><li><a href=\"https://www.typescriptlang.org/docs/handbook/enums.html\" target=\"_blank\" rel=\"noopener noreferrer\">enums</a> @ TypeScript</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day24]<!-- --> 談談寫測試的好處：從為你自己寫測試開始 pjchender.dev": {
    "prefix": "hironman-2021 [Day24]<!-- --> 談談寫測試的好處：從為你自己寫測試開始 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day24]<!-- --> 談談寫測試的好處：從為你自己寫測試開始</h1><p>前幾週主要都在談 TypeScript，對我來說 TypeScript 最重要的是能增加程式的可維護性，就和 ESLint 一樣，用或不用程式都能運行，一開始用可能有點痛，但用一段時間後會發現對於程式品質和可維護性有相當程度的提升，而可維護性的提升就是在幫助自己也幫助他人。</p><p>除了 TypeScript 之外，另一個我認為能夠提升程式維護性的就是寫測試（Testing），但筆者並非那種什麼都要加上測試的開發者，以前端來說我也不確定什麼都加上測試會不會是最適當的，因為前端有許多 UI 的操作，不同的 Component 之間可能也會有互動上的關聯，在不同開發階段選擇不同的測試方式，或許才會是最有彈性和適切的。</p><p>無論如何，我都相當鼓勵大家去學習如何撰寫測試，特別是從為你自己寫測試開始。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"為你自己寫測試\">為你自己寫測試<a href=\"#為你自己寫測試\" class=\"hash-link\" aria-label=\"為你自己寫測試的直接連結\" title=\"為你自己寫測試的直接連結\">​</a></h2><p>「為你自己寫測試」這句偷用了龍哥（高見龍）的書名—「為你自己學 git」、「為你自己學 Ruby on Rails」，但我認為寫測試的第一步的確是要為了自己而寫，因為「<strong>程式是你寫的，而你必須為你自己寫的程式負責</strong>」。</p><p>我知道許多讀者一定因為開發時程有限的緣故，覺得需求都做不完了，怎麼會有時間寫，這個我們後面再來聊，今天先著重在寫測試的好處。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"避免自己沒想到的錯誤\">避免自己沒想到的錯誤<a href=\"#避免自己沒想到的錯誤\" class=\"hash-link\" aria-label=\"避免自己沒想到的錯誤的直接連結\" title=\"避免自己沒想到的錯誤的直接連結\">​</a></h3><p>不論是自己寫程式時，或是 code review 看別人的程式碼時，相信許多開發者一定有過這樣的經驗—「用看的沒問題，跑下去就壞了」，程式在執行時並非總是如我們預期，有時你信心滿滿，想說只是改這個應該不用再測一次，結果部署上去後，卻馬上遇到當初沒想到的問題。</p><p>舉例來說，你可能寫了一個 function，單純就是把兩個價格相加，但你沒想到 API 回傳的竟然是字串，帶入你寫好的那個 function 後就壞了。</p><p>或者，如果你有刷題的經驗，一定也有過那種，以為自己寫的解法沒問題，結果按下 submit 後發現有自己沒考慮到的 case。</p><p>透過測試你有機會提早發現到問題，不必等到 code review 時他人提醒，或正式上線後才發現問題。或者，你雖然有寫測試，但一開始沒有寫到這樣的測試案例，你也可以再問題發生後補到 test case 中，防止後續這個問題再次發生。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"未來改動程式碼時更有信心\">未來改動程式碼時更有信心<a href=\"#未來改動程式碼時更有信心\" class=\"hash-link\" aria-label=\"未來改動程式碼時更有信心的直接連結\" title=\"未來改動程式碼時更有信心的直接連結\">​</a></h3><p>不知道讀者有沒有過這種感覺，當程式越來越複雜時，你開始有點不安，你不太確定你之前寫好的業務邏輯是否還能正常運作。或者，當你試著改變以前寫好的程式，也許是需要添加功能，或者你發現有更好的寫法，但在要改的時候，你感到有點不安，因為很多地方都曾經有呼叫過這個函式，你不確定現在這樣改，原本的功能是否會壞掉。</p><p>在「大規模重構」這本書中，作者也提到重構的第一步是要先確定即將修改的部分已經有撰寫測試，<strong>否則不要貿然重構</strong>，因爲沒有完整測試的話，有很高的可能會在渾然不知的情況下，把原本好的功能給改壞了，但卻依然很開心地繼續重構的...。</p><p>一旦有了測試，不論是在需求變更、添加功能、或重構時都能夠更有信心。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"為他人測試\">為他人測試<a href=\"#為他人測試\" class=\"hash-link\" aria-label=\"為他人測試的直接連結\" title=\"為他人測試的直接連結\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"程式即文件輔助文件的不足\">程式即文件，輔助文件的不足<a href=\"#程式即文件輔助文件的不足\" class=\"hash-link\" aria-label=\"程式即文件，輔助文件的不足的直接連結\" title=\"程式即文件，輔助文件的不足的直接連結\">​</a></h3><p>開發者在接手程式或使用他人寫好的工具時都需要文件。寫文件的問題不在於需要花額外的時間來寫，而在於後續對這份文件的更新和維護。很常見的情況是，一開始開發好功能後因爲還很有熱情，所以文件會寫的很齊，但後續有可能再修改功能後忘了回頭去更新文件，或是後續接手的人沒有意識到要回頭改文件，導致久而久之，這份文件就過期了，然後過期越久，這份文件的價值就越低。</p><p>上述的情況很常發生在開發的是自家產品時，因為常常是自己人能夠看懂就好。</p><p>相較於每次提醒開發者有變更時就要記得要去更新文件，筆者更喜歡的是「程式即文件」，或是用程式輔助文件這件事，這也是筆者相當喜歡 TS 的原因之一，因為在定義型別時，等於就是在告訴未來的使用者，這個功能可以怎麼用。</p><p>同樣的，測試也可以扮演輔助文件的這個功能，在寫測試時，你會需要實際執行該方法，間接的也是在示範這個功能可以怎麼被使用，預期會得到什麼結果。</p><p>有些時候官方文件的說明如果寫的不夠詳細或範例不夠多時，筆者就會去看這個套件寫的測試檔，因為測試檔中就會列出這個函式能夠怎麼樣被使用，預測會得到什麼結果的許多範例。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"小結\">小結<a href=\"#小結\" class=\"hash-link\" aria-label=\"小結的直接連結\" title=\"小結的直接連結\">​</a></h2><p>「為你自己寫測試」最重要的是讓自己對於自己寫的程式更有信心，未來在修改時，也可以比較不擔心自己會不會把原本好的功能給改壞了。</p><p>「為他人寫測試」則是讓接手程式碼或使用該工具的人能夠更快了解這個程式要怎麼使用。</p><p>然而，不論是「為你自己寫測試」或「為他人寫測試」，你會發現最後受益的都還是自己，因為「三個月後的自己就是別人」，三個月後回過頭來看當初自己寫的程式時，常常會忘了這段當初為什麼要這樣寫，甚至忘了這段是自己寫的都有可能，這時候如果有測試的範例或其他方式來讓自己更快理解這段程式碼，不也就幫助到了自己？</p><p>什麼時候要寫測試呢？問問自己，這裡加上測試後能夠帶給自己好處嗎？如果答案是肯定的，要不要就為了自己來加上測試呢？</p></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day25]<!-- --> 測試一定要寫好寫滿？時間有限怎麼辦？ pjchender.dev": {
    "prefix": "hironman-2021 [Day25]<!-- --> 測試一定要寫好寫滿？時間有限怎麼辦？ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day25]<!-- --> 測試一定要寫好寫滿？時間有限怎麼辦？</h1><p>既然要寫測試，就先來了解前端常見的幾種測試類型，從最大家最常聽到的單元測試（Unit Testing）、到會整合不同 API 或元件互動的整合測試（Integration Testing），最後則是模擬使用者操作的 End to End Testing。</p><p>不同測試類型會搭配不同的測試工具，以單位測試來說，目前在前端最常用的是由 Facebook 推出的 <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Jest</a>，它是 Node-based 的執行器，主要用來進行元件或函式的單元測試（unit test）；若有需要針對頁面上的元素或 React 元件進行整合測試，筆者自己習慣用的是 <a href=\"https://testing-library.com/\" target=\"_blank\" rel=\"noopener noreferrer\">test-library</a> 上的 react-testing-library。最後，若是需要的進行更貼近瀏覽器環境的 end-to-end 測試的話，則可以使用 <a href=\"https://www.cypress.io/\" target=\"_blank\" rel=\"noopener noreferrer\">cypress</a> 或 <a href=\"https://github.com/puppeteer/puppeteer\" target=\"_blank\" rel=\"noopener noreferrer\">puppeteer</a>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"測試的不同類型\">測試的不同類型<a href=\"#測試的不同類型\" class=\"hash-link\" aria-label=\"測試的不同類型的直接連結\" title=\"測試的不同類型的直接連結\">​</a></h2><p>根據不同的測試目的，會分成不同的測試類型，簡單來說可以分成三類，但筆者認為這三類的區隔並非一定壁壘分明的，是其中一種就不會是另一種。不論是哪一類型的測試，<strong>核心概念都是透過「預期結果（expect）」和「真實結果」去做比對，看看得到的真實結果是不是如同開發者所預期的</strong>，因此，<strong>如果你連預期會是如何都無法想像的話，那是完全沒辦法進行測試的</strong>。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"單元測試unit-test\">單元測試（Unit Test）<a href=\"#單元測試unit-test\" class=\"hash-link\" aria-label=\"單元測試（Unit Test）的直接連結\" title=\"單元測試（Unit Test）的直接連結\">​</a></h3><p>測試的對象會是程式碼中最小的單元，通常會是自己撰寫的函式（function）、方法（method）、類別（classes）等等，也就是你預期這個 input 進去後，應該會得到什麼樣的 output。舉例來說，根據 LeetCode 的題目寫出 function 後，LeetCode 就會對你寫的 function 做許多的驗證，確保你寫的 function 在各種情況下都能滿足題目的需求，而針對個別 function 進行測試的情況就是所謂的單元測試（Unit Test）。</p><p>這部分前端來說最常使到的工具是由 Facebook 推出的 <a href=\"https://github.com/facebook/jest\" target=\"_blank\" rel=\"noopener noreferrer\">Jest</a>；後端則很常使用 <a href=\"https://mochajs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">mochajs</a> 搭配 <a href=\"https://github.com/chaijs/chai\" target=\"_blank\" rel=\"noopener noreferrer\">chai</a>。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"整合測試integration-test\">整合測試（Integration Test）<a href=\"#整合測試integration-test\" class=\"hash-link\" aria-label=\"整合測試（Integration Test）的直接連結\" title=\"整合測試（Integration Test）的直接連結\">​</a></h3><p>整合測試顧名思義就是需要「整合」，這表示測試的過程不是單一函式就能滿足，過程中可能會需要呼叫 API 獲取資料、使用其他的 library、或者和 DOM 進行整合，預期 DOM 上應該會呈現特定的 element。以 React Component 的測試來說，就比較接近這類型的測試，因為在 React Component 中，可能會去 fetch API 取得資料，取得資料後需要將資料呈現在 DOM 上。這時候如果是撰寫整合測試的話，就需要寫 mock data 來假設 API 回傳的資料內容，並在取得假資料後，檢測 DOM 有沒有如同預期的呈現出 element；這個過程中，也可以以程式的方式模擬使用者點擊、輸入內容的動作。</p><p>這部分以 React 來說最常提到的應該是 <a href=\"https://testing-library.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Testing Library</a> 搭配 <a href=\"https://testing-library.com/docs/react-testing-library/intro/\" target=\"_blank\" rel=\"noopener noreferrer\">React Testing Library</a>；或 <a href=\"https://enzymejs.github.io/enzyme/\" target=\"_blank\" rel=\"noopener noreferrer\">enzyme</a>。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"end-to-end-e2e-tests\">End-to-end (E2E) tests<a href=\"#end-to-end-e2e-tests\" class=\"hash-link\" aria-label=\"End-to-end (E2E) tests的直接連結\" title=\"End-to-end (E2E) tests的直接連結\">​</a></h3><p>相較於 Unit Test 是測試單一邏輯、Integration Test 是測試整合多個邏輯下的情況、End-to-end (E2E) 則算是最貼近去模擬使用者操做實際產品的過程，透過 E2E Test，你可以撰寫使用者操作的流程，並透過瀏覽器畫面實際看到頁面被操作的過程，你可以想像成有一個使用者真的打開了瀏覽器，從瀏覽器輸入網址，接著進入網頁後進行後續對應的流程。</p><p>這部分前端最常聽到的是 <a href=\"https://www.cypress.io/\" target=\"_blank\" rel=\"noopener noreferrer\">cypress</a> 或是 Google 推出的 <a href=\"https://github.com/puppeteer/puppeteer\" target=\"_blank\" rel=\"noopener noreferrer\">Puppeteer</a>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"不同測試類型的考量\">不同測試類型的考量<a href=\"#不同測試類型的考量\" class=\"hash-link\" aria-label=\"不同測試類型的考量的直接連結\" title=\"不同測試類型的考量的直接連結\">​</a></h2><p>不同類型的測試自然對應到不同的使用時機和情境，也不是說總是把測試補到最齊最滿一定是最好的做法，簡單來說，資源有限而測試案例常常是無窮的，為了在有限的資源中（開發能力、開發時程）能確保程式碼的品質，取捨要做哪些測試往往是更實際的。</p><p>在上述不同的測試類型中，Unit Test 可以算是第一道防線，也是通過測試後，比較不會因為其他功能更動而會壞掉的。你可以想像有一個用來驗證表單欄位是否為空的 function，這個 function 的驗證邏輯一旦寫好後，並不會欄位名稱不同、或表單的 UI 改動後，驗證的邏輯就有不同。</p><p>但以同樣確認表單欄位必填的功能來說，如果你做的是 integration test 或 E2E test，就有可能因為畫面改變、後端 API 回傳的資料改變，而導致測試結果失敗，因為在 integration test 或 E2E test 中，除了會想要需要驗證使用者該欄位是否漏填外，可能還會同時檢查漏填時，畫面應該要跳出的提示訊息。這時候，一旦 UI 修改後，最後提示的文字內容有異動（例如，原本顯示 <code>Please enter your name</code>，UI 修改後希望顯示 <code>Require to enter your name</code>），或者是 API 回傳的資料有變更時，都可能導致 integration test 和 E2E test 有錯誤。</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/WlIvJbC.png\" alt=\"Unit Test\" class=\"img_ev3q\"></p><p>另外，Unit Test 作為第一道防線，也表示這通常是最容易找到問題「核心」的地方。舉例來說，如果想要驗證的是登入功能，使用的是 E2E Test，這時當 E2E Test 失敗，但若沒有搭配 Unit Test 的話，你就會像一般的使用者一樣只知道無法成功登入，但卻不知道為什麼不能登入；但若有搭配 Unit Test 的話，則會比較容易發現無法成功登入的原因。</p><p>不同的測試除了容易發現的問題不同之外，執行的時間（execution time）也不同，E2E Test 通常在測試上會花上的時間也做多，投入的開發成本（Development Cost）也最高，因為只要設計或 UI 一有變動，E2E Test 必然會需要修改。</p><p>然而，雖然 E2E Test 的開發成本、投入時間相對來說都比 Unit Test 來得高，但這並不表示 E2E Test 就不重要或不值得都入，因為很多時候，使用者在操作時之所以會碰到問題，是因為各個模組之間的交互作用導致，也就是個別模組獨立運作時是沒問題的，但一但整合再一起就有開發者意想不到的情況；又或者，是使用者實際的操作下可能產生的問題，例如，使用者因為忘了某些資訊而先按了上一頁後，接著在回到下一頁（原本的頁面）時，可能會因為快取等狀況而發生一些在做 Unit Test 時意想不到的情況。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"testing-pyramid\">Testing Pyramid<a href=\"#testing-pyramid\" class=\"hash-link\" aria-label=\"Testing Pyramid的直接連結\" title=\"Testing Pyramid的直接連結\">​</a></h3><p>上面的這些概念可以整理成一個經典的「測試金三角（Testing Pyramid）」，上面提到三種不同的測試類型它們分別位於該三角形中的不同位置，在三角形中越上方所需耗費的成本越高、執行的時間通常會更長，且需求有任何變動通常都需要修改測試，但卻更有機會找到意料之外的錯誤。</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/fqmXxDR.png\" alt=\"testing pyramid\" class=\"img_ev3q\"></p><blockquote><p>圖片來源：<a href=\"https://automationpanda.com/2018/08/01/the-testing-pyramid/\" target=\"_blank\" rel=\"noopener noreferrer\">Automation Panda</a></p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"時間有限該先寫哪一種\">時間有限該先寫哪一種？<a href=\"#時間有限該先寫哪一種\" class=\"hash-link\" aria-label=\"時間有限該先寫哪一種？的直接連結\" title=\"時間有限該先寫哪一種？的直接連結\">​</a></h2><p>以筆者的角度來說，並非所有的 function 或 component 都一定要寫一個對應的測試，畢竟時間和資源有限的情況下勢必要有所取捨。當產品還沒開發出來，下個月的薪水都還沒著落時，卻還在一一寫每個 function 或 component 的 test case 時，自己可能也很難安心。</p><p>在時間資源有限的情況下，我會鼓勵先做「單元測試」，它們對於程式可維護性的提升都能有相當的幫助，<strong>特別是會被多個不同開發者或多個不同模組使用到的共用函式</strong>，昨天提到，撰寫測試的好處包括「測試程式本身就有輔助文件的效果」，因為在測試的程式中提供了許多範例讓其他開發者可以更好理解這個方法的使用，此外未來若有重構或需求變更時，可以讓你自己在程式碼在改動後保有一定程度的信心。</p><p>除了單元測試外，若你的應用程式本身包含相當<strong>複雜的商業邏輯</strong>，這些複雜的商業邏輯，不是單純那種「使用者登入後就看不到『登入按鈕』」這麼直覺的邏輯，而是其他人看了程式碼後第一眼可能也無法理解為什麼的部分，例如，使用者看到的價格取決於使用者的等級、年齡、性別等等，一般人第一時間也無法馬上理解的商業邏輯，這種則會很建議可以使用整合測試或 E2E 測試來保護起來。如此，一開始開發好後就可以用測試檢驗自己是否有依照規格正確實作了商業邏輯，提升對自己程式的信心，再來則是在未來功能添加、需求改動、或是程式重構時，不會因為不小心忽略而改掉了原本的邏輯而不自知。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://kentcdodds.com/testing/\" target=\"_blank\" rel=\"noopener noreferrer\">The Testing Garden of Kent C. Dodds</a></li><li><a href=\"https://automationpanda.com/2018/08/01/the-testing-pyramid/\" target=\"_blank\" rel=\"noopener noreferrer\">The Testing Pyramid</a> @ Automation Panda</li><li><a href=\"https://www.robinwieruch.de/react-testing-library\" target=\"_blank\" rel=\"noopener noreferrer\">How to use React Testing Library Tutorial</a> @ rw;eruch</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day 26]<!-- --> 快照測試（Snapshot Testing）是什麼？什麼時間適合使用？ pjchender.dev": {
    "prefix": "hironman-2021 [Day 26]<!-- --> 快照測試（Snapshot Testing）是什麼？什麼時間適合使用？ pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day 26]<!-- --> 快照測試（Snapshot Testing）是什麼？什麼時間適合使用？</h1><p><img loading=\"lazy\" src=\"../../../i.imgur.com/1YAXwu5.png\" alt=\"Snapshot Testing\" class=\"img_ev3q\"></p><p>快照測試第一時間聽起來好像是會「幫我們的畫面做一個快照，紀錄下來當時的畫面」，但這樣的說法對也不對，今天就讓我們來了解一下所謂的快照測試（Snapshot Testing）。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"快照測試的原理\">快照測試的原理<a href=\"#快照測試的原理\" class=\"hash-link\" aria-label=\"快照測試的原理的直接連結\" title=\"快照測試的原理的直接連結\">​</a></h2><p>快照測試（Snapshot Testing）是由 Jest 提供的一種測試方式，它的原理是在進行測試時，Jest 會把開發者指定的元素轉譯（render）成 DOM 後保存成一個檔案紀錄下來，一般這個檔案的副檔名會以 <code>.snap</code> 結尾。</p><p>快照測試的原理蠻單純的，它就是在執行測試時，比對當前的快照檔內容和前一次的快照檔是否相同，如果是第一次執行還沒有前一次的快照可以比較的話，就會自動生成一份新的快照檔。如果當前快照檔和前一次的快照檔內容不同的話，測試就不會通過，也就是說，只要這次轉譯出來的 DOM 和前一次紀錄下來的 DOM 有任何不同，測試都不會通過。</p><p>舉例來說，如果現在有一個 React 元件 <code>Button</code>：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Button.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">Button</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">button</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\">Click me</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">button</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">default</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">Button</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在第一次執行快照測試時，Jest 就會自動建立一個 <code>__snapshots__</code> 資料夾，且裡面有一隻名為 <code>Button.test.tsx.snap</code> 的檔案，而它的快照檔內容則會長像這樣：</p><div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// __snapshots_/Button.test.tsx.snap</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Jest Snapshot v1, https://goo.gl/fbAQLP</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">exports</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">create snapshot test for the Button 1</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">&lt;button&gt;</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">  Click me</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\">&lt;/button&gt;</span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token template-string string\" style=\"color:rgb(195, 232, 141)\"></span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(195, 232, 141)\">`</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>現在如果把原本 <code>Button</code> 元件中的文字從 Click me 改成 Click here 的話，測試就會失敗：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/sUaSJE6.png\" alt=\"Snapshot Testing\" class=\"img_ev3q\"></p><p>也就是說，只要「<strong>這次 render 出來的 DOM 和前一次紀錄的 DOM 不同</strong>」測試就不會通過。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"為什麼需要快照測試snapshot-testing\">為什麼需要快照測試（Snapshot Testing）<a href=\"#為什麼需要快照測試snapshot-testing\" class=\"hash-link\" aria-label=\"為什麼需要快照測試（Snapshot Testing）的直接連結\" title=\"為什麼需要快照測試（Snapshot Testing）的直接連結\">​</a></h2><p>從快照測試的原理可以知道，只要畫面和過去有任何不同，測試就會報錯，這樣聽起來，幾乎只要每次程式有改動，測試結果就一定會失敗（failed)，這麼說起來快照測試到底有什麼好處呢？</p><p>快照測試最重要的目的是提醒開發者：「<strong>這裡有不同喔！這個不同是你預期該有的不同嗎？</strong>」</p><p>你可以想像有些時候，特別是一些單純的 UI 元件，花許多時間去寫這個元件的 Unit Test 可能 CP 值不太高，因為在寫測試時你需要先把該元件 render 出來，接著透過一些 selector 去選到該元素，然後透過 assert 確保該元素真的有 render 出來，並且在 assert 元素裡的內容是相同的。舉例來說，剛剛那個簡單的 Button 元素，寫成 Unit Test 會像這樣：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;button can render successfully with correct text&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Button</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> linkElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByText</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">Click me</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-flags\">i</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">linkElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toBeInTheDocument</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但一般的 UI 都不會這麼簡單，如果要一個個選出來再 assert 的話，相當麻煩。</p><p>這時有快照測試的話就相當方便，只需在開發好元件，且確認 UI 是正確的後，為它拍一個快照紀錄下來，後續只要這個 UI 的內容有變更，測試在執行的時候都會 failed，以提示開發者：「這裡有不同喔！請留意！」。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"更新快照\">更新快照<a href=\"#更新快照\" class=\"hash-link\" aria-label=\"更新快照的直接連結\" title=\"更新快照的直接連結\">​</a></h2><p>當開發者發現測試錯誤時，就要去檢視這個差異是預期的嗎？以剛剛來說，因為我們把原本 Button 元件的文字內容從 Click me 改成 Click here，所以現在這個錯誤是合理且符合預期的：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/6U3dqka.png\" alt=\"Snapshot Testing\" class=\"img_ev3q\"></p><p>這時候開發者要做的就是更新快照，在 Jest 的 watch mode 中，可以看到更新快照的選項：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/LQM7jKN.png\" alt=\"Snapshot Testing\" class=\"img_ev3q\"></p><p>可以透過 <code>u</code>（更新所有有問題的快照） 或 <code>i</code>（逐一選擇要更新的快照）來更新快照，更新完後，測試就會通過，同時原本的快照檔也會更新成當前 DOM 的樣子。</p><p>原則上這些快照檔也都需要一起透過 git 來追蹤，因此在發 PR 的時候，reviewer 也可以很容易的掌握 UI 上有變更的部分：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/zajn5u1.png\" alt=\"Snapshot Testing\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"撰寫快照測試\">撰寫快照測試<a href=\"#撰寫快照測試\" class=\"hash-link\" aria-label=\"撰寫快照測試的直接連結\" title=\"撰寫快照測試的直接連結\">​</a></h2><p>在瞭解了快照測試的概念後，來看一下剛剛 Button 元件的快照檔是如何產生（這裡以 React 元件為例）：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// Button.test.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports maybe-class-name\">Button</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./Button&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> create </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react-test-renderer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;&lt;Button /&gt; should render click here&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> tree </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">create</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Button</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toJSON</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">tree</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toMatchSnapshot</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>就是這麼容易，首先載入需要被快照的元件，並使用 React 官方提供的 <code>react-test-renderer</code> 套件（需要自行 npm install）。接著透過 <code>create</code> 和 <code>toJSON()</code> 將 Button 元件變成一個可以被保存下來的物件，最後呼叫 <code>toMatchSnapshot()</code> 這個方法，Jest 就會幫我們建立以及比對 <code>.snap</code> 檔。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"快照測試的使用時機及注意事項\">快照測試的使用時機及注意事項<a href=\"#快照測試的使用時機及注意事項\" class=\"hash-link\" aria-label=\"快照測試的使用時機及注意事項的直接連結\" title=\"快照測試的使用時機及注意事項的直接連結\">​</a></h2><p>從上面的說明中可以知道，快照測試這種一旦畫面有變更就要提示的特性，比較適合用在 UI 元件/函式庫，因為這些 UI 元件通常寫好後被變更的機會較小，且 UI 本身的正確性是它的重點；快照測試無法檢測元件的邏輯和模擬使用者的互動，例如點了按鈕下拉選單要展開這類的，因此如果有這個需求，需要輔以其他單元測試或整個測試，但至少快照測試可以確保 UI 的穩定性。</p><blockquote><p>註：快照測試雖然無法直接測試使用者互動的情況，但可以透過 props 的方式來執行某些 event listeners 來促使畫面改變，詳細的方式可以參考 <a href=\"https://jestjs.io/docs/tutorial-react#snapshot-testing\" target=\"_blank\" rel=\"noopener noreferrer\">snapshot-testing</a> @ Jest</p></blockquote><p>看起來快照測試著重的是 UI，那為什麼今天的開頭提到「快照測試是幫我們的畫面做一個快照，紀錄下來當時的畫面」這種說法對也不對呢？</p><p>原因在於快照測試紀錄下來的是 DOM 本身，而不是使用者真正看到的畫面，快照測試不像 visual regression testing 這種會實際以畫面截圖進行像素比對所進行的測試，因此精確來說，<strong>快照測試紀錄的只是 DOM，而不是真實的畫面</strong>。</p><p>最後，快照測試所產生的 snap 檔記得要被 git 所追蹤和紀錄，如此才能正確測試 DOM 有無變更，也能更清楚每次 DOM 的變化，因此記得不要把它們給 ignore 了。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://jestjs.io/docs/snapshot-testing\" target=\"_blank\" rel=\"noopener noreferrer\">Snapshot Testing</a> @ Jest</li><li><a href=\"https://jestjs.io/docs/tutorial-react#snapshot-testing\" target=\"_blank\" rel=\"noopener noreferrer\">Tutorial React &gt; Snapshot Testing</a> @ Jest</li><li><a href=\"https://reactjs.org/docs/test-renderer.html\" target=\"_blank\" rel=\"noopener noreferrer\">Test Renderer</a> @ React.js</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day27] 建立 Mock Module / Function 的方式（ft. TypeScript) pjchender.dev": {
    "prefix": "hironman-2021 [Day27] 建立 Mock Module / Function 的方式（ft. TypeScript) pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day27] 建立 Mock Module / Function 的方式（ft. TypeScript)</h1></header><h5 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"keywords-testing-react-testing-library-jest\">keywords: <code>testing</code>, <code>react-testing-library</code>, <code>jest</code><a href=\"#keywords-testing-react-testing-library-jest\" class=\"hash-link\" aria-label=\"keywords-testing-react-testing-library-jest的直接連結\" title=\"keywords-testing-react-testing-library-jest的直接連結\">​</a></h5><p><img loading=\"lazy\" src=\"../../../i.imgur.com/58F3Qha.png\" alt=\"Mock Module\" class=\"img_ev3q\"></p><p>今天來談談 Mock Module / Function 的部分。Mock Function 是在 Jest 中非常強大的功能，它可以模擬某個函式會回傳的值，並且監控該函式被執行的次數，而 Mock Module 可以說是墊加在 Mock Function 上的功能，也就是可以直接模擬某套件中特定函式回傳的結果。</p><p>雖然說在寫測試時 Mock Module 很常會被使用到，但因為 Jest 提供了幾種不同的方式讓開發者能夠 Mock Module，因此過去在找資料時常會看到多種不同寫法而對 Mock 的方式感到有點混亂，這篇內容則是整理了筆者比較常用的方式。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"建立一個簡單的測試範例\">建立一個簡單的測試範例<a href=\"#建立一個簡單的測試範例\" class=\"hash-link\" aria-label=\"建立一個簡單的測試範例的直接連結\" title=\"建立一個簡單的測試範例的直接連結\">​</a></h2><p>在開始說明 Mock Module 的概念前，讓我們先來看個例子。現在我們有個 React 元件長這樣：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> useEffect</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> useState </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> fetchUser </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">User</span><span class=\"token imports\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./types&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">App</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\">users</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> setUsers</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">useState</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\">User</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">useEffect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">fetchUser</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\">User</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">then</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">users</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">setUsers</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">users</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">div</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">className</span><span class=\"token tag attr-value punctuation attr-equals\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag attr-value\" style=\"color:rgb(255, 85, 114)\">App</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">header</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">className</span><span class=\"token tag attr-value punctuation attr-equals\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag attr-value\" style=\"color:rgb(255, 85, 114)\">App-header</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">        </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">ul</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">          </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\">users</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">map</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">user</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">            </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">li</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">key</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(255, 85, 114)\">user</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token tag script language-javascript property-access\" style=\"color:rgb(255, 85, 114)\">id</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\">user</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">li</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">        </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">ul</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">header</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">div</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">default</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">App</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在 <code>&lt;App /&gt;</code> 中，會載入 <code>./utils/api</code> 這支檔案，在 <code>./utils/api</code> 中則撰寫一個用來 fetch User API 的方法，它會實際向 <a href=\"https://jsonplaceholder.typicode.com/\" target=\"_blank\" rel=\"noopener noreferrer\">jsonplaceholder</a> 發送請求：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ./utils/api</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> fetchUser </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">async</span><span class=\"token generic-function\"> </span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> resp </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">await</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">fetch</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;https://jsonplaceholder.typicode.com/users&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> data </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token keyword\" style=\"font-style:italic\">await</span><span class=\"token plain\"> resp</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">json</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">as</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> data</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>預設的情況下，<a href=\"https://jsonplaceholder.typicode.com/\" target=\"_blank\" rel=\"noopener noreferrer\">jsonplaceholder</a> 會回傳 10 個使用者的資料回來，這時候畫面會長這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/7gs1BI7.png\" alt=\"Mock Module\" class=\"img_ev3q\"></p><p>接著一如往常的來撰寫測試，可以寫成像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// App.test.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> React </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> screen </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> App </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./App&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> create </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react-test-renderer&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">App </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">/</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> listItemElements </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">await</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">findAllByRole</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;listitem&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">listItemElements</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token plain\">length</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">toBe</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">10</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在這個測試中我們透過 react-testing-library 提供的 <code>render</code> 來轉譯出 <code>&lt;App /&gt;</code> 這個元件，接著在 DOM 上找出 <code>&lt;li /&gt;</code> 的元素，並 assert 它應該有 10 個，測試也順利的通過了：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/DHF40RH.png\" alt=\"Mock Module\" class=\"img_ev3q\"></p><blockquote><p>這裡筆者不會說明如何使用 react-testing-library 來撰寫 React 元件的測試，如果有需要的話，推薦可以看 <a href=\"https://www.youtube.com/watch?v=7dTTFW7yACQ&amp;list=PL4cUxeGkcC9gm4_-5UsNmLqMosM-dzuvQ&amp;ab_channel=TheNetNinja\" target=\"_blank\" rel=\"noopener noreferrer\">React Testing Library Tutorial</a> @ Youtube。</p></blockquote><p>但等等，這個測試實際上真的有去打 API 嗎？你覺得呢？</p><p>我們可以在 <code>&lt;App /&gt;</code> 元件中的 <code>useEffect</code> 中加上 <code>console.log(&#x27;[App] users&#x27;, users);</code>，看看取得的資料是否和從 jsonplaceholder 回來的資料相同：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">useEffect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token generic-function function\" style=\"color:rgb(130, 170, 255)\">fetchUser</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token generic-function generic class-name\" style=\"color:rgb(255, 203, 107)\">User</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token generic-function generic class-name punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token generic-function generic class-name operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">then</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">users</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token console class-name\" style=\"color:rgb(255, 203, 107)\">console</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">log</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;[App] users&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> users</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">setUsers</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">users</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>當郎～的確是打 API 回來的資料：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/GTTJyd8.png\" alt=\"Mock Module\" class=\"img_ev3q\"></p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"為什麼要建立-mock-modulefunction\">為什麼要建立 Mock Module/Function<a href=\"#為什麼要建立-mock-modulefunction\" class=\"hash-link\" aria-label=\"為什麼要建立 Mock Module/Function的直接連結\" title=\"為什麼要建立 Mock Module/Function的直接連結\">​</a></h2><p>從上面的例子中可以看到，我們真的對 jsonplaceholder 發出了請求，但等等，這樣是不是表示我們的測試以後都需要連上網路才能執行？就算連網本身不是問題，未來如果 jsonplaceholder 的網站維修的話，是不是表示我們的測試也會連帶無法進行。</p><p>除非是後期的 E2E 測試，否則當我們的測試依賴外部的資源時，是一件不太好的事，因為測試 failed 的時候，開發者將沒辦法馬上知道現在測試 failed 的原因是我們的程式寫壞了，還是外部的網站掛了。邏輯上同樣的程式碼每次執行測試得到的結果應該要是穩定的，不會現在跑沒事，下次跑卻莫名失敗。</p><p>未來確保執行測試時能夠控制不要讓外部的變數影響到測試的穩定度，我們可以透過 Jest 的 Mock Function 來模擬 API 回傳的結果，讓這個元件不需要實際發送請求。</p><blockquote><p>實際上，不只是串接 API 才需要使用到 Mock Function，如果要測試的內容包含會持續變動的時間、路由（router）、custom hooks 等等，也都可也透過 Mock Function 模擬。</p></blockquote><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使用-mock-modulefunction-來模擬回傳值\">使用 Mock Module/Function 來模擬回傳值<a href=\"#使用-mock-modulefunction-來模擬回傳值\" class=\"hash-link\" aria-label=\"使用 Mock Module/Function 來模擬回傳值的直接連結\" title=\"使用 Mock Module/Function 來模擬回傳值的直接連結\">​</a></h2><p>在撰寫 Mock Module 的時候，開發者要清楚知道現在要 Mock 的 Function 是什麼，以上面的例子來說，我們想要模擬的應該是 <code>fetchUser</code> 這個方法：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/jYfTMZb.png\" alt=\"Mock Module\" class=\"img_ev3q\"></p><p>因為只要能模擬 <code>fetchUser</code> 回傳的結果的話，就不需要實際向 jsonplaceholder 發送 API 請求。</p><p>要模擬 <code>fetchUser</code> ，只需要在測試檔（<code>App.test.tsx</code>）中，加上這兩行：</p><ol><li><p>載入要被 mock 的 module（如果沒有要在 test 中使用到這個 method 則可省略）</p></li><li><p>使用 <code>jest.mock(&lt;module 的路徑或名稱&gt;)</code> 來 mock 它</p></li></ol><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// App.test.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 1. 載入要被 mock 的 module（如果沒有要在 test 中使用到這個 method 則可省略）</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> fetchUser </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 2. 使用 `jest.mock(&lt;module 的路徑或名稱&gt;)` 來 mock 它</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">jest</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">mock</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在使用了 <code>jest.mock(&#x27;./utils/api&#x27;)</code> 後，現在的這個 <code>fetchUser</code> 已經不是原本的 <code>fetchUser</code> 了，而是 Jest 的 mockFn（即 <code>jest.fn()</code>），。因此就可以使用 Jest <a href=\"https://jestjs.io/docs/mock-function-api\" target=\"_blank\" rel=\"noopener noreferrer\">mockFn</a> 提供的許多方法。舉例來說，這裡可以使用 <code>mockResolvedValue</code> 來模擬 fetchUser 會回傳的內容：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 模擬 fetchUser 會回傳的內容</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  fetchUser</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">mockResolvedValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      id</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Leanne Graham&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      username</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Bret&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      email</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sincere@april.biz&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      id</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Ervin Howell&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      username</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Antonette&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      email</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Shanna@melissa.tv&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> listItemElements </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">await</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">findAllByRole</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;listitem&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">listItemElements</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toBe</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>最神奇的地方就在這裡了！這點非常非常重要！！</p><p>讀者可能會覺得很奇怪，我們是在測試檔 <code>App.test.tsx</code> 中匯入並模擬 <code>fetchUser</code> 這個方法的回傳值，但實際上會影響到的是在 <code>App</code> 中 <code>fetchUser</code> 被呼叫到時的回傳值。什麼意思，剛剛我們曾經在 <code>App.tsx</code> 中使用 <code>console.log()</code> 檢視 fetchUser 回傳的結果，我們來看看這時候 useEffect 中 fetchUser 回傳的結果是什麼：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/RSjWcfF.png\" alt=\"Mock Module\" class=\"img_ev3q\"></p><p>你會發現雖然是在 <code>App.test.tsx</code> 中 mock 了 fetchUser 這個方法，但實際上造成效果的地方會是在 <code>App.tsx</code> 中。這時候因為我們已經 mock 了 fetchUser 這個函式，所以 fetchUser 就不會再真的去對 jsonplaceholder 發送 API 請求。</p><p>透過 Mock Module/Function 的使用，就可以確保測試的結果不會受外部服務而有影響。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"直接-mock-這個-method不-import-原本的-method\">直接 Mock 這個 Method（不 import 原本的 method）<a href=\"#直接-mock-這個-method不-import-原本的-method\" class=\"hash-link\" aria-label=\"直接 Mock 這個 Method（不 import 原本的 method）的直接連結\" title=\"直接 Mock 這個 Method（不 import 原本的 method）的直接連結\">​</a></h2><p>在上面的範例中，我們是從原本的 package 中 import <code>fetchUser</code> 來用，這麼做會有一種怪怪的感覺，怎麼這個 <code>fetchUser</code> 和實際上想的不一樣。</p><p>有另一種作法是不要 import 這個 package，而是直接 mock 這個 package 和裡面的方法，例如：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 不需要在 import 原本的 package</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// import { fetchUser } from &#x27;./util/api&#x27;;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 直接 mock 這個 package</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">jest</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">mock</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./util/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">fetchUser</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(255, 203, 107)\">Promise</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">resolve</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">id</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">1</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Leanne Graham&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">username</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Bret&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">email</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Sincere@april.biz&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">id</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(247, 140, 108)\">2</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Ervin Howell&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">username</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Antonette&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">          </span><span class=\"token literal-property property\">email</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;Shanna@melissa.tv&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>如此可以得到一樣的結果。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"搭配-typescript-使用\">搭配 TypeScript 使用<a href=\"#搭配-typescript-使用\" class=\"hash-link\" aria-label=\"搭配 TypeScript 使用的直接連結\" title=\"搭配 TypeScript 使用的直接連結\">​</a></h2><p>如果有在使用 TypeScript 的話，你可能會發現到測試檔中在使用 mockFn 的地方 TypeScript 會報錯：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/b53mwzp.png\" alt=\"Mock Module\" class=\"img_ev3q\"></p><p>報錯的原因在於雖然我們用 <code>jest.mock()</code> 來讓 <code>fetchUser</code> 變成了一個 mockFn，邏輯上 fetchUser 可以使用 mockFn 中的所有方法，但因為 TypeScript 並不知道 fetchUser 已經變成了 mockFn 這件事，因此會報錯。</p><p>要解決這個問題，只需把 <code>fetchUser</code> 使用 Type Assertion 指定成 <code>jest.Mock</code> 或 <code>jest.MockedFunction&lt;typeof fetchUser&gt;</code> 即可，通常可以寫成像這樣：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> fetchUser </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">jest</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">mock</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> mockedFetchUser </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> fetchUser </span><span class=\"token keyword\" style=\"font-style:italic\">as</span><span class=\"token plain\"> jest</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token plain\">MockedFunction</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token keyword\" style=\"font-style:italic\">typeof</span><span class=\"token plain\"> fetchUser</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 也可以 as jest.Mock</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  mockedFetchUser</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">mockResolvedValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">/* ... */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候因為有做 Type Assertion 的關係，在使用 <code>mockedFetchUser</code> 時就不會有 TypeScript 的型別錯誤。</p><p>此外，為了節省每次都需要使用 <code>as jest.MockedFunction&lt;...&gt;</code> 的寫法，有開發者包好了一個 <code>mockFunction</code> 的 utility：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// credit and refer to:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// https://instil.co/blog/typescript-testing-tips-mocking-functions-with-jest/</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> mockFunction</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">extends</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token plain\">args</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token builtin\" style=\"color:rgb(130, 170, 255)\">any</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">fn</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> jest</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token plain\">MockedFunction</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> fn </span><span class=\"token keyword\" style=\"font-style:italic\">as</span><span class=\"token plain\"> jest</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token plain\">MockedFunction</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">T</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>使用時只需要變成：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> fetchUser </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 要被 mock 的 module</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> mockFunction </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/mockFunction&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">jest</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">mock</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./utils/api&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 讓該 module 變成 mockFn</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> mockedFetchUser </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">mockFunction</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">fetchUser</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 處理 TS 型別</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  mockedFetchUser</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">mockResolvedValue</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">/* ... */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 建立 mock data</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>就完成了。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"留意mock-用的越多越偏離-component-實際執行的情況\">留意：Mock 用的越多，越偏離 component 實際執行的情況<a href=\"#留意mock-用的越多越偏離-component-實際執行的情況\" class=\"hash-link\" aria-label=\"留意：Mock 用的越多，越偏離 component 實際執行的情況的直接連結\" title=\"留意：Mock 用的越多，越偏離 component 實際執行的情況的直接連結\">​</a></h2><p>雖然 Mock 看起來很好用，但要特別留意，實際上，當你每用一次 Mock，你就離 component 實際執行的情況又遠了一點。</p><p>因此，當你看到 Mock Function 或自己使用 Mock Function 時，請先問問自己，這個 Mock 時有必要的嗎？有沒有其他不用 Mock 的方式可以解決同樣的問題？</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mock-modulefunction-學習重點\">Mock Module/Function 學習重點<a href=\"#mock-modulefunction-學習重點\" class=\"hash-link\" aria-label=\"Mock Module/Function 學習重點的直接連結\" title=\"Mock Module/Function 學習重點的直接連結\">​</a></h2><blockquote><p>需要在「測試檔」中撰寫 mock module 和 mock data，實際的效果會作用在「原程式」中。</p></blockquote><ol><li>先找出「原程式」中要 Mock 的 module，例如 <code>fetchUser</code></li><li>在「測試檔」中載入要被 Mock 的 module，例如 <code>import { fetchUser } from &#x27;./utils/api&#x27;</code>（如果沒有要在 test 中使用到這個 method 則可以省略）</li><li>在「測試檔」中使用 <code>jest.mock&lt;path_or_name&gt;</code> 來 mock 該 module</li><li>（TS Optional）使用 mockFunction 這個 utility 或使用 Type Assertion</li><li>在「測試檔」中，撰寫該 function 的 mock return value，例如，<code>mockedFetchUser.mockResolvedValue</code></li><li>在「原程式」中確認該 function 執行的回傳值是 mock 後的結果</li></ol><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"推薦資源\">推薦資源<a href=\"#推薦資源\" class=\"hash-link\" aria-label=\"推薦資源的直接連結\" title=\"推薦資源的直接連結\">​</a></h2><ul><li><a href=\"https://www.youtube.com/watch?v=7dTTFW7yACQ&amp;list=PL4cUxeGkcC9gm4_-5UsNmLqMosM-dzuvQ&amp;ab_channel=TheNetNinja\" target=\"_blank\" rel=\"noopener noreferrer\">React Testing Library Tutorial</a> @ Youtube</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://instil.co/blog/typescript-testing-tips-mocking-functions-with-jest/\" target=\"_blank\" rel=\"noopener noreferrer\">TypeScript Testing Tips - Mocking Functions with Jest</a></li><li><a href=\"https://stackoverflow.com/a/60416990/5135452\" target=\"_blank\" rel=\"noopener noreferrer\">Mock dependency in Jest with TypeScript</a> @ StackOverflow</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day28] 測試依賴外層 Context Provider 的 React 元件：客製化 render 函式 pjchender.dev": {
    "prefix": "hironman-2021 [Day28] 測試依賴外層 Context Provider 的 React 元件：客製化 render 函式 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day28] 測試依賴外層 Context Provider 的 React 元件：客製化 render 函式</h1></header><h5 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"keywords-testing-react-testing-library-jest\">keywords: <code>testing</code>, <code>react-testing-library</code>, <code>jest</code><a href=\"#keywords-testing-react-testing-library-jest\" class=\"hash-link\" aria-label=\"keywords-testing-react-testing-library-jest的直接連結\" title=\"keywords-testing-react-testing-library-jest的直接連結\">​</a></h5><p>昨天提到可以用 Mock Module 的方式來模擬函式或套件的回傳值，但有些時候情況沒那麼單純，例如當我們有使用 react-router-dom、redux、styled-components 的 ThemeProvider 等作為外層元件（Wrapper）的情況，當有用了這些 wrapper 後，就可以在自己的元件中取得它們所提供的方法。</p><p>具體來說，以 react-router-dom 為例，在 App 的最外層會使用 <code>&lt;BrowserRouter /&gt;</code> 來把所有的元件包起來，類似像這樣：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// index.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports maybe-class-name\">ReactDOM</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react-dom&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports maybe-class-name\">App</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./App&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">BrowserRouter</span><span class=\"token imports\"> </span><span class=\"token imports keyword module\" style=\"font-style:italic\">as</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">Router</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">Switch</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">Route</span><span class=\"token imports\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react-router-dom&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> root </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">createRoot</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token dom variable\" style=\"color:rgb(191, 199, 213)\">document</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getElementById</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;root&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">root</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Switch</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Route</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">path</span><span class=\"token tag attr-value punctuation attr-equals\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag attr-value\" style=\"color:rgb(255, 85, 114)\">/</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">        </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Route</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Switch</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">  </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>接著我們就可以在 <code>&lt;Router&gt;</code> 元件內的其他組件取得由 react-router-dom 提供的方法，例如 <code>useLocation</code>：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> useLocation </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react-router-dom&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">App</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token dom variable\" style=\"color:rgb(191, 199, 213)\">location</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">useLocation</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">div</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">className</span><span class=\"token tag attr-value punctuation attr-equals\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag attr-value\" style=\"color:rgb(255, 85, 114)\">App</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">header</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">className</span><span class=\"token tag attr-value punctuation attr-equals\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag attr-value\" style=\"color:rgb(255, 85, 114)\">App-header</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\">Your current path is </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token dom variable\" style=\"color:rgb(191, 199, 213)\">location</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token property-access\">pathname</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">header</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">div</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">default</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">App</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>透過 <code>useLocation</code> 就能夠在 App 元件中取得當前路由的 location，但要能夠使用 <code>useLocation</code> 有一個前提是 <code>&lt;App /&gt;</code> 這個元件需要被包在 <code>&lt;Router /&gt;</code> 元件中。</p><p>React 中類似用法的例子還很多，例如在 styled-components 中，需要使用 <code>&lt;ThemeProvider /&gt;</code> 包起來後才能在內層元件中取得定義好的主題配色；在 recoil 中，需要使用 <code>&lt;RecoilRoot /&gt;</code> 包起來後才能在內層元件使用到它提供的 <code>useRecoilState</code> 這個方法。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"撰寫測試時也要記得-wrap-起來\">撰寫測試時也要記得 Wrap 起來<a href=\"#撰寫測試時也要記得-wrap-起來\" class=\"hash-link\" aria-label=\"撰寫測試時也要記得 Wrap 起來的直接連結\" title=\"撰寫測試時也要記得 Wrap 起來的直接連結\">​</a></h2><p>回到 react-router-dom 的例子，前面有提過要在 <code>&lt;App /&gt;</code> 中使用 <code>useLocation</code> 的前提是：<code>&lt;App /&gt;</code> 需要是 <code>&lt;Router /&gt;</code> 的子元件時才能使用，也就是至少要像這樣：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">  </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\"></span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>現在我們要針對 <code>&lt;App /&gt;</code> 元件進行測試時，如果在還沒有使用 react-router-dom 之前，原本的寫法會像是這樣，並且能夠正確執行：</p><div class=\"language-typescript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-typescript codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> screen </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> App </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./App&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token plain\">App </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">/</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> textElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">getByText</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">Your current path is</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">textElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">toBeInTheDocument</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>但現在因為我們在 App 元件中用了 <code>useLocation</code> 這個方法，所以上面這樣的測試會噴錯，這個錯誤通常會像是毀天滅地一般：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/ERbTfvX.png\" alt=\"Screen Shot 2021-10-13 at 11.10.34 PM\" class=\"img_ev3q\"></p><p>但細看這個錯誤訊息就會發現，它說的是 &quot;TypeError: Cannot read property &#x27;location&#x27; of undefined&quot;，有經驗的開發者很快就會知道，這個錯誤的意思是我們試著從 undefined 中想要去拿出 location 這個屬性，於是就壞了。</p><p>在原本 <code>&lt;App /&gt;</code> 元件中，可以看到是使用了 <code>const location = useLocation();</code> 來取出 <code>location</code>，也就是說現在的 <code>useLocation()</code> 是 undefined 的意思，所以才會報出剛剛那個錯誤。</p><p>要解決這個問題很簡單，只需要在 render App 元件的地方把 <code>&lt;App /&gt;</code> 外也包上 <code>&lt;Router /&gt;</code> 就可以了，像是這樣：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports maybe-class-name\">App</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./App&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">BrowserRouter</span><span class=\"token imports\"> </span><span class=\"token imports keyword module\" style=\"font-style:italic\">as</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">Router</span><span class=\"token imports\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react-router-dom&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 因為 App 中用到了 react-router-dom 的 useLocation</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 所以需要在 render App 的地方先把 &lt;App /&gt; 用 &lt;Router /&gt; 包起來</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> textElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByText</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">Your current path is</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">textElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toBeInTheDocument</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候測試就會順利的通過了：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/R3m0Ag7.png\" alt=\"Screen Shot 2021-10-13 at 11.17.36 PM\" class=\"img_ev3q\"></p><p>一般來說，不論是 react-router-dom 或是先前提到的 redux、styled-components、recoil 等這類套件，都可以透過這樣的方式來解決，這也是在做整合測試（integration testing）時很常用到的方式。</p><p>但是，讀者應該會發現這麼做雖然可以解決問題但非常麻煩，因為這類的 Provider（例如，<code>&lt;Router /&gt;</code>）通常都是包在最外層，也就是很多元件都會直接使用它們提供的方法，如果每次測試元件時，都還需要把欲測試的元件一一包起來，實作有點冗餘，要是用的工具比較多時可能還會很大一包，例如：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">RecoilRoot</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">        </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">ThemeProvider</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">theme</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(255, 85, 114)\">theme</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">          </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">        </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">ThemeProvider</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">      </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">RecoilRoot</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain-text\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> textElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByText</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">Your current path is</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">textElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toBeInTheDocument</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>有沒有辦法不要每次測試元件時都要寫這些重複的 wrapper 呢？當然有！</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"客製化-react-testing-library-render-函式\">客製化 react-testing-library render 函式<a href=\"#客製化-react-testing-library-render-函式\" class=\"hash-link\" aria-label=\"客製化 react-testing-library render 函式的直接連結\" title=\"客製化 react-testing-library render 函式的直接連結\">​</a></h2><p>在測試時要轉譯（render）元件是透過 react-testing-library 提供的 <code>render</code> 方法，因此如果想要省去重複撰寫這些 wrapper 的話，就可以從這個 render 下手。</p><p>在 react-testing-library 中提供了<a href=\"https://testing-library.com/docs/react-testing-library/setup/\" target=\"_blank\" rel=\"noopener noreferrer\">客製化 render 函式</a>的方法，讓開發者可以把想要包起來的 wrapper 都先寫在 render 函式中。作法其實不會很難，根據官方的範例可以建立一支 <code>custom-testing-library.tsx</code>：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// custom-testing-library.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:rgb(130, 170, 255)\">FC</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">ReactElement</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">RenderOptions</span><span class=\"token imports\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">BrowserRouter</span><span class=\"token imports\"> </span><span class=\"token imports keyword module\" style=\"font-style:italic\">as</span><span class=\"token imports\"> </span><span class=\"token imports maybe-class-name\">Router</span><span class=\"token imports\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;react-router-dom&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">AllTheProviders</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:rgb(130, 170, 255)\">FC</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> children </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">return</span><span class=\"token plain\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\">children</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">Router</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> customRender </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">ui</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">ReactElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> options</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">?</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">Omit</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&lt;</span><span class=\"token maybe-class-name\">RenderOptions</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;wrapper&#x27;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">ui</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> wrapper</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token maybe-class-name\">AllTheProviders</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token spread operator\" style=\"color:rgb(137, 221, 255)\">...</span><span class=\"token plain\">options </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token exports operator\" style=\"color:rgb(137, 221, 255)\">*</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">export</span><span class=\"token plain\"> </span><span class=\"token exports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token exports\"> customRender </span><span class=\"token exports keyword module\" style=\"font-style:italic\">as</span><span class=\"token exports\"> render </span><span class=\"token exports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>接著在撰寫測試的時候，就不要直接 import testing-library 的 render 方法，而是從這個 <code>custom-testing-library.tsx</code> 拿，同時由於 <code>custom-testing-library</code> 有直接 export 了原本的 <code>@testing-library/react</code>，所以一樣可以從 <code>custom-testing-library</code> 中取得 react-testing-library 中原本的內容。</p><p>現在就可以把原本的測試改成這樣：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./custom-testing-library&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports maybe-class-name\">App</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./App&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;render user data successfully&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> textElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByText</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">Your current path is</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">textElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toBeInTheDocument</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候，我們就不需要在 <code>render</code> 裡面在額外包其他哩哩摳摳的各種 Wrapper 了，因為都已經在客製化的 render 中處理掉了。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://testing-library.com/docs/react-testing-library/setup/#custom-render\" target=\"_blank\" rel=\"noopener noreferrer\">Custom Render</a> @ React Testing Library</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day29] React Testing Library 的一些實用的小技巧 pjchender.dev": {
    "prefix": "hironman-2021 [Day29] React Testing Library 的一些實用的小技巧 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day29] React Testing Library 的一些實用的小技巧</h1></header><h5 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"keywords-testing-react-testing-library-jest\">keywords: <code>testing</code>, <code>react-testing-library</code>, <code>jest</code><a href=\"#keywords-testing-react-testing-library-jest\" class=\"hash-link\" aria-label=\"keywords-testing-react-testing-library-jest的直接連結\" title=\"keywords-testing-react-testing-library-jest的直接連結\">​</a></h5><p>今天來談談 React Testing Library 中筆者常用到的一些功能，React Testing Library 的套件名是 <code>@testing-library/react</code>，它是奠基在 Testing Library 提供的許多方法上，為 React 的測試提供了更多不同的方法。如果讀者寫的不是 React，Testing Library 本身也搭配很多不同的框架可以用來撰寫測試，例如，Angular、Vue、Svelte、Puppeteer、Cypress 等等。</p><p>同樣的，筆者不會說明如何使用 react-testing-library 來撰寫 React 元件的測試，如果有需要的話，推薦可以看 Youtube 上這系列的教學影片 <a href=\"https://www.youtube.com/watch?v=7dTTFW7yACQ&amp;list=PL4cUxeGkcC9gm4_-5UsNmLqMosM-dzuvQ&amp;ab_channel=TheNetNinja\" target=\"_blank\" rel=\"noopener noreferrer\">React Testing Library Tutorial</a>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"getbyquerybyfindby-的使用時機\">getBy、queryBy、findBy 的使用時機<a href=\"#getbyquerybyfindby-的使用時機\" class=\"hash-link\" aria-label=\"getBy、queryBy、findBy 的使用時機的直接連結\" title=\"getBy、queryBy、findBy 的使用時機的直接連結\">​</a></h2><p>在 React Testing Library 中提供了三種用來 query DOM 元素的方法，分別是 <code>getBy</code>、<code>queryBy</code>、和 <code>findBy</code>，在<a href=\"https://testing-library.com/docs/queries/about\" target=\"_blank\" rel=\"noopener noreferrer\">官方文件</a>中用詳細的表格來說明這三種方法的差異：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/teJAXuB.png\" alt=\"About Queries\" class=\"img_ev3q\"></p><blockquote><p>圖表資料來自官方網站：<a href=\"https://testing-library.com/docs/queries/about\" target=\"_blank\" rel=\"noopener noreferrer\">About Queries</a> @ testing-library/react</p></blockquote><p>但這張表真正想告訴我們的是什麼呢？這裡筆者整理各個方法的使用時機重點如下：</p><ul><li>使用 <code>queryBy</code>：<strong>找不到該元素時不會噴錯</strong>，通常是要用來檢查某個元素「不在 DOM 上」時使用</li><li>使用 <code>findBy</code>：<strong>需要搭配 <code>async/await</code></strong> 時，通常該 DOM 元素不是一開始就 mount 在頁面上</li><li>使用 <code>getBy</code>：除了上述情況之外，都可以用 getBy，<strong><code>getBy</code> 在找不到該元素時會直接噴錯（throw Error）</strong></li></ul><p>除了這三個方法的差異外，再來就是開發者要找的是「單一個元素（xxxBy）」或「多個元素（xxxAllBy）」：</p><ul><li>如果使用的不是 <code>xxxAllBy</code> 的方法，但卻找到超過一個以上的元素時會噴錯</li><li>使用 <code>xxxAllBy</code> 方法時會回傳的是陣列</li></ul><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"如何快速找到特定元素query-role-attribute\">如何快速找到特定元素（query role attribute）<a href=\"#如何快速找到特定元素query-role-attribute\" class=\"hash-link\" aria-label=\"如何快速找到特定元素（query role attribute）的直接連結\" title=\"如何快速找到特定元素（query role attribute）的直接連結\">​</a></h2><p>由於 Testing Library 很強調用實際使用者的視角來進行測試，因此它會更偏好開發者使用 DOM 上符合 Accessibility 的元素（例如，role、label）、或者是使用者實際上看得的東西（例如、Text、Title）來找到欲進行測試的元素，而不是透過使用者看不到的 class 或 id 來進行 query。</p><blockquote><p>註：不是不能使用 id 來 query 元素，有些時候只能用 id 或直接用 id 會更有效率，只是以偏好來說，Testing Library 更建議使用符合 Accessibility 方法。</p></blockquote><p>但實務上來說，一般的開發者可能並不清楚每個 HTML 元素所對應的 ARIA role 是什麼，這時候有幾個不同的方法可以處理。</p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使用-chrome-的開發者工具\">使用 Chrome 的開發者工具<a href=\"#使用-chrome-的開發者工具\" class=\"hash-link\" aria-label=\"使用 Chrome 的開發者工具的直接連結\" title=\"使用 Chrome 的開發者工具的直接連結\">​</a></h3><p>第一種方式是使用 Chrome 內建的開發者工具，在 Chrome 的開發者工具，按下「Alt + Shift + P」後，搜尋 <strong>show accessibility</strong>，接著在 Accessibility 頁籤下的 Computed Properties 中就會顯示改元素的 role 和 name：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/tyLepXL.png\" alt=\"react testing library\" class=\"img_ev3q\"></p><p>如此就可以使用 React Testing Library 提供的 <code>getByRole</code> 方法來選到該元素：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// App.test.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./custom-testing-library&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports maybe-class-name\">App</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./App&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;can find the specific text in specific DOM&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 getByRole 方法</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> heading </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByRole</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;heading&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token literal-property property\">name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">your current path is \\/</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-flags\">i</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">heading</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toBeInTheDocument</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使用-logrole-方法\">使用 logRole 方法<a href=\"#使用-logrole-方法\" class=\"hash-link\" aria-label=\"使用 logRole 方法的直接連結\" title=\"使用 logRole 方法的直接連結\">​</a></h2><div class=\"theme-admonition theme-admonition-info alert alert--info admonition_LlT9\"><div class=\"admonitionHeading_tbUL\"><span class=\"admonitionIcon_kALy\"><svg viewBox=\"0 0 14 16\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg></span>官方文件</div><div class=\"admonitionContent_S0QG\"><p><a href=\"https://testing-library.com/docs/dom-testing-library/api-debugging\" target=\"_blank\" rel=\"noopener noreferrer\">Debugging</a> @ Testing Library</p></div></div><p>或者也可以使用 Testing Library 內建的 <code>logRole</code> API。我們只需要把想檢視的 HTML Element 放入 <code>logRole</code> 這個方法中，Testing Library 就會告訴開發者在這個 HTML 元素中有哪些 ARIA 的 role 可以使用。</p><p>舉例來說，在測試的檔案中：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// App.test.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> logRoles</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;can find the specific text in specific DOM&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> container </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用 logRoles 來檢視某個 HTML Element 所包含的 Accessibility Role</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">logRoles</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">container</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>在 Terminal 中就可以看到所有這個 DOM 中的 ARIA role 和對應的 name，例如這裡包含了兩個 role，分別是 <code>banner</code> 和 <code>heading</code>：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/hJF22tt.png\" alt=\"react testing library\" class=\"img_ev3q\"></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"使用-chrome-extension\">使用 Chrome Extension<a href=\"#使用-chrome-extension\" class=\"hash-link\" aria-label=\"使用 Chrome Extension的直接連結\" title=\"使用 Chrome Extension的直接連結\">​</a></h3><p>最後一種，應該也是最簡單的方式是直接透過 Chrome Extension，在 <a href=\"https://javascript.plainenglish.io/5-tips-to-perfect-react-testing-library-queries-ae4e49f27858\" target=\"_blank\" rel=\"noopener noreferrer\">5 Tips to Perfect React Testing Library Queries</a> 這篇文章中推薦了兩個好用的 Chrome Extension，分別如下：</p><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"testing-library-which-query\">Testing Library: which query<a href=\"#testing-library-which-query\" class=\"hash-link\" aria-label=\"Testing Library: which query的直接連結\" title=\"Testing Library: which query的直接連結\">​</a></h4><blockquote><p><a href=\"https://chrome.google.com/webstore/detail/testing-library-which-que/olmmagdolfehlpjmbkmondggbebeimoh/related?hl=en-US\" target=\"_blank\" rel=\"noopener noreferrer\">Testing Library: which query</a> @ Chrome Extension</p></blockquote><p>這個套件可以直接把要 query 的元素裝成 Testing Library 的寫法後，用點右鍵的方式複製下來：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/GUh2tHg.png\" alt=\"react testing library\" class=\"img_ev3q\"></p><p>按下複製後，就可以取得下列程式：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByRole</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;heading&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\">name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">your current path is \\/</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-flags\">i</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"testing-playground\">Testing Playground<a href=\"#testing-playground\" class=\"hash-link\" aria-label=\"Testing Playground的直接連結\" title=\"Testing Playground的直接連結\">​</a></h4><blockquote><p><a href=\"https://chrome.google.com/webstore/detail/testing-playground/hejbmebodbijjdhflfknehhcgaklhano/related\" target=\"_blank\" rel=\"noopener noreferrer\">Testing Playground</a> @ Chrome Extension</p></blockquote><p>另一個套件是 Testing Playground，它會在 Chrome 的開發者工具中多一個 Tab，當你選了特定元素後，一樣會出現可以複製的程式碼，除此之外，最下面還會列出和 Accessible 有關的屬性：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/cLAOjGV.png\" alt=\"Testing Playground\" class=\"img_ev3q\"></p><p>這兩套都可以方便開發者找到想要的元素。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"透過-debug-把-dom-console-出來\">透過 Debug 把 DOM console 出來<a href=\"#透過-debug-把-dom-console-出來\" class=\"hash-link\" aria-label=\"透過 Debug 把 DOM console 出來的直接連結\" title=\"透過 Debug 把 DOM console 出來的直接連結\">​</a></h2><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"screendebug\">screen.debug()<a href=\"#screendebug\" class=\"hash-link\" aria-label=\"screen.debug()的直接連結\" title=\"screen.debug()的直接連結\">​</a></h3><p><code>screen.debug()</code> 這個滿實用也蠻多人知道的，基本上就是可以把當前畫面的 DOM 顯示在 Terminal 中：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword module\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;can find the specific text in specific DOM&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">debug</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>此時的 Terminal 會得到如下的結果：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/K5kvysx.png\" alt=\"screen debug\" class=\"img_ev3q\"></p><h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"prettydom\">prettyDOM<a href=\"#prettydom\" class=\"hash-link\" aria-label=\"prettyDOM的直接連結\" title=\"prettyDOM的直接連結\">​</a></h3><p>雖然用 <code>screen.debug()</code> 可以看到目前 DOM 的樣子，但因為它有行數限制，當 Component 轉譯出來的 DOM 很多行時，就沒有辦法看到完整的內容。這時候就可以使用 Testing Library 提供的 <code>prettyDOM</code> 這個方法來把特定的 DOM 元素 console 出來。</p><p>為什麼不直接使用 <code>console.log()</code> 就好呢？因為會非常難看。舉例來說，現在我們找到了 heading 這個元素，想要把它 console 出來看一下：</p><div class=\"language-tsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-tsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// App.test.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;can find the specific text in specific DOM&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> heading </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByRole</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;heading&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">your current path is \\/</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-flags\">i</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 使用原本的 console.log</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token console class-name\" style=\"color:rgb(255, 203, 107)\">console</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">log</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">heading</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候 console 出來的內容會像這樣：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/7hyULDq.png\" alt=\"prettyDOM\" class=\"img_ev3q\"></p><p>非常難以閱讀實際的 DOM 會長什麼樣，但如果是先用 Testing Library 提供的 <code>prettyDOM</code> 方法後再執行 console，像是這樣：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// App.test.tsx</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> prettyDOM</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;@testing-library/react&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;can find the specific text in specific DOM&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> heading </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByRole</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;heading&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token literal-property property\">name</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-source language-regex\">your current path is \\/</span><span class=\"token regex regex-delimiter\">/</span><span class=\"token regex regex-flags\">i</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// 先使用 prettyDOM 後再 console</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token console class-name\" style=\"color:rgb(255, 203, 107)\">console</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">log</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">prettyDOM</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">heading</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候 console 出來的結果如下：</p><p><img loading=\"lazy\" src=\"../../../i.imgur.com/jGtGrxY.png\" alt=\"prettyDOM\" class=\"img_ev3q\"></p><p>是不是容易閱讀的多了。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"在-production-移除-test-id\">在 Production 移除 test-id<a href=\"#在-production-移除-test-id\" class=\"hash-link\" aria-label=\"在 Production 移除 test-id的直接連結\" title=\"在 Production 移除 test-id的直接連結\">​</a></h2><p>最後，除了使用 Accessible Attribute 或畫面上的文字來 query DOM 元素之外，有時還是必須使用 id 的方式來 query DOM，Testing Library 預設可以使用 <code>getByTestId</code> 這個方法來找出在 DOM 元素帶有特定 <code>data-testid</code> 的 HTML 元素。</p><p>舉例來說，可以在想要 query 到的 DOM 元素加上 <code>data-testid=&quot;heading&quot;</code>：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">h1</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(255, 203, 107)\">data-testid</span><span class=\"token tag attr-value punctuation attr-equals\" style=\"color:rgb(199, 146, 234)\">=</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag attr-value\" style=\"color:rgb(255, 85, 114)\">heading</span><span class=\"token tag attr-value punctuation\" style=\"color:rgb(199, 146, 234)\">&quot;</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><span class=\"token plain-text\">Your current path is </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token dom variable\" style=\"color:rgb(191, 199, 213)\">location</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token property-access\">pathname</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\">h1</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&gt;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這時候在寫測試時，就可以使用 <code>getByTestId</code> 這個方法：</p><div class=\"language-jsx codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-jsx codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token keyword module\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token imports\"> render</span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token imports\"> screen </span><span class=\"token imports punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./custom-testing-library&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token keyword module\" style=\"font-style:italic\">import</span><span class=\"token plain\"> </span><span class=\"token imports maybe-class-name\">App</span><span class=\"token plain\"> </span><span class=\"token keyword module\" style=\"font-style:italic\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;./App&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">test</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;can find the specific text in specific DOM&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"font-style:italic\">async</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:rgb(137, 221, 255)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">render</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(255, 203, 107)\">App</span><span class=\"token tag\" style=\"color:rgb(255, 85, 114)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(199, 146, 234)\">/&gt;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"font-style:italic\">const</span><span class=\"token plain\"> headingElement </span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">=</span><span class=\"token plain\"> screen</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">getByTestId</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&#x27;heading&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:rgb(130, 170, 255)\">expect</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token plain\">headingElement</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(130, 170, 255)\">toBeInTheDocument</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">(</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">)</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>這麼做雖然很方便，但在 Production 的產品上，總是不希望留下這些 data-testid，一來不太好看，二來實在是給爬蟲一個很大的方便。因此，如果希望能在 production 時移除 data-testid 這個屬性，在官方文件中提到可以透過 babel 的 <a href=\"https://www.npmjs.com/package/babel-plugin-react-remove-properties\" target=\"_blank\" rel=\"noopener noreferrer\">babel-plugin-react-remove-properties</a> 來解決，這個 plugin 可以在 bundle 成 production 時，把所有指定的 attribute 的移掉，因此我們也可以利用這個 plugin 來把為了測試而寫的 data-testid 移除。</p><p>使用時需要在 babel 的設定檔（<code>.babelrc</code>）中加上下列設定：</p><div class=\"language-json codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-json codeBlock_bY9V thin-scrollbar\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token comment\" style=\"color:rgb(105, 112, 152);font-style:italic\">// .bablerc</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token property\">&quot;env&quot;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token property\">&quot;production&quot;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">      </span><span class=\"token property\">&quot;plugins&quot;</span><span class=\"token operator\" style=\"color:rgb(137, 221, 255)\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">[</span><span class=\"token string\" style=\"color:rgb(195, 232, 141)\">&quot;react-remove-properties&quot;</span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#bfc7d5\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(199, 146, 234)\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"複製代碼至剪貼簿\" title=\"複製\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div><p>預設就會把名稱是以 <code>data-test</code> 開頭的屬性都移除，但如果讀者不是用預設的 data-testid 作為 query 的屬性，或者你想透過這個 babel plugin 移除掉其他的 DOM attribute 也是可以的，方式也很簡單，可以直接參考該套件的<a href=\"https://www.npmjs.com/package/babel-plugin-react-remove-properties#usage\" target=\"_blank\" rel=\"noopener noreferrer\">使用說明</a>。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"小結\">小結<a href=\"#小結\" class=\"hash-link\" aria-label=\"小結的直接連結\" title=\"小結的直接連結\">​</a></h2><p>在這次的鐵人賽中，筆者僅用大約一週的時間分享撰寫測試時的一些經驗，實際上測試能撰寫的內容，不論是概念或實務都遠超過此，在此次鐵人賽中也有多位參賽者是撰寫和測試有關的題目，如果讀者對於測試想要有更多了解，也歡迎去閱讀這些內容。</p><p>最後，還是鼓勵大家從「為你自己開始寫測試」，程式是你寫的，而你必須為你寫的程式負責。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"參考資料\">參考資料<a href=\"#參考資料\" class=\"hash-link\" aria-label=\"參考資料的直接連結\" title=\"參考資料的直接連結\">​</a></h2><ul><li><a href=\"https://testing-library.com/docs/queries/about/\" target=\"_blank\" rel=\"noopener noreferrer\">About Queries</a> @ testing-library</li><li><a href=\"https://testing-library.com/docs/dom-testing-library/api-debugging\" target=\"_blank\" rel=\"noopener noreferrer\">Debugging</a> @ testing-library</li><li><a href=\"https://javascript.plainenglish.io/5-tips-to-perfect-react-testing-library-queries-ae4e49f27858\" target=\"_blank\" rel=\"noopener noreferrer\">5 Tips to Perfect React Testing Library Queries</a> @ Medium Premium</li><li><a href=\"https://www.npmjs.com/package/babel-plugin-react-remove-properties#usage\" target=\"_blank\" rel=\"noopener noreferrer\">babel-plugin-react-remove-properties</a> @ npm</li></ul></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  },
  "hironman-2021 [Day30]<!-- --> 淺談重構（refactoring）與兩把刷子 pjchender.dev": {
    "prefix": "hironman-2021 [Day30]<!-- --> 淺談重構（refactoring）與兩把刷子 pjchender.dev",
    "type": "html",
    "isCode": false,
    "body": [
      "<div><h1>[Day30]<!-- --> 淺談重構（refactoring）與兩把刷子</h1><p>鐵人賽的最後一天，讓我們先來簡單的聊聊重構，這部分是筆者之前在看「<a href=\"https://www.tenlong.com.tw/products/9789865027780\" target=\"_blank\" rel=\"noopener noreferrer\">大規模重構</a>」這本書時整理的內容，目前只看了前幾章，所以能分享的還很有限，但到目前為止我很喜歡作者的觀點和態度。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"重構的-what-和-why\">重構的 what 和 why？<a href=\"#重構的-what-和-why\" class=\"hash-link\" aria-label=\"重構的 what 和 why？的直接連結\" title=\"重構的 what 和 why？的直接連結\">​</a></h2><p>重構（refactoring）指的是「在不改變外部行為的情況下，重組程式碼的過程」，也就是對於一般的使用者來說，重構前後的差異是不會被感覺出來的，而重構的目的是把原本隱晦、不易理解的程式邏輯、語法、撰寫風格等轉換成對其他開發者更容易上手和友善的程式碼。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"先測試再重構\">先測試、再重構<a href=\"#先測試再重構\" class=\"hash-link\" aria-label=\"先測試、再重構的直接連結\" title=\"先測試、再重構的直接連結\">​</a></h2><p>有些時候或多或少都會有一種想要重構自己或他人程式碼的衝動，但要特別留意的是，在還沒有足夠的測試覆蓋率前，千萬不要貿然重構，因為有不小的機會，會改壞了某個功能而不自知，很多看起來莫名其妙的程式碼，常常有它的涵義在，可能是針對當下的某個 bug 採取的某種 work around，也可能是後來的開發者因為需求變更而隨手加上的邏輯，總之， <strong>當你有一種「蛤，這在寫什麼」的感覺，有一種想要直接把它刪掉的衝動時，就更要小心！</strong> 不是不要重構它，而是要更小心謹慎的處理它。</p><p>可能的話千萬記得，先測試、再重構。</p><p>另外，重構時還有一種情境很常遇到，就是原本只想改重構某個範圍的程式碼，但改者改者卻發現這個功能到處都被使用、有彼此相依的情況，進而導致重構的範圍越來越大，又或是進入了某種重構的心流後，一發不可收拾，甚至開始包山包海。這幾種情況都要特別留意，因為很容易讓 Code Review 的人很難看懂，如果可以，請試著把重構範圍縮限在他人能夠審視的範圍（這句話其實是特別在跟我自己說的，對不起了同事，傷了你們的眼睛 🧎‍♂️）。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"了解當時程式的撰寫脈絡\">了解當時程式的撰寫脈絡<a href=\"#了解當時程式的撰寫脈絡\" class=\"hash-link\" aria-label=\"了解當時程式的撰寫脈絡的直接連結\" title=\"了解當時程式的撰寫脈絡的直接連結\">​</a></h2><p>當你試著要開始重構某段程式碼時，可能的話也可以和當初處理這段程式的人稍微討論看看（git blame 是個好東西），了解當初會這樣寫是否有什麼原因，如此，你就有機會避開前人處理過的地雷，否則別人當時這麼做可能是為了讓你不要踩到這個洞，但你卻挖了個洞給自己跳。</p><blockquote><p>書中這句話是這麼寫的：「每行『壞』程式碼也同樣是要試圖解決某個問題。如果盲目地重構它，你可能招惹原作者小心翼翼避開的臭蟲或陷阱。」</p></blockquote><p>和當初的開發者討論，除了能幫到自己外，也可能幫到對方，也許對方開發時真的沒注意到這樣的寫法有什麼不妥，與對方討論更可以讓對方有再次思考和學習的機會，我想只要態度是開放的，大家都很願意互相學習改進，現在你發現了這個問題與他討論，未來或許自己寫的程式有問題時，對方也會願意和你討論，雙方都能有互相進步和成長的機會。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"為你自己開始重構\">為你自己開始重構<a href=\"#為你自己開始重構\" class=\"hash-link\" aria-label=\"為你自己開始重構的直接連結\" title=\"為你自己開始重構的直接連結\">​</a></h2><p>最後，和測試一樣，當產品時程很趕的時候，通常很難會有額外重構的時間，但還是要多體貼三個月後的自己，如果現在寫的自己就已經看不懂的話，怎麼能期待他人或三個月後的自己看懂呢？有些時候你不需要一段完整的時間來進行重構，可以針對這次發的 Pull Request，自己再看過一次，想想有沒有什麼更好的寫法就很足夠了。</p><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"後記react-前端工程師的兩把刷子\">後記：React 前端工程師的兩把刷子<a href=\"#後記react-前端工程師的兩把刷子\" class=\"hash-link\" aria-label=\"後記：React 前端工程師的兩把刷子的直接連結\" title=\"後記：React 前端工程師的兩把刷子的直接連結\">​</a></h2><p>開始這次鐵人賽後，周圍就常聽到有人撿到新的刷子，不然就是希望我用刷子幫忙刷東西...XD。這次之所以會決定參賽，起初完全是同事 Ken 說服我，說一天只要 300 字，隨便一篇 3000 字的文章就可以拆成好幾天了，想想好像蠻有道理的，過去曾參加過鐵人賽、深知最大的敵人不是系統字數而是自己的我，還是好傻好天真的相信了。話雖這樣說，但 Ken 也是真的每天和我一起趕稿的好隊友。</p><p>BTW，他昨天午夜在寫最後一天文章時，突然對我飆罵髒話，我想說怎麼了，難道是睡過頭忘了發嗎？原來是因為他直接在鐵人賽網站用內建的編輯器寫文章時，快寫完的時候不小把視窗關了！所以原本寫的東西都...都...從記憶體揮發了...，懇請大家可以去他最後一天的文章給他一點鼓勵...畢竟他真的寫了兩次（傳送門：<a href=\"https://ithelp.ithome.com.tw/articles/10281551\" target=\"_blank\" rel=\"noopener noreferrer\">Day 30 - Finite State Machine x XState 推薦學習資源</a>）。</p><p>一開始我訂的題目其實是「今晚我想來點筆記時間」，目的就是督促自己每天看一點新東西，然後做個紀錄就好，符合一天 300 字的原則，後來某天晚上洗澡時，突然想的，想說不然來整理一下 TypeScript 和測試的內容好了，於是刷子的題目就這樣出來了。</p><p>除了同事 Ken 的鼓吹之外，推倒駱駝，讓我馬上決定答應要參加的則是前同事 <a href=\"https://ithelp.ithome.com.tw/users/20141641\" target=\"_blank\" rel=\"noopener noreferrer\">ycchiuuuu</a> 和 <a href=\"https://ithelp.ithome.com.tw/users/20141729\" target=\"_blank\" rel=\"noopener noreferrer\">Jen</a> 的詢問，他們都是我在前公司就很喜歡的夥伴，所以我很快就答應了。真的好在有參與組隊，特別是在我寫完 TypeScript 的內容後，覺得已經滿足個人目標、有點沒有方向下一個要寫什麼的時候，因為有了不能讓團隊因我而棄賽的壓力，於是就每天一篇又一篇的產出來了。還記得有一天，原本每天都最準時發文的隊友突然還沒發文且失聯，心裡不禁一想，難道我們要斷賽在今天了？然後，我...我終於就可以不要是因為我而鬆一口氣了嗎？</p><p>看到今天就知道我隊友最後還是有在當天發文，而且還依然是我們三個裡面最早發的 XD。</p><p>最後，感謝有 follow 本文章的讀者，同事 <a href=\"https://ithelp.ithome.com.tw/users/20111948/profile\" target=\"_blank\" rel=\"noopener noreferrer\">Andy</a> 和 <a href=\"https://ithelp.ithome.com.tw/users/20113277/profile\" target=\"_blank\" rel=\"noopener noreferrer\">Kyle</a> 雖然老是在底下留幹話，跟我說他原本都只會用 <code>any</code>...，但還是很謝謝你們的留言，特別是在後期幾乎沒有讀者回覆時，讓我的文章還能保有一點點熱度和回應，也謝謝 <a href=\"https://ithelp.ithome.com.tw/users/20116003/profile\" target=\"_blank\" rel=\"noopener noreferrer\">TD</a> 告訴我他覺得我的內容對讀者是有幫助的，而且他還說看完後他決定明年要在認真參加一波（咦？），大家明年敬請期待 TD 帶來更精彩的內容！？</p><p>總之，今年很開心能再次完賽，終於可以放心的喊出「<a href=\"https://ithelp.ithome.com.tw/2021ironman/signup/team/206\" target=\"_blank\" rel=\"noopener noreferrer\">鐵人賽臻融一</a>」～！。</p></div>",
      "<style>.buttonGroup__atx{display:none;}",
      "pre {background-color: rgb(41,45,62);}</style>"
    ],
    "description": "https://pjchender.dev"
  }
}